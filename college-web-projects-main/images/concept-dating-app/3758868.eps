%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: dating app concept - up-02.eps
%%Creator: Adobe Illustrator(R) 24.0
%%For: Ayib Makmun B9
%%CreationDate: 4/20/2020
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.0.1 x341 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: font FiraSans-Book
%%+ font Courgette-Regular
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: FiraSans-Book
%%+ Courgette-Regular
%%DocumentNeededFonts: FiraSans-Book
%%+ Courgette-Regular
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c148 79.164050, 2019/10/01-18:03:16        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">dating app concept - up-02</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2020-04-20T16:09:55+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-04-20T16:09:55+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2020-04-20T16:09:55+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator 24.0 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9R4WLsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:b37fcebd-4faa-4e46-9e08-501363f368f2</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:b37fcebd-4faa-4e46-9e08-501363f368f2</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:101822d6-bf0d-48c0-8ea2-fe74165350e8</stRef:instanceID>
            <stRef:documentID>xmp.did:4fe9dc77-6553-c747-bc5b-8e9e5834d81d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b37fcebd-4faa-4e46-9e08-501363f368f2</stEvt:instanceID>
                  <stEvt:when>2020-04-20T16:09:55+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>Courgette-Regular</stFnt:fontName>
                  <stFnt:fontFamily>Courgette</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>TrueType</stFnt:fontType>
                  <stFnt:versionString>Version 1.002</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Courgette-Regular.ttf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>FiraSans-Book</stFnt:fontName>
                  <stFnt:fontFamily>Fira Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Book</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 4.203;PS 004.203;hotconv 1.0.88;makeotf.lib2.5.64775</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>FiraSans-Book.otf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=24 G=24 B=56 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>24</xmpG:red>
                           <xmpG:green>24</xmpG:green>
                           <xmpG:blue>56</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Farm</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=71 B=124</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>124</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=3 G=37 B=78</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>3</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>78</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 8</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=195 G=211 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>195</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=220 G=232 B=239</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>220</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=251 B=252 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>251</xmpG:green>
                           <xmpG:blue>252</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Color Group 5</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=86 G=84 B=140</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>86</xmpG:red>
                           <xmpG:green>84</xmpG:green>
                           <xmpG:blue>140</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=43 B=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>43</xmpG:green>
                           <xmpG:blue>70</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=244 G=178 B=152 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>244</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Kulit orang</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>175</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>65</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>66</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=80</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>88</xmpG:red>
                           <xmpG:green>89</xmpG:green>
                           <xmpG:blue>91</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=70</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>109</xmpG:red>
                           <xmpG:green>110</xmpG:green>
                           <xmpG:blue>113</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=60</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>130</xmpG:green>
                           <xmpG:blue>133</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=50</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>149</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=40</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>167</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>172</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>188</xmpG:red>
                           <xmpG:green>190</xmpG:green>
                           <xmpG:blue>192</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=20</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>209</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>212</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=10</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>231</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=5</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 500 mo
0 500 li
0 0 li
500 0 li
500 500 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.976471 .984314 .988235 rgb
f
406.597 90.793 mo
395.402 90.793 li
395.605 90.2783 395.727 89.7227 395.727 89.1377 cv
395.727 86.6348 393.679 84.5859 391.175 84.5859 cv
385.812 84.5859 li
385.902 84.1162 385.954 83.6328 385.954 83.1377 cv
385.954 78.9277 382.509 75.4824 378.299 75.4824 cv
366.654 75.4824 li
362.443 75.4824 358.999 78.9277 358.999 83.1377 cv
358.999 83.6328 359.051 84.1162 359.142 84.5859 cv
331.504 84.5859 li
329 84.5859 326.952 86.6348 326.952 89.1377 cv
326.952 89.7227 327.073 90.2783 327.276 90.793 cv
319.981 90.793 li
318.389 90.793 317.085 92.0967 317.085 93.6895 cv
317.085 95.2822 318.389 96.5859 319.981 96.5859 cv
406.597 96.5859 li
408.19 96.5859 409.493 95.2822 409.493 93.6895 cv
409.493 92.0967 408.19 90.793 406.597 90.793 cv
cp
.862745 .937255 .968627 rgb
f
105.374 88.1035 mo
108.666 88.1035 li
108.659 87.9658 108.645 87.8291 108.645 87.6895 cv
108.645 83.1377 112.369 79.4141 116.92 79.4141 cv
128.25 79.4141 li
128.004 78.8408 127.867 78.2119 127.867 77.5518 cv
127.867 74.9346 130.008 72.793 132.625 72.793 cv
156.244 72.793 li
158.861 72.793 161.003 74.9346 161.003 77.5518 cv
161.003 78.2119 160.865 78.8408 160.619 79.4141 cv
188.093 79.4141 li
192.645 79.4141 196.368 83.1377 196.368 87.6895 cv
196.368 87.8291 196.354 87.9658 196.348 88.1035 cv
202.423 88.1035 li
205.495 88.1035 208.009 90.6172 208.009 93.6895 cv
208.009 96.7617 205.495 99.2764 202.423 99.2764 cv
105.374 99.2764 li
102.301 99.2764 99.7871 96.7617 99.7871 93.6895 cv
99.7871 90.6172 102.301 88.1035 105.374 88.1035 cv
cp
f
386.898 83.9453 mo
386.898 83.9453 336.774 124.121 336.774 201.394 cv
336.774 278.665 386.898 316.064 386.898 316.064 cv
386.898 316.064 437.022 278.665 437.022 201.394 cv
437.022 124.121 386.898 83.9453 386.898 83.9453 cv
cp
level3{
gsave
clp
[100.511 174.09 -174.09 100.511 336.294 113.162 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.776471 .87451 .94902 ]
/C1 [.47451 .560784 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.47451 .560784 1 ]
/C1 [.47451 .560784 1 ]
/N 1.7261 
>>
]
/Bounds [.998965 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[100.511 174.09 -174.09 100.511 336.294 113.162 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`l5p9`5KU3_o'@._SX.*_8*k%^V@Ou^:q=p]tM(k]Y(kg]=PSb\[f8]\@B&X\$rfS[^NTO[C!<JZa7!E
ZEgd@Z*CO;Yct=7YHG%2Xf\_-XK8M(X/i8#Wi;tsWMlboVl-GiVP^5eV59u`Una][US=KWTqS0QTV.sM
T:_^HSt2FCSXc4?S"#n9R[T\5R@0G0R$X/+Q^3r'Q'IW!Pa%DrPEV/mP*(lhOcYZdO,o?^NfK*YNK&mU
N/NUPMMd:KM2@(FLkphALPLV=L4t>8KS5#3K7ef.JqAQ)JUr?%J:E&uIXZ`pI=6NkI!g9fH[C'bH?jd]
~>
<~hqm5Hh;-oBgt^Z=gY1B8g"G'3f\"j.f@SU)f%&=$eC<!te'ldodaHOjdEp7ecd0q`cHa_[c-=JVbfe2Q
b0%lLaiVZGaN2EBa2Z-=`Pog8`5KU3_o'@._SO()^qdb$^V@Ot^:q:o]tD"j]=Y\e]"5J`\[f5[\@8rV
[^NWQ[C*EL['[0GZa-mBZ*CR=Yct@8YHP+3Y-"h.XK8M)X/i;$WiE%tWMlboVl-GjVP^5eV59u`Una][
U8"BUTqS0QTV.pLT:VXGSXl=AS=H+=S"#k8R[KS3R$a8-Q^=&)QBmf$Q'@MtPEV2nP*1ujOcb`eOH5H`
~>
<~o()ABo()ABo()ABo()ABo()ABoCMSFoCMSFoCMSFoCMSFoCMSFo^qeJo^qeJo^qeJo^qeJo^qeJp%A"N
p%A"Np%A"Np%A"Np%A"Op@e4Rp@e4Rp@e4Rp@e4Rp@e4Sp\4FVp\4FVp\4FVp\4FVp\4FWq"XXZq"XXZ
q"XXZq"XXZq"X[\q>'j^q>'j^q>'j^q>'j^q>'m`qYL'bqYL'bqYL'bqYL'bqYL*dqtp9fqtp9fqtp9f
qtp9fqu$Bir;?Kjr;?Kjr;?Kjr;?Kjr;HTmrVc]nrVc]nrVc]nrVc]nrVlfqrr2orrr2orrr2orrr2or
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
412.126 247.197 mo
390.57 266.644 li
388.236 184.264 li
385.561 184.264 li
383.227 232.228 li
354.901 206.111 li
383.227 236.832 li
383.227 399.354 li
390.57 399.354 li
390.57 271.093 li
412.126 247.197 li
cp
level3{
gsave
clp
[94.3899 163.488 -163.488 94.3899 339.12 211.076 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.337255 .329412 .54902 ]
/C1 [.2 0 .498039 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[94.3899 163.488 -163.488 94.3899 339.12 211.076 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~<`N."<E3%!<)cgr<)cgq;c?Un;c?Rl;GpCj;Gp@h;,L1f;,C(c:f'tb:JXb^:JXb^:/4PZ:/4PY9he>V
9he;T9MA,R9MA)P91qoN91hfK8kM]J8P)KF8P)KF84Z9B84Z9A7n6'>7n6$<7Rfj:7Rfg877BX6779O3
6psF26UO4.6UO4-6:+"*6:+")5s[e&5s[b$5X7S"5X.It5<h@s5<_7p5!D.o4Ztqk4Ztqj4?P_g4?P_f
4$,Mc4$,Ja3]];_3]T2\3B9)[3B/uX3&ilW2`EZS2`EZR2E!HO2E!HN2)R6K2)R3I1c.$G1c$pD1G^gC
~>
<~<)Z^o;GpCi;,L.d:esk_:/4PY9he;T9M8#O8kM]I8P)HD84Q0?7Rfj977BU46pj=/6:+")5s[b$5X.It
5<_7p4Ztqj4?P\e4$#D`3B9)Z3&iiU2`<QP2)R6J1c.!E1GU^@0ekC:0JG.50.nk0/M/P*/1`;%.k3"u
.Oceq-n$Jk-RU5f-7'ra,U=W[,9nBV+sA*Q+<VdK+!2OF*ZZ7A*#oq;)]K\6)AsD1(`4)+(Ddi&()7Q!
'GM5q',)#l&eYcg&J,Kb%hB0\%LrpW%1EXR$O[=L$47(G#m^eB#6tJ<"pP57"U"r2!s8W,!WiB'!<<*"
~>
<~N/NUPMi3LOMi3LOMi3LOMi3LOMMd:KMMd:KMMd:KMMd:KMMd:KM2@(GM2@(GM2@(GM2@(GM2@(GLkpkC
LkpkCLkpkCLkpkCLkpkBLPLY?LPLY?LPLY?LPLY?LPLY>L5(G;L5(G;L5(G;L5(G;L5(G:KnY57KnY57
KnY57KnY57KnY25KS5#3KS5#3KS5#3KS5#3KS4u1K7ef/K7ef/K7ef/K7ef/K7ec-JqAT+JqAT+JqAT+
JqAT+Jq8K(JUrB'JUrB'JUrB'JUrB'JUi9$J:N0#J:N0#J:N0#J:N0#J:E&uIt)rtIt)rtIt)rtIt)rt
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
116.969 116.032 mo
116.969 116.032 72.27 151.86 72.27 220.77 cv
72.27 289.679 116.969 323.03 116.969 323.03 cv
116.969 323.03 161.669 289.679 161.669 220.77 cv
161.669 151.86 116.969 116.032 116.969 116.032 cv
cp
level3{
gsave
clp
[89.6327 155.248 -155.248 89.6327 71.8416 142.087 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[89.6327 155.248 -155.248 89.6327 71.8416 142.087 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
139.467 261.617 mo
120.244 278.958 li
118.163 205.493 li
115.776 205.493 li
113.695 248.267 li
88.4351 224.977 li
113.695 252.373 li
113.695 397.307 li
120.244 397.307 li
120.244 282.926 li
139.467 261.617 li
cp
level3{
gsave
clp
[84.1744 145.794 -145.794 84.1744 74.3617 229.404 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[84.1744 145.794 -145.794 84.1744 74.3617 229.404 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
416.991 442.934 mo
78.3906 442.934 li
73.4336 442.934 69.415 438.915 69.415 433.958 cv
69.415 429.001 73.4336 424.982 78.3906 424.982 cv
416.991 424.982 li
421.948 424.982 425.967 429.001 425.967 433.958 cv
425.967 438.915 421.948 442.934 416.991 442.934 cv
cp
.862745 .909804 .937255 rgb
f
358.759 405.08 mo
426.77 405.08 li
428.907 405.08 430.656 403.331 430.656 401.193 cv
430.656 399.056 428.907 397.307 426.77 397.307 cv
358.759 397.307 li
356.621 397.307 354.872 399.056 354.872 401.193 cv
354.872 403.331 356.621 405.08 358.759 405.08 cv
cp
f
151.791 409.207 mo
77.5601 409.207 li
75.3564 409.207 73.5532 407.404 73.5532 405.2 cv
73.5532 402.996 75.3564 401.193 77.5601 401.193 cv
151.791 401.193 li
153.995 401.193 155.798 402.996 155.798 405.2 cv
155.798 407.404 153.995 409.207 151.791 409.207 cv
cp
f
177.579 428.813 mo
94.5732 428.813 li
91.0215 428.813 88.1157 425.907 88.1157 422.356 cv
88.1157 418.805 91.0215 415.899 94.5732 415.899 cv
177.579 415.899 li
181.13 415.899 184.036 418.805 184.036 422.356 cv
184.036 425.907 181.13 428.813 177.579 428.813 cv
cp
f
342.763 428.813 mo
259.757 428.813 li
256.206 428.813 253.3 425.907 253.3 422.356 cv
253.3 418.805 256.206 415.899 259.757 415.899 cv
342.763 415.899 li
346.314 415.899 349.22 418.805 349.22 422.356 cv
349.22 425.907 346.314 428.813 342.763 428.813 cv
cp
f
207.549 450.51 mo
305.827 450.51 li
310.379 450.51 314.104 446.785 314.104 442.233 cv
314.104 437.682 310.379 433.958 305.827 433.958 cv
207.549 433.958 li
202.997 433.958 199.273 437.682 199.273 442.233 cv
199.273 446.785 202.997 450.51 207.549 450.51 cv
cp
f
159.878 452.542 mo
193.869 452.542 li
195.49 452.542 196.816 451.216 196.816 449.595 cv
196.816 447.974 195.49 446.647 193.869 446.647 cv
159.878 446.647 li
158.257 446.647 156.93 447.974 156.93 449.595 cv
156.93 451.216 158.257 452.542 159.878 452.542 cv
cp
f
420.645 337.88 mo
423.819 338.976 420.206 359.833 409.806 400.454 cv
406.25 400.454 402.488 400.454 398.567 400.454 cv
404.263 384.783 409.605 368.979 414.701 353.097 cv
414.978 352.229 414.46 352.077 414.146 352.902 cv
408.133 368.621 402.438 384.481 397.101 400.454 cv
394.116 400.454 391.047 400.454 387.906 400.454 cv
406.38 357.585 417.292 336.728 420.645 337.88 cv
cp
level3{
gsave
clp
[24.5611 42.5411 -42.5411 24.5611 394.744 352.428 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.596078 .717647 1 ]
/C1 [.462745 .537255 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.462745 .537255 1 ]
/C1 [.462745 .537255 1 ]
/N 1.7261 
>>
]
/Bounds [.998965 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[24.5611 42.5411 -42.5411 24.5611 394.744 352.428 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~R$X/+Q^=&*QBmi&QBmi&Q'IW"Q'IW!Pa%DsPa%DrPEV2oPEV/mP*1ukP*1riOcbcgOcYZdOH>QcOH5H`
O,o?_NfK-[NfK-[NK&pWNK&pVN/W^SN/W^RMi3LOMi3IMMMd:KMMd7IM2@(GM26tDLkpkCLkgb@LPLY?
L5(G;L5(G;KnY57KnY56KS5#3KS5#2K7ef/K7ec-JqAT+JqAQ)JUrB'JUi9$J:N0#J:E&uIt)rtIsuiq
IXZ`pI=6NlI=6NlI!g<hI!g<gH[C*dH[C*cH?sm`H?sj^H$O[\H$OXZG^+IXG^"@UGB\7TGBS.QG'8%P
~>
<~\$i`R[^NTO[C*EM['[3I['R*FZa7!DZEgdAZ*CR=Z*CO;Yct@8YHP.5YHG%2Y-+q0Xf\_-XK8M)XK8J'
X/i;$WiE)!Wi;tsWMuhpW2QYnVl-GjVl$>gVP^5eV5:#bV50o_Unjc\USFTZU8"BVU7n9STqS0QTV.sN
T:_aJT:_^HSt;OESXl=BSXc4?S=H+=S"#n:R[T\6R[TY4R@0J1R$a8.R$X/+Q^=#(QBmi&Q'IW"Q'ISu
Pa%DrPEV2oPEM)lP*1riOcbcgOH>QcOH5H`O,o?^NfK-[NK&pWNK&mUN/W^SMi3LOMi*CLMMd:JM2@(G
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
414.146 352.902 mo
414.46 352.077 414.978 352.229 414.701 353.097 cv
409.605 368.979 404.263 384.783 398.567 400.454 cv
398.082 400.454 397.593 400.454 397.101 400.454 cv
402.438 384.481 408.133 368.621 414.146 352.902 cv
cp
.337255 .396078 .937255 rgb
f
380.765 400.454 mo
376.752 400.454 372.752 400.454 368.799 400.454 cv
368.9 396 li
369.11 388.168 li
369.431 377.726 369.751 367.284 370.072 356.84 cv
370.727 335.946 371.38 315.048 372.034 294.154 cv
372.085 292.487 371.542 292.513 371.443 294.126 cv
370.184 314.98 369.187 335.874 368.494 356.776 cv
368.148 367.228 367.897 377.682 367.751 388.136 cv
367.678 395.978 li
367.672 400.454 li
363.151 400.454 358.7 400.454 354.367 400.454 cv
362.961 304.897 368.701 271.404 372.59 271.557 cv
376.466 271.706 379.584 305.308 380.765 400.454 cv
cp
level3{
gsave
clp
[57.9145 100.311 -100.311 57.9145 337.988 291.403 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.9145 100.311 -100.311 57.9145 337.988 291.403 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
371.443 294.126 mo
371.542 292.513 372.085 292.487 372.034 294.154 cv
371.38 315.048 370.727 335.946 370.072 356.84 cv
369.751 367.284 369.431 377.726 369.11 388.168 cv
368.9 396 li
368.799 400.454 li
368.425 400.454 368.047 400.454 367.672 400.454 cv
367.678 395.978 li
367.751 388.136 li
367.897 377.682 368.148 367.228 368.494 356.776 cv
369.187 335.874 370.184 314.98 371.443 294.126 cv
cp
.337255 .396078 .937255 rgb
f
358.683 400.454 mo
356.34 400.454 354.038 400.454 351.781 400.454 cv
351.505 377.564 350.556 354.665 349.181 331.794 cv
349.124 330.822 348.584 330.873 348.594 331.816 cv
348.797 354.699 349.556 377.611 350.931 400.454 cv
347.756 400.454 344.676 400.454 341.718 400.454 cv
342.571 347.401 345.515 312.038 348.003 311.958 cv
350.635 311.876 354.197 341.379 358.683 400.454 cv
cp
level3{
gsave
clp
[41.0067 71.0258 -71.0258 41.0067 326.594 324.279 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[41.0067 71.0258 -71.0258 41.0067 326.594 324.279 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
351.781 400.454 mo
351.495 400.454 351.213 400.454 350.931 400.454 cv
349.556 377.611 348.797 354.699 348.594 331.816 cv
348.584 330.873 349.124 330.822 349.181 331.794 cv
350.556 354.665 351.505 377.564 351.781 400.454 cv
cp
.337255 .396078 .937255 rgb
f
345.93 400.454 mo
343.622 400.454 341.396 400.454 339.264 400.454 cv
336.123 385.189 332.46 370.03 328.463 354.957 cv
328.275 354.246 327.755 354.392 327.888 355.09 cv
330.834 370.304 334.225 385.447 338.095 400.454 cv
334.714 400.454 331.587 400.454 328.761 400.454 cv
323.669 361.678 322.475 342.011 325.183 341.458 cv
327.971 340.89 334.885 360.554 345.93 400.454 cv
cp
level3{
gsave
clp
[30.7483 53.2576 -53.2576 30.7483 314.098 347.822 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.7483 53.2576 -53.2576 30.7483 314.098 347.822 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
339.264 400.454 mo
338.869 400.454 338.481 400.454 338.095 400.454 cv
334.225 385.447 330.834 370.304 327.888 355.09 cv
327.755 354.392 328.275 354.246 328.463 354.957 cv
332.46 370.03 336.123 385.189 339.264 400.454 cv
cp
.337255 .396078 .937255 rgb
f
412.249 304.45 mo
415.105 305.358 408.083 337.356 391.185 400.454 cv
387.829 400.454 384.426 400.454 381.003 400.454 cv
389.816 374.989 398.194 349.354 406.28 323.635 cv
406.684 322.353 406.159 322.219 405.722 323.448 cv
396.651 348.963 387.949 374.653 379.686 400.454 cv
377.143 400.454 374.59 400.454 372.037 400.454 cv
395.905 335.521 409.309 303.517 412.249 304.45 cv
cp
level3{
gsave
clp
[36.3883 63.0263 -63.0263 36.3883 376.356 324.98 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.3883 63.0263 -63.0263 36.3883 376.356 324.98 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
405.722 323.448 mo
406.159 322.219 406.684 322.353 406.28 323.635 cv
398.194 349.354 389.816 374.989 381.003 400.454 cv
380.565 400.454 380.123 400.454 379.686 400.454 cv
387.949 374.653 396.651 348.963 405.722 323.448 cv
cp
.337255 .396078 .937255 rgb
f
158.428 352.786 mo
161.076 353.7 158.062 371.103 149.385 404.993 cv
146.418 404.993 143.279 404.993 140.008 404.993 cv
144.76 391.919 149.218 378.733 153.469 365.481 cv
153.699 364.759 153.268 364.631 153.006 365.319 cv
147.989 378.435 143.236 391.667 138.784 404.993 cv
136.294 404.993 133.733 404.993 131.113 404.993 cv
146.526 369.227 155.631 351.824 158.428 352.786 cv
cp
level3{
gsave
clp
[20.4921 35.4934 -35.4934 20.4921 136.818 364.924 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[20.4921 35.4934 -35.4934 20.4921 136.818 364.924 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
153.006 365.319 mo
153.268 364.631 153.699 364.759 153.469 365.481 cv
149.218 378.733 144.76 391.919 140.008 404.993 cv
139.603 404.993 139.195 404.993 138.784 404.993 cv
143.236 391.667 147.989 378.435 153.006 365.319 cv
cp
.337255 .396078 .937255 rgb
f
125.155 404.993 mo
121.807 404.993 118.469 404.993 115.171 404.993 cv
115.256 401.277 li
115.431 394.742 li
115.698 386.03 115.966 377.319 116.233 368.604 cv
116.779 351.173 117.325 333.736 117.871 316.305 cv
117.913 314.914 117.46 314.935 117.377 316.28 cv
116.326 333.681 115.494 351.111 114.917 368.552 cv
114.628 377.271 114.419 385.994 114.297 394.716 cv
114.236 401.259 li
114.231 404.993 li
110.459 404.993 106.746 404.993 103.13 404.993 cv
110.3 325.268 115.089 297.323 118.334 297.45 cv
121.568 297.574 124.169 325.609 125.155 404.993 cv
cp
level3{
gsave
clp
[48.32 83.6927 -83.6927 48.32 89.4651 314.008 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[48.32 83.6927 -83.6927 48.32 89.4651 314.008 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
117.377 316.28 mo
117.46 314.935 117.913 314.914 117.871 316.305 cv
117.325 333.736 116.779 351.173 116.233 368.604 cv
115.966 377.319 115.698 386.03 115.431 394.742 cv
115.256 401.277 li
115.171 404.993 li
114.859 404.993 114.543 404.993 114.231 404.993 cv
114.236 401.259 li
114.297 394.716 li
114.419 385.994 114.628 377.271 114.917 368.552 cv
115.494 351.111 116.326 333.681 117.377 316.28 cv
cp
.337255 .396078 .937255 rgb
f
106.731 404.993 mo
104.776 404.993 102.856 404.993 100.973 404.993 cv
100.742 385.896 99.9502 366.79 98.8032 347.708 cv
98.7559 346.897 98.3057 346.94 98.3135 347.727 cv
98.4829 366.819 99.1157 385.936 100.263 404.993 cv
97.6143 404.993 95.0449 404.993 92.5762 404.993 cv
93.2886 360.729 95.7441 331.225 97.8208 331.158 cv
100.017 331.09 102.988 355.705 106.731 404.993 cv
cp
level3{
gsave
clp
[34.2133 59.2592 -59.2592 34.2133 79.9583 341.438 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[34.2133 59.2592 -59.2592 34.2133 79.9583 341.438 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
100.973 404.993 mo
100.734 404.993 100.499 404.993 100.263 404.993 cv
99.1157 385.936 98.4829 366.819 98.3135 347.727 cv
98.3057 346.94 98.7559 346.897 98.8032 347.708 cv
99.9502 366.79 100.742 385.896 100.973 404.993 cv
cp
.337255 .396078 .937255 rgb
f
96.0908 404.993 mo
94.165 404.993 92.3086 404.993 90.5288 404.993 cv
87.9087 392.258 84.8521 379.61 81.5171 367.034 cv
81.3608 366.44 80.9268 366.563 81.0381 367.145 cv
83.4961 379.838 86.3252 392.473 89.5537 404.993 cv
86.7329 404.993 84.1235 404.993 81.7666 404.993 cv
77.5176 372.642 76.5215 356.231 78.7813 355.771 cv
81.1069 355.297 86.876 371.703 96.0908 404.993 cv
cp
level3{
gsave
clp
[25.6543 44.4346 -44.4346 25.6543 69.5322 361.081 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[25.6543 44.4346 -44.4346 25.6543 69.5322 361.081 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
90.5288 404.993 mo
90.2002 404.993 89.8765 404.993 89.5537 404.993 cv
86.3252 392.473 83.4961 379.838 81.0381 367.145 cv
80.9268 366.563 81.3608 366.44 81.5171 367.034 cv
84.8521 379.61 87.9087 392.258 90.5288 404.993 cv
cp
.337255 .396078 .937255 rgb
f
151.423 324.895 mo
153.807 325.651 147.947 352.349 133.848 404.993 cv
131.048 404.993 128.209 404.993 125.354 404.993 cv
132.707 383.747 139.696 362.358 146.443 340.901 cv
146.779 339.831 146.343 339.72 145.977 340.744 cv
138.409 362.033 131.149 383.467 124.254 404.993 cv
122.133 404.993 120.003 404.993 117.873 404.993 cv
137.787 350.817 148.97 324.115 151.423 324.895 cv
cp
level3{
gsave
clp
[30.3599 52.585 -52.585 30.3599 121.476 342.023 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[30.3599 52.585 -52.585 30.3599 121.476 342.023 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
145.977 340.744 mo
146.343 339.72 146.779 339.831 146.443 340.901 cv
139.696 362.358 132.707 383.747 125.354 404.993 cv
124.988 404.993 124.62 404.993 124.254 404.993 cv
131.149 383.467 138.409 362.033 145.977 340.744 cv
cp
.337255 .396078 .937255 rgb
f
178.404 432.444 mo
169.042 432.444 161.425 424.827 161.425 415.464 cv
161.425 112.762 li
161.425 103.405 169.042 95.7929 178.404 95.7929 cv
321.674 95.7929 li
323.05 95.7929 324.394 95.9531 325.672 96.2696 cv
333.306 98.1026 338.643 104.886 338.643 112.762 cv
338.643 415.464 li
338.643 424.827 331.03 432.444 321.674 432.444 cv
178.404 432.444 li
.0117647 .145098 .305882 rgb
f
321.674 94.793 mo
178.404 94.793 li
168.49 94.793 160.425 102.854 160.425 112.762 cv
160.425 415.464 li
160.425 425.378 168.49 433.444 178.404 433.444 cv
321.674 433.444 li
331.582 433.444 339.643 425.378 339.643 415.464 cv
339.643 112.762 li
339.643 104.422 333.991 97.2393 325.898 95.2949 cv
324.558 94.9629 323.132 94.793 321.674 94.793 cv
cp
321.674 96.793 mo
322.969 96.793 324.229 96.9424 325.432 97.2402 cv
332.442 98.9238 337.643 105.235 337.643 112.762 cv
337.643 415.464 li
337.643 424.285 330.495 431.444 321.674 431.444 cv
178.404 431.444 li
169.584 431.444 162.425 424.285 162.425 415.464 cv
162.425 112.762 li
162.425 103.941 169.584 96.793 178.404 96.793 cv
321.674 96.793 li
.596078 .627451 .647059 rgb
f
322.521 414.182 mo
177.557 414.182 li
169.206 414.182 162.425 407.411 162.425 399.049 cv
162.425 375.977 li
199.16 353.333 241.382 320.667 269.632 278.163 cv
275.187 281.954 281.902 284.171 289.135 284.171 cv
308.265 284.171 323.773 268.662 323.773 249.532 cv
323.773 237.861 318.001 227.539 309.157 221.262 cv
321.046 203.426 330.644 185.16 337.64 167.19 cv
337.64 129.18 li
337.64 122.48 333.28 116.79 327.24 114.82 cv
324.244 139.513 317.055 174.737 300.271 216.722 cv
296.776 215.536 293.03 214.893 289.135 214.893 cv
270.004 214.893 254.495 230.401 254.495 249.532 cv
254.495 259.365 258.592 268.24 265.172 274.545 cv
236.479 303.037 201.671 327.919 162.425 345.278 cv
162.425 129.177 li
162.425 120.826 169.206 114.056 177.557 114.056 cv
322.521 114.056 li
330.873 114.056 337.643 120.826 337.643 129.177 cv
337.643 399.049 li
337.643 407.411 330.873 414.182 322.521 414.182 cv
210.937 214.893 mo
191.807 214.893 176.299 230.401 176.299 249.532 cv
176.299 268.662 191.807 284.171 210.937 284.171 cv
230.068 284.171 245.576 268.662 245.576 249.532 cv
245.576 230.401 230.068 214.893 210.937 214.893 cv
level3{
gsave
clp
[168.228 291.38 -291.38 168.228 165.922 118.429 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .6 .345098 ]
/C1 [.580392 0 .384314 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[168.228 291.38 -291.38 168.228 165.922 118.429 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#rrVZTkqtp6dq>'j]q"OOWp@e1Po^qeIoCDJCnaZ,<n*f`5md9E/m-O'(lK[[!l0.?pkND!ijlPUb
jQ#:[io8qUi8EPNhqm5Gh;-lAgY:K:g=b03f\"g-f%/F&e^W*te'landF$@gd*L%`cHa\Zbfn;SbK@uL
aiVWFa2c3>`l5p8`5KR2_SX.*_8*k$^V@Ls]tM(k]Xtee]"5G_\@B#W\$i`Q[C*BKZa6sCZE^[=Yct=7
Y-+n/XfSV)X/`2"WMuhpW2HPjVPU,cUnjc\US=KVTqJ'OT:_^HSt2FBS=?";R[TY4R@'A.Q^3r'Q'ISu
~>
<~R@'>-QBmf#P`q;oOcb`eO,f6[NJrdRMMd7HLkgb?KnY25K7\]+JUi6"IXZ]mI!^3dH$OXZGBS.PF`_\G
EcQ/=E,TZ4D/F**CMITuBkV-lAnGUcA7K+Y@UWYP?XI,F?!LW=>$>'3=BAR)<`N*u;c?Rk;,C(b:/4MX
9M8#N8kDQE7n6$;779O26:*t(5X.Is5!;"j4$,J`3B/uW2E!EM1c$pC1,1L;0/"q1/M&G'.k2ts-n$Gi
-7'r`,9nBV+WqmL+!)FC*#on9)AsD0(Ddi&'bh>q'+tlh&.f?^%LijU$O[:K#m^eA#6k>8"9\f.!W`<%
~>
<~=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ[-=BJ^/=]nm1=]nm1=]nm1=]nm1=]nm1=]nm1>$>*5>$>*5>$>*5
>$>*5>$>*5>$>*5>$G38>?b<9>?b<9>?b<9>?b<9>?b<9>?b<:>[1N=>[1N=>[1N=>[1N=>[1N=>[1N=
?!U`A?!U`A?!U`A?!U`A?!U`A?!U`A?!UcC?=$rE?=$rE?=$rE?=$rE?=$rE?=$rE?XI/I?XI/I?XI/I
?XI/I?XI/I?XI/I?XR8L?smAM?smAM?smAM?smAM?smAM?smAN@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ@:<SQ
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
162.42 375.98 mo
162.42 345.28 li
162.423 345.279 162.422 345.279 162.425 345.278 cv
201.671 327.919 236.479 303.037 265.172 274.545 cv
266.554 275.869 268.046 277.081 269.632 278.163 cv
241.382 320.667 199.16 353.333 162.425 375.977 cv
162.422 375.979 162.423 375.979 162.42 375.98 cv
level3{
gsave
clp
[120.12 0 0 120.12 162.42 316 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[120.12 0 0 120.12 162.42 316 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
309.157 221.262 mo
306.455 219.345 303.469 217.807 300.271 216.722 cv
317.055 174.737 324.244 139.513 327.24 114.82 cv
333.28 116.79 337.64 122.48 337.64 129.18 cv
337.64 167.19 li
330.644 185.16 321.046 203.426 309.157 221.262 cv
level3{
gsave
clp
[55.1 0 0 55.1 282.54 185.415 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[55.1 0 0 55.1 282.54 185.415 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
337.64 241.65 mo
337.64 399.05 li
337.64 407.41 330.87 414.18 322.52 414.18 cv
253.3 414.18 li
259.89 405.41 266.95 395.75 274.52 385.1 cv
305.39 341.67 325.09 289.28 337.64 241.65 cv
cp
gsave
grestore
/1100066816.0 
<<
/ID /1100066816.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 28.7998 28.8008 ] 
/XStep 28.7998 
/YStep 28.8008 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
{28.7998 -1.43945 mo
29.5948 -1.43945 30.2393 -.794919 30.2393 2.55585e-08 cv
30.2393 .79493 29.5948 1.43946 28.7998 1.43946 cv
28.0039 1.43946 27.3594 .79493 27.3594 2.55585e-08 cv
27.3594 -.794919 28.0039 -1.43945 28.7998 -1.43945 cv
cp
}exec
false sop
.137255 .121569 .12549 rgb
f
{14.3994 -1.43945 mo
15.1944 -1.43945 15.8399 -.794919 15.8399 2.55585e-08 cv
15.8399 .79493 15.1944 1.43946 14.3994 1.43946 cv
13.6035 1.43946 12.96 .79493 12.96 2.55585e-08 cv
12.96 -.794919 13.6035 -1.43945 14.3994 -1.43945 cv
cp
}exec
f
{28.7998 12.959 mo
29.5948 12.959 30.2393 13.6054 30.2393 14.4003 cv
30.2393 15.1953 29.5948 15.8399 28.7998 15.8399 cv
28.0039 15.8399 27.3594 15.1953 27.3594 14.4003 cv
27.3594 13.6054 28.0039 12.959 28.7998 12.959 cv
cp
}exec
f
{14.3994 12.959 mo
15.1944 12.959 15.8399 13.6054 15.8399 14.4003 cv
15.8399 15.1953 15.1944 15.8399 14.3994 15.8399 cv
13.6035 15.8399 12.96 15.1953 12.96 14.4003 cv
12.96 13.6054 13.6035 12.959 14.3994 12.959 cv
cp
}exec
f
{7.19922 5.75977 mo
7.99414 5.75977 8.63967 6.4043 8.63967 7.19922 cv
8.63967 7.9961 7.99414 8.64065 7.19922 8.64065 cv
6.40332 8.64065 5.75977 7.9961 5.75977 7.19922 cv
5.75977 6.4043 6.40332 5.75977 7.19922 5.75977 cv
cp
}exec
f
{21.5996 5.75977 mo
22.3946 5.75977 23.0401 6.4043 23.0401 7.19922 cv
23.0401 7.9961 22.3946 8.64065 21.5996 8.64065 cv
20.8037 8.64065 20.1592 7.9961 20.1592 7.19922 cv
20.1592 6.4043 20.8037 5.75977 21.5996 5.75977 cv
cp
}exec
f
{7.19922 20.1602 mo
7.99414 20.1602 8.63967 20.8047 8.63967 21.5997 cv
8.63967 22.3965 7.99414 23.041 7.19922 23.041 cv
6.40332 23.041 5.75977 22.3965 5.75977 21.5997 cv
5.75977 20.8047 6.40332 20.1602 7.19922 20.1602 cv
cp
}exec
f
{21.5996 20.1602 mo
22.3946 20.1602 23.0401 20.8047 23.0401 21.5997 cv
23.0401 22.3965 22.3946 23.041 21.5996 23.041 cv
20.8037 23.041 20.1592 22.3965 20.1592 21.5997 cv
20.1592 20.8047 20.8037 20.1602 21.5996 20.1602 cv
cp
}exec
f
{4.51279e-08 -1.43945 mo
.79492 -1.43945 1.43945 -.794919 1.43945 2.55585e-08 cv
1.43945 .79493 .79492 1.43946 4.51279e-08 1.43946 cv
-.795899 1.43946 -1.44043 .79493 -1.44043 2.55585e-08 cv
-1.44043 -.794919 -.795899 -1.43945 4.51279e-08 -1.43945 cv
cp
}exec
f
{4.51279e-08 12.959 mo
.79492 12.959 1.43945 13.6054 1.43945 14.4003 cv
1.43945 15.1953 .79492 15.8399 4.51279e-08 15.8399 cv
-.795899 15.8399 -1.44043 15.1953 -1.44043 14.4003 cv
-1.44043 13.6054 -.795899 12.959 4.51279e-08 12.959 cv
cp
}exec
f
{28.7998 27.3614 mo
29.5948 27.3614 30.2393 28.0058 30.2393 28.8008 cv
30.2393 29.5958 29.5948 30.2403 28.7998 30.2403 cv
28.0039 30.2403 27.3594 29.5958 27.3594 28.8008 cv
27.3594 28.0058 28.0039 27.3614 28.7998 27.3614 cv
cp
}exec
f
{14.3994 27.3614 mo
15.1944 27.3614 15.8399 28.0058 15.8399 28.8008 cv
15.8399 29.5958 15.1944 30.2403 14.3994 30.2403 cv
13.6035 30.2403 12.96 29.5958 12.96 28.8008 cv
12.96 28.0058 13.6035 27.3614 14.3994 27.3614 cv
cp
}exec
f
{4.51279e-08 27.3614 mo
.79492 27.3614 1.43945 28.0058 1.43945 28.8008 cv
1.43945 29.5958 .79492 30.2403 4.51279e-08 30.2403 cv
-.795899 30.2403 -1.44043 29.5958 -1.44043 28.8008 cv
-1.44043 28.0058 -.795899 27.3614 4.51279e-08 27.3614 cv
cp
}exec
f
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/1100066816.0 /Pattern get_res
[1 0 0 -1 -670 -782 ]make_pattern set_pattern
f
2 vmreclaim
337.64 241.65 mo
337.64 399.05 li
337.64 407.41 330.87 414.18 322.52 414.18 cv
253.3 414.18 li
259.89 405.41 266.95 395.75 274.52 385.1 cv
305.39 341.67 325.09 289.28 337.64 241.65 cv
cp
false sop
level3{
gsave
clp
[84.34 0 0 84.34 253.3 327.915 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[84.34 0 0 84.34 253.3 327.915 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
260.746 107.687 mo
239.326 107.687 li
238.219 107.687 237.32 106.789 237.32 105.682 cv
237.32 104.574 238.219 103.676 239.326 103.676 cv
260.746 103.676 li
261.854 103.676 262.752 104.574 262.752 105.682 cv
262.752 106.789 261.854 107.687 260.746 107.687 cv
cp
.0666667 .278431 .486275 rgb
f
233.061 105.682 mo
233.061 106.789 232.163 107.687 231.055 107.687 cv
229.947 107.687 229.05 106.789 229.05 105.682 cv
229.05 104.574 229.947 103.676 231.055 103.676 cv
232.163 103.676 233.061 104.574 233.061 105.682 cv
cp
f
307.972 120.865 mo
306.065 120.865 304.337 121.641 303.085 122.893 cv
303.809 123.617 li
304.875 122.551 306.348 121.89 307.972 121.89 cv
309.595 121.89 311.067 122.551 312.134 123.617 cv
312.858 122.893 li
311.606 121.641 309.878 120.865 307.972 120.865 cv
cp
304.504 124.313 mo
305.228 125.036 li
305.931 124.333 306.901 123.897 307.972 123.897 cv
309.042 123.897 310.013 124.333 310.716 125.036 cv
311.439 124.313 li
310.551 123.424 309.324 122.873 307.972 122.873 cv
306.619 122.873 305.392 123.424 304.504 124.313 cv
cp
306.092 125.9 mo
306.815 126.624 li
307.112 126.328 307.521 126.145 307.972 126.145 cv
308.423 126.145 308.831 126.328 309.127 126.624 cv
309.851 125.9 li
309.369 125.419 308.704 125.12 307.972 125.12 cv
307.238 125.12 306.573 125.419 306.092 125.9 cv
cp
307.972 126.955 mo
307.516 126.955 307.146 127.324 307.146 127.78 cv
307.146 128.235 307.516 128.605 307.972 128.605 cv
308.427 128.605 308.797 128.235 308.797 127.78 cv
308.797 127.324 308.427 126.955 307.972 126.955 cv
cp
1 .784314 .686275 rgb
f
168.859 128.319 mo
169.884 128.319 li
169.884 126.624 li
168.859 126.624 li
168.859 128.319 li
cp
170.77 128.319 mo
171.794 128.319 li
171.794 125.466 li
170.77 125.466 li
170.77 128.319 li
cp
172.681 128.319 mo
173.704 128.319 li
173.704 124.308 li
172.681 124.308 li
172.681 128.319 li
cp
174.591 128.319 mo
175.615 128.319 li
175.615 123.149 li
174.591 123.149 li
174.591 128.319 li
cp
176.501 121.991 mo
176.501 128.319 li
177.525 128.319 li
177.525 121.991 li
176.501 121.991 li
cp
f
327.554 127.081 mo
327.552 127.694 327.057 128.189 326.444 128.19 cv
316.818 128.19 li
316.206 128.189 315.711 127.694 315.71 127.081 cv
315.71 123.625 li
315.711 123.013 316.206 122.518 316.818 122.516 cv
326.444 122.516 li
327.057 122.518 327.552 123.013 327.554 123.625 cv
327.554 127.081 li
cp
327.81 124.553 mo
327.81 123.625 li
327.809 122.871 327.198 122.26 326.444 122.26 cv
316.818 122.26 li
316.064 122.26 315.453 122.871 315.453 123.625 cv
315.453 127.081 li
315.453 127.836 316.064 128.446 316.818 128.447 cv
326.444 128.447 li
327.198 128.446 327.809 127.836 327.81 127.081 cv
327.81 126.153 li
328.419 126.153 li
328.419 124.553 li
327.81 124.553 li
cp
316.094 123.722 mo
316.094 126.985 li
316.094 127.438 316.461 127.807 316.915 127.807 cv
324.449 127.807 li
324.449 122.9 li
316.915 122.9 li
316.461 122.9 316.094 123.268 316.094 123.722 cv
cp
f
180.523 123.135 mo
181.264 123.135 li
181.264 127.675 li
184.07 127.675 li
184.07 128.318 li
180.523 128.318 li
180.523 123.135 li
cp
f
189.171 125.727 mo
189.171 124.579 188.312 123.734 187.164 123.734 cv
186.001 123.734 185.143 124.579 185.143 125.727 cv
185.143 126.875 186.001 127.719 187.164 127.719 cv
188.312 127.719 189.171 126.875 189.171 125.727 cv
cp
184.402 125.727 mo
184.402 124.209 185.571 123.076 187.164 123.076 cv
188.741 123.076 189.911 124.201 189.911 125.727 cv
189.911 127.252 188.741 128.378 187.164 128.378 cv
185.571 128.378 184.402 127.245 184.402 125.727 cv
cp
f
194.485 124.941 mo
194.485 124.201 193.989 123.779 193.041 123.779 cv
191.782 123.779 li
191.782 126.112 li
193.041 126.112 li
193.989 126.112 194.485 125.683 194.485 124.941 cv
cp
194.508 128.318 mo
193.39 126.727 li
193.286 126.734 193.175 126.741 193.063 126.741 cv
191.782 126.741 li
191.782 128.318 li
191.042 128.318 li
191.042 123.135 li
193.063 123.135 li
194.412 123.135 195.227 123.816 195.227 124.941 cv
195.227 125.741 194.812 126.319 194.086 126.578 cv
195.315 128.318 li
194.508 128.318 li
cp
f
200.186 127.675 mo
200.186 128.318 li
196.424 128.318 li
196.424 123.135 li
200.082 123.135 li
200.082 123.779 li
197.164 123.779 li
197.164 125.371 li
199.764 125.371 li
199.764 126.001 li
197.164 126.001 li
197.164 127.675 li
200.186 127.675 li
cp
f
206.189 128.318 mo
206.183 124.542 li
204.309 127.689 li
203.968 127.689 li
202.095 124.563 li
202.095 128.318 li
201.384 128.318 li
201.384 123.135 li
201.991 123.135 li
204.153 126.778 li
206.286 123.135 li
206.894 123.135 li
206.9 128.318 li
206.189 128.318 li
cp
f
322.521 114.056 mo
177.557 114.056 li
169.206 114.056 162.425 120.826 162.425 129.177 cv
162.425 399.049 li
162.425 407.411 169.206 414.182 177.557 414.182 cv
322.521 414.182 li
330.873 414.182 337.643 407.411 337.643 399.049 cv
337.643 129.177 li
337.643 120.826 330.873 114.056 322.521 114.056 cv
cp
322.521 115.056 mo
330.308 115.056 336.643 121.391 336.643 129.177 cv
336.643 399.049 li
336.643 406.842 330.308 413.182 322.521 413.182 cv
177.557 413.182 li
169.765 413.182 163.425 406.842 163.425 399.049 cv
163.425 129.177 li
163.425 121.391 169.765 115.056 177.557 115.056 cv
322.521 115.056 li
.0941176 .0941176 .219608 rgb
f
1 .784314 .686275 rgb
%%IncludeResource: font Courgette-Regular
/YLFKHX+Courgette-Regular /Courgette-Regular findfont ct_VMDictPut
/YLFKHX+Courgette-Regular*1 
[32{/.notdef}rp /space /exclam 63{/.notdef}rp /a /.notdef /c 4{/.notdef}rp 
/h /i 3{/.notdef}rp /m 5{/.notdef}rp /s /t 29{/.notdef}rp 
/quoteright 109{/.notdef}rp]
YLFKHX+Courgette-Regular nf
YLFKHX+Courgette-Regular*1 [25.251 0 0 -25.251 0 0 ]msf
221.946 168.757 mo
(it\222s a)
[7.22559 9.0625 6.76855 10.6895 7.75488 0 ]xsh
209.722 193.508 mo
(match!)
[20.5781 13.6738 9.0625 11.75 14.0186 0 ]xsh
264.077 371.05 mo
264.077 378.809 257.787 385.099 250.028 385.099 cv
242.27 385.099 235.979 378.809 235.979 371.05 cv
235.979 363.29 242.27 357.001 250.028 357.001 cv
257.787 357.001 264.077 363.29 264.077 371.05 cv
cp
level3{
gsave
clp
[14.0512 24.3375 -24.3375 14.0512 243.003 358.881 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.0512 24.3375 -24.3375 14.0512 243.003 358.881 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
1 .784314 .686275 rgb
%%IncludeResource: font FiraSans-Book
/YLFKHY+FiraSans-Book /FiraSans-Book findfont ct_VMDictPut
/YLFKHY+FiraSans-Book*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A 2{/.notdef}rp /D /E /.notdef 
/G 5{/.notdef}rp /M /N 4{/.notdef}rp /S 172{/.notdef}rp]
YLFKHY+FiraSans-Book nf
YLFKHY+FiraSans-Book*1 [8.21714 0 0 -8.21714 0 0 ]msf
219.223 320.773 mo
(SEND A MESSAGE)
[4.46973 4.35547 5.5957 5.26758 2.20215 4.69238 2.20215 6.37598 4.27344 4.37109 4.42871 4.61035 
5.16016 0 ]xsh
258.775 370.638 mo
258.721 370.506 258.642 370.387 258.542 370.287 cv
253.765 365.51 li
253.344 365.09 252.663 365.09 252.242 365.51 cv
251.822 365.931 251.822 366.611 252.242 367.031 cv
255.184 369.974 li
242.275 369.974 li
241.681 369.974 241.199 370.454 241.199 371.049 cv
241.199 371.645 241.681 372.125 242.275 372.125 cv
255.184 372.125 li
252.242 375.067 li
251.822 375.487 251.822 376.168 252.242 376.589 cv
252.452 376.799 252.728 376.904 253.003 376.904 cv
253.278 376.904 253.554 376.799 253.765 376.589 cv
258.542 371.812 li
258.642 371.712 258.721 371.593 258.774 371.461 cv
258.884 371.197 258.884 370.901 258.775 370.638 cv
cp
f
221.197 308.223 mo
215.746 308.223 211.311 312.658 211.311 318.11 cv
211.311 323.562 215.746 327.997 221.197 327.997 cv
278.87 327.997 li
284.321 327.997 288.757 323.562 288.757 318.11 cv
288.757 312.658 284.321 308.223 278.87 308.223 cv
221.197 308.223 li
cp
278.87 328.747 mo
221.197 328.747 li
215.332 328.747 210.561 323.976 210.561 318.11 cv
210.561 312.245 215.332 307.473 221.197 307.473 cv
278.87 307.473 li
284.735 307.473 289.507 312.245 289.507 318.11 cv
289.507 323.976 284.735 328.747 278.87 328.747 cv
cp
f
210.937 284.171 mo
191.807 284.171 176.299 268.662 176.299 249.532 cv
176.299 230.401 191.807 214.893 210.937 214.893 cv
230.068 214.893 245.576 230.401 245.576 249.532 cv
245.576 268.662 230.068 284.171 210.937 284.171 cv
193.398 275.865 mo
198.418 279.216 204.449 281.168 210.937 281.168 cv
217.426 281.168 223.458 279.215 228.478 275.865 cv
228.478 275.865 li
236.976 270.193 242.574 260.516 242.574 249.532 cv
242.574 232.06 228.41 217.896 210.937 217.896 cv
193.465 217.896 179.301 232.06 179.301 249.532 cv
179.301 260.516 184.9 270.193 193.398 275.865 cv
193.398 275.865 li
level3{
gsave
clp
[34.6447 60.0064 -60.0064 34.6447 193.615 219.529 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[34.6447 60.0064 -60.0064 34.6447 193.615 219.529 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
gsave
242.574 249.532 mo
242.574 267.004 228.41 281.168 210.937 281.168 cv
193.465 281.168 179.301 267.004 179.301 249.532 cv
179.301 232.06 193.465 217.896 210.937 217.896 cv
228.41 217.896 242.574 232.06 242.574 249.532 cv
clp
193.398 275.865 mo
184.9 270.193 179.301 260.516 179.301 249.532 cv
179.301 232.06 193.465 217.896 210.937 217.896 cv
228.41 217.896 242.574 232.06 242.574 249.532 cv
242.574 260.516 236.976 270.193 228.478 275.865 cv
228.478 265.844 li
228.478 258.986 224.57 252.891 218.428 249.999 cv
216.082 251.071 213.51 251.607 210.937 251.607 cv
208.365 251.607 205.793 251.071 203.447 249.999 cv
197.305 252.891 193.398 258.986 193.398 265.844 cv
193.398 275.865 li
210.937 227.551 mo
205.094 227.551 200.34 232.305 200.34 238.149 cv
200.34 243.994 205.094 248.748 210.937 248.748 cv
216.781 248.748 221.536 243.994 221.536 238.149 cv
221.536 232.305 216.781 227.551 210.937 227.551 cv
level3{
gsave
clp
[31.6418 54.8053 -54.8053 31.6418 195.117 222.129 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.407843 .67451 1 ]
/C1 [.231373 .419608 1 ]
/N 1.75231 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[31.6418 54.8053 -54.8053 31.6418 195.117 222.129 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~BP1sjB4kjiB4kjiB4kjiB4kjiB4kjiB4kjiB4kggAnGXeAnGXeAnGXeAS#FaAS#FaAS#F`A7T4]A7T4]
A7K+Z@q0"Y@q/tW@U`eU@U`bS@:<SQ@:3JN?smAM?XI/I?XI/H?=$rE?<piB?!U`@>[1N=>[(E:>?b<8
>$>*5=]nm1=]ed.=BJX+='&I(<`W7%<E3%!<E)ps<)cdp;c?Rl;GpCi;,L1e:f'ta:JXb^:/4PZ9he>V
9MA,R91qoN8kM]J8P)KE84Z9A7n6'=7Rfj977BU46psC06UF++6:!n'5X7S"5<h@r5!D.n4Ztni4?GVd
~>
<~XK/D&X/i;%X/i;%X/i;%X/i;%X/i;%WiE)!WiE)!WiE)!WMukrWMukrWMlboW2QYnW2HPkVl-GjVP^5f
VP^2dV5:#bUnjf^Unjc\USFTYU8"BVTqS0RTqJ'OTV.pLT:_aISt;OESXl=AS=H+>S"#n:R[T\6R@0J1
R$a8-Q^=&)QBmf$Q'ISuP`q;pPEM)lOcbcgOH>QbO,o<]NfB$XN/W^RMi3IMMM[1HLkpkBLPLV=L4t>8
KS5#2K7\],JUrB&J:E&uIXZ`oI=-EiH[C'bH?jd\G^+FVG'8%OF`__IF)uABEH,u;E,TZ4DJj<.Ci!m&
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
grestore
gsave
242.574 249.532 mo
242.574 267.004 228.41 281.168 210.937 281.168 cv
193.465 281.168 179.301 267.004 179.301 249.532 cv
179.301 232.06 193.465 217.896 210.937 217.896 cv
228.41 217.896 242.574 232.06 242.574 249.532 cv
clp
210.937 248.748 mo
205.094 248.748 200.34 243.994 200.34 238.149 cv
200.34 232.305 205.094 227.551 210.937 227.551 cv
216.781 227.551 221.536 232.305 221.536 238.149 cv
221.536 243.994 216.781 248.748 210.937 248.748 cv
level3{
gsave
clp
[31.6418 54.8053 -54.8053 31.6418 195.117 222.129 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~S&bPua8_XLs-q(/S&bPta8_UKs-h".R`>Ar`rDLHs-gq,R`5;p`W)@Es-Ub)R)Ark_uH+As-LV&Qbi]f
_>fh;s-CJ#QG<Hb^]0P4s-14sPeI*\]`42-s,t"oP.L[V\c7f&s,abjOLP7N[f;Aqs,OMeNjShGZi>ui
s,=5_Mm35=YQ'K`s,!lXLop]5X8dsUs+[NQL8b-+VuMFIs+I6KJu&EuUAoe=s+$dBJ=ljjT)X81s*^F;
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[31.6418 54.8053 -54.8053 31.6418 195.117 222.129 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~R[T\6R[T\6R[T\6R[T\6R[T\6R[KS3R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@0J2R@'A/R$a8.R$X/+
Q^=&*Q^=&*Q^=&*Q^=#(QBmi&QBmf$Q'IW"Q'IW"Q'IW"Q'ISuPa%AqPEV2oPEV2oPEV/mP*1ukP*1ri
OcbcgOcbcgOcbcfOH>QbO,o?_O,o?^NfK-ZNK&pWNK&pWNK&pVN/W^RMi3LOMi3LNMMd:JM2@(GM2@(F
LkpkCLPLY?LPLY?L5(G;KnY57KnY57KS5#3K7ef/K7ec-JUrB'JUrB'J:N0#It)rtIt)orI=6NlI=6Nl
~>
<~`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l5p9`Pog8`Pf^5`5KU4`5KU4`5KU4`5BL1_o'C0
_o'@._SX1,_SX1,_SX.*_83q&^qdb$^qdb$^qd_"^V@Ls^:q=q^:q:o]tM(k]Y(ni]Y(kg]=YYc]"5Ja
]"5J`\[f8\\@B&Y\@B&X\$riT[^NWP[C*EL['[3I['[3HZa7!DZEgd@Z*CR<Yct@8YHP.4Y-+q1Y-"h-
XK8M)XK8J'WiE)!WiE%tW2QYnVl-GjVP^5fV5:#bUnjf^USFQXTqS0RTqS-PT:_aJSt;OFSXl=BS=H+>
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
210.937 281.168 mo
204.449 281.168 198.418 279.216 193.398 275.865 cv
193.398 265.844 li
193.398 258.986 197.305 252.891 203.447 249.999 cv
205.793 251.071 208.365 251.607 210.937 251.607 cv
213.51 251.607 216.082 251.071 218.428 249.999 cv
224.57 252.891 228.478 258.986 228.478 265.844 cv
228.478 275.865 li
223.458 279.215 217.426 281.168 210.937 281.168 cv
level3{
gsave
clp
[31.6418 54.8053 -54.8053 31.6418 195.117 222.129 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[31.6418 54.8053 -54.8053 31.6418 195.117 222.129 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
grestore
289.135 284.171 mo
281.902 284.171 275.187 281.954 269.632 278.163 cv
268.046 277.081 266.554 275.869 265.172 274.545 cv
258.592 268.24 254.495 259.365 254.495 249.532 cv
254.495 230.401 270.004 214.893 289.135 214.893 cv
293.03 214.893 296.776 215.536 300.271 216.722 cv
303.469 217.807 306.455 219.345 309.157 221.262 cv
318.001 227.539 323.773 237.861 323.773 249.532 cv
323.773 268.662 308.265 284.171 289.135 284.171 cv
271.595 275.865 mo
276.615 279.215 282.646 281.168 289.135 281.168 cv
295.623 281.168 301.654 279.215 306.674 275.865 cv
306.674 275.865 li
315.172 270.193 320.771 260.516 320.771 249.532 cv
320.771 232.06 306.606 217.896 289.135 217.896 cv
271.662 217.896 257.498 232.06 257.498 249.532 cv
257.498 260.516 263.096 270.193 271.595 275.865 cv
271.595 275.865 li
level3{
gsave
clp
[34.6447 60.0064 -60.0064 34.6447 271.812 219.529 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[34.6447 60.0064 -60.0064 34.6447 271.812 219.529 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
306.674 275.865 mo
306.674 264.04 li
306.674 257.183 302.768 251.087 296.625 248.195 cv
294.279 249.268 291.707 249.804 289.134 249.804 cv
286.562 249.804 283.989 249.268 281.643 248.195 cv
275.502 251.087 271.595 257.183 271.595 264.04 cv
271.595 275.865 li
263.096 270.193 257.498 260.516 257.498 249.532 cv
257.498 232.06 271.662 217.896 289.135 217.896 cv
306.606 217.896 320.771 232.06 320.771 249.532 cv
320.771 260.516 315.172 270.193 306.674 275.865 cv
289.135 225.747 mo
283.29 225.747 278.536 230.502 278.536 236.347 cv
278.536 242.19 283.29 246.944 289.135 246.944 cv
294.978 246.944 299.732 242.19 299.732 236.347 cv
299.732 230.502 294.978 225.747 289.135 225.747 cv
level3{
gsave
clp
[3.87436e-15 63.2731 -63.2731 3.87436e-15 289.134 217.895 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.733333 .54902 1 ]
/C1 [.682353 0 1 ]
/N 1.75231 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.87436e-15 63.2731 -63.2731 3.87436e-15 289.134 217.895 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]=PSb]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja]"5Ja\[f8]
\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\@B&Y\@B&Y\@B&Y\@B&Y\@B&Y\@B&X\$riU\$riU\$riU\$riU
\$riT[^NWQ[^NWQ[^NWQ[^NWQ[^ENN[C*EM[C*EM[C*EM[C!<J['[3I['[3I['[3IZa7!EZa7!EZa7!E
Za7!DZEgdAZEgdAZEgdAZ*CR=Z*CR=Z*CR=Z*:I:Yct@9Yct@9Yck76YHP.5YHP.5YHG%2Y-+q1Y-+q1
~>
<~N/NUPMi3LOMi3LOMi3LOMMd:KMMd:JM2@(GM26tDLkphALPLY>L5(G:KnY56KS4u1K7ec-Jq8K(J:N0#
It)orIXQWmI!g<gH[:!aH$OXZG^"@TG'8"NFEDSFEcQ/>EH#l8Df0H0D/=$(CMITuBkV-lAnGUcA7T1[
@UW\Q?sd5H?!U]>>?Y35=BJX+<`N.!;c?Rk;,C%a:/+GV91qlK8Ou?@7R]^56UF()5X.Fr4Zkhg3]T/Z
2`<NN1c$mA0eb75/M/M(.Ocep-RL,b,U4KV+<MXG*?6":)&O/+()7Ms&ePZc%LrpV$OR1G#6k>7!s/K'
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
gsave
320.771 249.532 mo
320.771 267.004 306.606 281.168 289.135 281.168 cv
271.662 281.168 257.498 267.004 257.498 249.532 cv
257.498 232.06 271.662 217.896 289.135 217.896 cv
306.606 217.896 320.771 232.06 320.771 249.532 cv
clp
289.135 246.944 mo
283.29 246.944 278.536 242.19 278.536 236.347 cv
278.536 230.502 283.29 225.747 289.135 225.747 cv
294.978 225.747 299.732 230.502 299.732 236.347 cv
299.732 242.19 294.978 246.944 289.135 246.944 cv
level3{
gsave
clp
[3.87436e-15 63.2731 -63.2731 3.87436e-15 289.134 217.895 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~d^&o$ZN&@Ys3e1Pd]ri#Z2`7Ws3e.Od]`]!YQ*"Qs3[tKdB3GrXT-\Ks3[nIdAd/nW;k8Cs3[_DdA?lj
V#Si;s3[S@d@gNdTE!90s3R;9d$t'^RfC^$s3I&3c^"OVPlK'ms3Hf,c]8%ONW7=_s3?N%cA;MGLB#PP
s36/qc%,i=IfIZ?s35lic$995G5od.s3,K_b]!O)D?%dos3#*Ub@U^sA,j_\s2n[Jb$4ng=oZTFs2e7?
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.87436e-15 63.2731 -63.2731 3.87436e-15 289.134 217.895 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~dF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdF$@hdEp7ed*U.dd*U.dd*U.dd*U.dd*U.d
d*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U.dd*U+bcd0q`cd0q`cd0q`cd0q`cd0n^cHa_\
cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_\cHa_[c-=MXc-=MXc-=MXc-=MWbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)Pb0%lLb0%lLb0%lLb0%lLb0%lLb0%lLaiVZHaiVZHaiVZHaN2HD
~>
<~Z*CR=Z*CR=Z*CR=Z*:I:Yct@9Yct@9Yct@9Yck76YHG%2Y-+q1Y-"h.XfSV*XK8M)XK/D&X/`2"WiE(u
WMuhpW2QVlVl-DhVP^2dV59u`Unjc\USFQXU8"?TTV.pLT:_^HSt;LDS=H(<S"#k8R[TY4R$a5,Q^=#(
Q'IW!Pa%DrPEM)kOcYZcO,f6[NK&pVN/NUOMMd:JM26tCLPCP;KnP,3K7\]+JUi9#IsuipI=-EhH[:!`
H$OXZGB\4RF`heJF)l8?E,]`6DJj<.Chmg$Bk_6oB4baeA7T1[@U`bS?sm>J?!U]>>$>'3=BJX+<`W4"
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
289.135 281.168 mo
282.646 281.168 276.615 279.215 271.595 275.865 cv
271.595 264.04 li
271.595 257.183 275.502 251.087 281.643 248.195 cv
283.989 249.268 286.562 249.804 289.134 249.804 cv
291.707 249.804 294.279 249.268 296.625 248.195 cv
302.768 251.087 306.674 257.183 306.674 264.04 cv
306.674 275.865 li
301.654 279.215 295.623 281.168 289.135 281.168 cv
level3{
gsave
clp
[3.87436e-15 63.2731 -63.2731 3.87436e-15 289.134 217.895 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.87436e-15 63.2731 -63.2731 3.87436e-15 289.134 217.895 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
grestore
237.071 250.229 mo
233.792 246.95 233.792 241.613 237.071 238.334 cv
238.66 236.745 240.772 235.87 243.02 235.87 cv
245.267 235.87 247.379 236.745 248.967 238.334 cv
250.036 239.403 li
251.104 238.334 li
252.693 236.745 254.806 235.87 257.053 235.87 cv
259.299 235.87 261.412 236.745 263 238.334 cv
266.28 241.613 266.28 246.95 263 250.229 cv
250.036 263.193 li
237.071 250.229 li
cp
level3{
gsave
clp
[14.1509 24.51 -24.51 14.1509 244.074 233.956 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14.1509 24.51 -24.51 14.1509 244.074 233.956 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
409.403 185.585 mo
404.253 196.848 li
404.018 197.376 402.51 197.376 402.099 196.965 cv
402.471 197.082 402.901 196.906 403.097 196.515 cv
411.598 177.928 li
411.773 177.535 411.578 177.085 411.206 176.948 cv
411.206 176.929 li
412.185 177.223 li
412.675 177.281 412.969 177.81 412.753 178.261 cv
409.403 185.585 li
cp
level3{
gsave
clp
[6.92943 12.0021 -12.0021 6.92943 403.881 181.157 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.388235 .568627 1 ]
/C1 [.301961 .184314 1 ]
/N 1.06044 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.92943 12.0021 -12.0021 6.92943 403.881 181.157 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~@q&nV@U`eU@U`eU@U`bS@:<SQ@:<SQ@:<SP?smAM?smAM?smAM?XI/I?XI/I?XI/I?=$rE?=$rE?=$rE
?!U`A?!U`A?!U`A>[1N=>[1N=>[1N<>?b<9>?b<9>?b<8>$>*5>$>*5>$>*4=]nm1=]nm1=]nj/=BJ[-
=BJ[-=BJX+='&I)='&I)=&r@&<`W7%<`W7%<E3%!<E3%!<E3%!<)cgr<)cgr<)cgq;c?Un;c?Un;c?Rl
;GpCj;GpCj;Gg:g;,L1f;,L1f:f'tb:f'tb:f'ta:JXb^:JXb^:JX_\:/4PZ:/4PZ:/4MX9he>V9he>V
~>
<~OcYZdO,o?^NfK*YNJrgTMi3LNMMd7IM26tCLPLV=L4t>8KS5#2K7\],JUrB&J:N-!IXZ`oI=6KjH[C*c
H?sj^G^+IWGB\4RF`hhKFEDSFEcQ2?EH,r:Df9Q3DJa6-Ci!p'CMIU!Bk_6oBP1sjAnGUcARo=]@q/tW
@UW\Q?sm>K?=$rD?!LW>>?b97>$5!2=BJX+=&r@%<E3!t;c?Um;Gg:g:f'q`:JOYZ9he;T91qoM8kDTG
84Z6@7n,s:77BU46UO4-6:!n'5X7Ou5<_7o4Ztni4$,Mb3]T2\3&iiU2`<QO2)R3I1G^gB1,1L<0JG.5
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
410.951 178.554 mo
411.088 178.261 410.912 177.907 410.579 177.868 cv
405.467 177.104 li
405.173 177.065 404.88 177.223 404.762 177.477 cv
398.338 191.539 li
398.26 191.735 398.299 191.971 398.455 192.127 cv
402.255 195.966 li
402.51 196.221 402.921 196.143 403.058 195.829 cv
410.951 178.554 li
cp
398.926 189.404 mo
399.141 188.915 li
399.571 187.975 li
399.807 187.505 li
399.943 187.23 400.062 186.956 400.179 186.683 cv
400.355 186.271 li
404.664 176.83 li
404.88 176.341 405.408 176.047 405.937 176.125 cv
411.029 176.89 li
411.206 176.948 li
411.578 177.085 411.773 177.535 411.598 177.928 cv
403.097 196.515 li
402.901 196.906 402.471 197.082 402.099 196.965 cv
401.961 196.945 401.844 196.867 401.745 196.769 cv
398.005 193.009 li
397.711 192.695 397.633 192.244 397.809 191.853 cv
398.926 189.404 li
cp
level3{
gsave
clp
[8.32133 14.413 -14.413 8.32133 401.032 178.661 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.164706 .133333 .466667 ]
/C1 [.356863 .164706 .552941 ]
/N 2.19931 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.32133 14.413 -14.413 8.32133 401.032 178.661 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~>?Y35=]ed.='&F'<`N.!<)cdp;GpCi;,L.d:JXb]:/4MX9h\5S91qoM8kMZH8OuBC7n6'=7Rfg8779O3
6pj=/6:+")5s[e%5X7S!5<h=q5!D+m4Ztni4?P\e4$,Ja3]];^3B9)Z3&ilW2`EZS2E!HO2Dm?L2)R6J
1c.$G1G^gC1G^dA1,:U?0ekC;0ekC:0JG170JG.50/"t30/"q1/hSb//hSb./M/P+/M/P+/M&G(/1`>'
/1`>'/1W5$.k<,#.k<,#.k<,#.k3"u.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt
~>
<~.Oceq.4H\p.4H\p.4H\p-n$Jl-n$Jl-n$Jl-n$Jl-RU8h-RU8h-RU8h-RU8h-RU5f-71&d-71&d-71&d
-71&d-71#b,pai`,pai`,pai`,pai`,pai`,pX`],U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,9nEX,9nEX
,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9nEX,9e<U+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T+sJ3T
~>
<~NJrgTN/W[QMi3LNMMd:KMM[1HM2@(FLkpkCLkgb@LPLY>L5(G;L4t>8KnY57KS5#3KS5#2K7ef/K7ec-
JqAT+JqAQ)JUrB'JUr?%J:N0#J:N-!It)rtIt)rsIXZ`pIXZ`pI=6NlI=6NlI=6NkI!g<hI!g<hI!g9f
H[C*dH[C*dH[C*cH?sm`H?sm`H?sm`H?jd]H$O[\H$O[\H$O[\H$OXZG^+IXG^+IXG^+IXG^+IXG^+IX
G^+FVGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7T
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
410.579 177.868 mo
410.912 177.907 411.088 178.261 410.951 178.554 cv
403.058 195.829 li
402.921 196.143 402.51 196.221 402.255 195.966 cv
398.455 192.127 li
398.299 191.971 398.26 191.735 398.338 191.539 cv
404.762 177.477 li
404.88 177.223 405.173 177.065 405.467 177.104 cv
410.579 177.868 li
cp
level3{
gsave
clp
[7.62474 13.2064 -13.2064 7.62474 401.339 179.321 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.87451 .411765 .482353 ]
/C1 [.745098 .152941 .45098 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.62474 13.2064 -13.2064 7.62474 401.339 179.321 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hqm5HhVR,Gh;-oCh;-oCgt^]?gt^]?gY:K;gY:K;g=k97g=k96g"G'3g"G'2f\"j/f\"j.f@SX+f@SX*
f%/F'f%/C%e^`4#e^`1!eC<!teC;sre'ldpe'landaHRlda?IidF$@hdEp7ed*U.dd*L%acd0q`cd'h]
cHa_\c-=MXc-=MXbfn;Tbfn;TbKJ)PbKJ)Pb0%lLb0%lKaiVZHaiVZGaN2HDaN2HCa2c6@a2c6?`l?$<
`l?!:`Pog8`Pod6`5KU4`5KR2_o'C0_o'@._SX1,_SO()_83t(_8*k%^qdb$^q[Y!^V@Ou^V7Fr^:q=q
~>
<~BkV0nB4kjiAnGXeAS#FaA7T4]@q0"Y@U`eU@:<SQ?smAL?XI/H?=$rD?!U`@>[1N<>?b<8>$>*4=]nm0
=BJX+='&F'<`W4#<E3!t<)cdp;c?Rl;Gp@h;,L.d:esk_:JOY[:/+GW9h\5S9M8#O91hfK8kDTG8OuBC
7n6'>7Rfj:77BX66psF26UO4.6:+"*5s[e&5X7S"5<h@r5!D.n4Ztqj4?P_f4$,Mb3]];^3B9)Z3&ilV
2`EWQ2E!EM2)R3I1c.!E1G^dA1,:R=0ek@90JG.50.nk0/hJY,/M&G(/1W5$.k3"u.Oceq.4?Sm-mpAi
~>
<~H[:!aH?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?jd]H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\
H$FRYG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^"@UGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7T
GBS.QG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'.qMF`hhLF`hhLF`hhLF`hhLF`hhLF`hhLF`hhL
F`__IFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFE;MEF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDD
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
367.06 180.415 mo
367.607 180.865 368.058 181.355 368.313 181.845 cv
369.723 184.606 378.458 219.606 378.458 219.606 cv
393.774 193.028 li
393.716 192.989 li
393.108 189.209 397.104 186.506 397.456 185.645 cv
398.044 184.254 399.376 182.412 400.473 182.961 cv
401.334 183.392 400.962 184.821 400.355 186.271 cv
400.179 186.683 li
399.807 187.505 li
399.571 187.975 li
399.415 188.327 399.258 188.641 399.141 188.915 cv
398.926 189.404 li
397.809 191.853 li
397.633 192.244 397.711 192.695 398.005 193.009 cv
401.745 196.769 li
401.844 196.867 401.961 196.945 402.099 196.965 cv
402.51 197.376 404.018 197.376 404.253 196.848 cv
409.403 185.585 li
409.972 186.937 410.521 189.953 410.089 192.499 cv
409.561 195.711 409.193 197.625 405.276 198.741 cv
400.395 200.568 li
400.395 200.666 li
400.395 200.666 386.527 232.474 382.258 237.742 cv
378.008 243.011 370.506 241.269 368.881 233.277 cv
366.433 223.229 li
366.667 218.51 367 214.788 367.216 213.456 cv
367.882 209.422 372.21 207.503 371.524 203.859 cv
371.055 201.274 369.018 194.36 367.882 190.561 cv
367.882 190.541 li
367.765 190.013 365.531 180.631 363.553 178.28 cv
364.826 178.888 366.119 179.632 367.06 180.415 cv
cp
1 .784314 .686275 rgb
f
406.74 425.003 mo
411.206 427.726 414.457 430.507 409.07 430.507 cv
405.369 430.507 387.369 430.507 382.747 430.507 cv
382.669 428.235 li
382.669 428.235 404.625 428.509 404.978 428.235 cv
405.311 427.961 405.095 426.335 406.74 425.003 cv
cp
level3{
gsave
clp
[8.01747 13.8867 -13.8867 8.01747 392.941 422.304 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.01747 13.8867 -13.8867 8.01747 392.941 422.304 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
406.74 425.003 mo
405.095 426.335 405.311 427.961 404.978 428.235 cv
404.625 428.509 382.669 428.235 382.669 428.235 cv
382.395 421.419 li
372.406 363.837 li
372.406 363.817 li
372.993 353.887 373.365 346.288 373.248 344.623 cv
373.15 343.252 372.465 339.668 371.485 334.967 cv
376.362 333.831 380.612 332.656 383.257 331.892 cv
385.195 338.963 386.605 344.251 386.821 345.563 cv
387.644 350.439 397.084 419.853 397.084 419.853 cv
397.084 419.853 402.471 422.398 406.74 425.003 cv
cp
.956863 .698039 .596078 rgb
f
367.882 190.541 mo
367.882 190.561 li
369.018 194.36 371.055 201.274 371.524 203.859 cv
372.21 207.503 367.882 209.422 367.216 213.456 cv
367 214.788 366.667 218.51 366.433 223.229 cv
365.923 232.826 365.708 246.557 367.235 252.628 cv
369.507 261.696 386.116 331.05 386.116 331.05 cv
386.116 331.05 385.059 331.383 383.257 331.892 cv
380.612 332.656 376.362 333.831 371.485 334.967 cv
365.335 336.396 358.187 337.787 351.978 338.238 cv
349.804 338.395 347.728 338.434 345.867 338.336 cv
345.867 338.336 339.521 310.073 335.271 299.184 cv
331.021 288.294 327.966 280.597 329.199 269.648 cv
330.414 258.719 333.998 253.235 333.998 253.235 cv
340.383 266.984 348.746 283.75 350.353 286.942 cv
350.392 286.923 li
351.41 288.999 353.074 292.289 354.348 294.189 cv
356.463 297.323 358.617 298.674 360.674 299.007 cv
362.711 299.359 365.884 299.223 367.099 298.322 cv
368.293 297.421 361.477 290.351 360.909 289.332 cv
360.321 288.294 359.577 285.729 361.595 287.139 cv
363.612 288.568 364.729 291.31 366.275 289.724 cv
366.805 289.194 363.514 285.063 362.633 283.77 cv
362.084 282.947 361.184 282.634 360.321 282.242 cv
359.342 281.811 358.402 281.204 357.462 280.675 cv
353.016 268.297 340.657 233.786 340.755 232.2 cv
340.854 230.829 345.632 216.492 348.08 205.309 cv
348.08 205.309 350.02 204.134 350.842 200.98 cv
350.999 200.471 351.097 199.884 351.155 199.257 cv
351.586 194.811 351.155 178.28 342.303 176.968 cv
342.303 176.948 li
344.496 175.949 346.748 175.205 348.394 174.755 cv
348.707 174.813 349.001 174.872 349.295 174.951 cv
353.878 180.748 358.05 180.298 360.537 179.436 cv
360.674 179.044 li
361.301 177.301 li
361.967 177.556 362.75 177.889 363.553 178.28 cv
365.531 180.631 367.765 190.013 367.882 190.541 cv
cp
level3{
gsave
clp
[77.6812 134.548 -134.548 77.6812 316.409 191.898 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.87451 .411765 .482353 ]
/C1 [.666667 0 .45098 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[77.6812 134.548 -134.548 77.6812 316.409 191.898 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hqm5HhVI#Dh;-lAgt^]>gY:K;g=k97g=b04g"=s0f\"g-f@SX*f%/F'e^`4#e^W*ueC;sre'landaHRk
dF$@hd*U.dd*L%acd0n^cHa_[c-=MWbfn;TbKJ)PbK@uMb0%iJaiVZGaN2HDa2c6@`l?$<`l5p9`Pod6
`5KU3_o'C0_SX1,_SO()_8*k%^qd_"^V@Ot^:q=q]tM+m]tD"j]Y(kg]=YYc]"5J`\[f8]\@B&Y\@8rV
\$rfS[^NWP[C*EL['[3IZa7!EZa-mBZEga?Z*CR<Yct@9YHP.5Y-+q1Y-"h.Xf\\+XK8M(X/i;%WiE)!
~>
<~BkV0mB4bafAS#C_A7K+Y@U`bS?sm>K?X@&E?!U]?>?b<8>$5!2=BJX+<`W7$<E)ps;c?Rl;Gg:f:esk_
:/4MX9h\5R91qlL8P)KE84Q0>7Rfg86psF16UF++5s[b$5<h@r5!;%l4?P\e4$#D_3B9&Y2`EWQ2Dm?K
1c.!E1,:U>0eb:70/"q1/M/P*/1W5$.Olkr.4?Sl-RL/e,paf^,U4NX+sJ0R+<VaJ+!)ID*??+>)]K_7
)AsD1(`4&*()@Z#'bh>r',(uk&eP]e&.]9^%LrpW%1EXQ$O[:K#mgnD#R:S="pP57"9\i0!s/N*!<E0#
~>
<~H[:!aH?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?sm`H?jd]H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\H$O[\
H$FRYG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^+IXG^"@UGB\7TGB\7TGB\7TGB\7TGB\7TGB\7TGB\7T
GBS.QG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'8%PG'.qMF`hhLF`hhLF`hhLF`hhLF`hhLF`hhLF`hhL
F`__IFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFEDVHFE;MEF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDD
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
348.394 174.755 mo
347.336 174.578 346.259 174.5 345.201 174.305 cv
343.243 173.952 341.147 172.992 340.481 171.112 cv
339.972 169.702 340.56 167.979 341.793 167.116 cv
341.931 167.038 342.067 166.979 342.205 166.921 cv
343.203 166.489 344.202 165.883 344.673 164.903 cv
345.417 163.375 344.633 161.476 345.26 159.909 cv
346.122 157.695 349.275 157.089 350.137 154.875 cv
350.725 153.387 350.117 151.546 350.979 150.214 cv
352.193 148.373 355.288 148.823 356.679 147.119 cv
357.168 146.551 357.384 145.787 357.893 145.239 cv
358.441 144.632 359.303 144.377 360.126 144.357 cv
360.968 144.357 361.771 144.573 362.574 144.788 cv
363.083 144.926 363.573 145.082 364.082 145.239 cv
364.943 145.16 365.786 144.906 366.647 144.788 cv
369.155 144.416 371.779 145.063 373.875 146.492 cv
375.99 147.922 377.244 150.331 379.379 151.683 cv
380.006 152.074 380.69 152.349 381.239 152.857 cv
382.61 154.131 382.434 156.363 381.709 158.087 cv
381.298 159.125 381.239 159.576 381.611 160.555 cv
381.944 161.515 381.944 162.631 381.65 163.591 cv
381.298 164.825 380.495 165.883 380.201 167.136 cv
380.045 167.763 380.045 168.429 380.025 169.075 cv
380.006 170.074 380.123 171.229 379.379 172.013 cv
378.615 172.855 377.126 172.855 376.539 173.834 cv
376.029 174.638 376.362 175.813 375.735 176.557 cv
374.874 177.595 373.248 177.145 372.582 178.496 cv
372.328 178.985 372.269 179.593 371.896 180.023 cv
371.505 180.435 370.898 180.553 370.311 180.592 cv
369.233 180.689 368.137 180.631 367.06 180.415 cv
366.119 179.632 364.826 178.888 363.553 178.28 cv
362.75 177.889 361.967 177.556 361.301 177.281 cv
361.673 176.263 li
363.24 176.987 365.962 178.202 366.628 178.183 cv
368.665 178.085 375.324 173.188 378.105 168.057 cv
378.172 167.934 378.014 167.434 377.996 167.283 cv
377.962 167 377.935 166.715 377.923 166.429 cv
377.903 165.922 377.956 165.423 378.019 164.924 cv
378.16 163.794 378.296 162.67 378.34 161.529 cv
377.37 161.501 376.417 161.771 375.442 161.789 cv
375.05 161.789 374.658 161.828 374.325 162.005 cv
373.855 162.298 373.62 162.847 373.248 163.238 cv
372.112 164.433 370.114 164.021 368.548 164.57 cv
368.273 164.648 368.019 164.785 367.843 165.021 cv
367.51 165.451 367.607 166.098 367.372 166.588 cv
366.707 167.899 364.337 167.155 363.514 168.351 cv
363.181 168.84 363.221 169.506 362.828 169.956 cv
362.28 170.583 361.223 170.427 360.596 170.955 cv
359.616 171.738 360.263 173.345 359.852 174.539 cv
359.694 174.99 359.401 175.382 359.029 175.676 cv
357.756 176.694 355.738 176.361 354.191 176.4 cv
353.604 176.4 352.977 176.42 352.409 176.224 cv
351.919 176.067 351.488 175.793 351.038 175.558 cv
350.489 175.284 349.902 175.088 349.295 174.951 cv
349.001 174.872 348.707 174.813 348.394 174.755 cv
cp
level3{
gsave
clp
[18.6463 32.2964 -32.2964 18.6463 352.843 148.028 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[18.6463 32.2964 -32.2964 18.6463 352.843 148.028 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
380.182 430.879 mo
383.257 433.033 384.628 434.895 380.221 434.895 cv
376.519 434.895 358.52 434.895 353.897 434.895 cv
353.8 432.25 li
353.8 432.25 374.775 432.661 374.874 431.839 cv
374.972 431.036 376.676 428.666 376.676 428.666 cv
377.93 429.391 379.144 430.154 380.182 430.879 cv
cp
level3{
gsave
clp
[8.18399 14.1751 -14.1751 8.18399 363.926 426.403 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.18399 14.1751 -14.1751 8.18399 363.926 426.403 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
378.77 161.751 mo
378.779 161.978 378.772 162.205 378.766 162.432 cv
378.753 162.897 378.719 163.371 378.794 163.834 cv
378.867 164.279 379.082 164.691 379.098 165.148 cv
379.126 166.011 378.526 167.08 378.164 167.844 cv
377.192 169.892 375.708 171.598 374.107 173.18 cv
372.781 174.49 371.337 175.701 369.779 176.729 cv
368.89 177.314 367.738 178.129 366.628 178.183 cv
365.962 178.202 363.24 176.987 361.673 176.263 cv
361.007 175.949 360.537 175.715 360.537 175.715 cv
360.674 179.044 li
360.537 179.436 li
358.05 180.298 353.878 180.748 349.295 174.951 cv
349.902 175.088 350.489 175.284 351.038 175.558 cv
351.488 175.793 351.919 176.067 352.409 176.224 cv
352.977 176.42 353.604 176.4 354.191 176.4 cv
355.738 176.361 357.756 176.694 359.029 175.676 cv
359.401 175.382 359.694 174.99 359.852 174.539 cv
360.263 173.345 359.616 171.738 360.596 170.955 cv
361.223 170.427 362.28 170.583 362.828 169.956 cv
363.221 169.506 363.181 168.84 363.514 168.351 cv
364.337 167.155 366.707 167.899 367.372 166.588 cv
367.607 166.098 367.51 165.451 367.843 165.021 cv
368.019 164.785 368.273 164.648 368.548 164.57 cv
370.114 164.021 372.112 164.433 373.248 163.238 cv
373.62 162.847 373.855 162.298 374.325 162.005 cv
374.658 161.828 375.05 161.789 375.442 161.789 cv
376.559 161.77 377.969 161.75 378.498 160.79 cv
378.745 161.457 li
378.758 161.555 378.765 161.652 378.77 161.751 cv
cp
1 .784314 .686275 rgb
f
368.391 424.298 mo
369.174 424.69 373.092 426.57 376.676 428.666 cv
376.676 428.666 374.972 431.036 374.874 431.839 cv
374.775 432.661 353.8 432.25 353.8 432.25 cv
353.564 425.807 li
353.564 425.807 353.604 349.089 352.624 341.254 cv
352.526 340.568 352.33 339.53 351.978 338.238 cv
358.187 337.787 365.335 336.396 371.485 334.967 cv
372.465 339.668 373.15 343.252 373.248 344.623 cv
373.365 346.288 372.993 353.887 372.406 363.817 cv
372.406 363.837 li
371.133 385.4 368.841 417.874 368.391 424.298 cv
cp
f
357.462 280.675 mo
358.402 281.204 359.342 281.811 360.321 282.242 cv
361.184 282.634 362.084 282.947 362.633 283.77 cv
363.514 285.063 366.805 289.194 366.275 289.724 cv
364.729 291.31 363.612 288.568 361.595 287.139 cv
359.577 285.729 360.321 288.294 360.909 289.332 cv
361.477 290.351 368.293 297.421 367.099 298.322 cv
365.884 299.223 362.711 299.359 360.674 299.007 cv
358.617 298.674 356.463 297.323 354.348 294.189 cv
353.074 292.289 351.41 288.999 350.392 286.923 cv
350.353 286.942 li
348.746 283.75 340.383 266.984 333.998 253.235 cv
329.748 244.069 326.359 236.254 326.438 234.629 cv
326.653 230.319 333.698 189.262 337.752 182.211 cv
339.006 180.037 339.424 178.28 342.303 176.948 cv
342.303 176.968 li
351.155 178.28 351.586 194.811 351.155 199.257 cv
351.097 199.884 350.999 200.471 350.842 200.98 cv
349.804 197.514 li
349.804 197.514 349.099 200.726 348.08 205.309 cv
345.632 216.492 340.854 230.829 340.755 232.2 cv
340.657 233.786 353.016 268.297 357.462 280.675 cv
cp
f
361.301 177.281 mo
361.301 177.301 li
360.674 179.044 li
360.537 175.715 li
360.537 175.715 361.007 175.949 361.673 176.263 cv
361.301 177.281 li
cp
.956863 .698039 .596078 rgb
f
349.804 197.514 mo
350.842 200.98 li
350.02 204.134 348.08 205.309 348.08 205.309 cv
349.099 200.726 349.804 197.514 349.804 197.514 cv
cp
f
128.795 178.519 mo
128.484 181.131 126.08 202.171 125.873 207.042 cv
125.645 212.245 121.375 227.066 119.923 229.408 cv
119.923 229.429 li
117.664 229.471 115.363 228.435 113.601 226.236 cv
112.461 224.827 110.657 221.594 108.605 217.572 cv
110.782 215.769 117.063 206.088 117.063 206.088 cv
117.083 206.088 li
117.622 207.042 li
117.622 207.042 127.427 164.589 128.919 161.646 cv
129.687 160.132 132.257 158.682 134.537 157.624 cv
133.998 161.625 li
136.962 159.738 li
137.377 160.36 li
137.397 160.36 li
138.186 164.423 li
140.942 156.339 li
143.533 162.599 li
143.533 162.599 147.575 159.655 149.399 157.79 cv
150.664 156.484 151.224 155.489 151.452 155.012 cv
154.105 155.51 162.169 158.143 164.553 160.857 cv
166.957 163.573 172.45 218.359 172.679 222.94 cv
172.72 223.646 172.119 225.47 171.103 228.061 cv
170.087 227.626 168.201 226.838 165.382 225.843 cv
162.044 224.682 158.417 223.646 156.779 223.189 cv
157.276 221.614 157.546 220.619 157.525 220.37 cv
157.381 218.339 148.509 178.229 148.509 178.229 cv
148.509 178.229 150.125 201.383 151.597 211.686 cv
153.048 221.697 145.855 254.18 145.44 256.024 cv
145.42 256.107 li
143.119 262.554 141.025 268.42 139.678 272.131 cv
139.678 272.131 138.269 272.587 136.879 273.25 cv
132.734 272.524 129.728 271.675 128.028 271.115 cv
126.95 270.783 126.391 270.556 126.391 270.556 cv
126.598 265.975 127.178 243.317 127.738 221.594 cv
128.256 200.886 128.754 181.048 128.795 178.519 cv
cp
level3{
gsave
clp
[50.9336 88.2196 -88.2196 50.9336 127.363 184.324 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.776471 .87451 .94902 ]
/C1 [.607843 .717647 .988235 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.607843 .717647 .988235 ]
/C1 [.607843 .717647 .988235 ]
/N 1.7261 
>>
]
/Bounds [.998965 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[50.9336 88.2196 -88.2196 50.9336 127.363 184.324 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`l5p9`Pod6`5KU4_o'C0_o'@._SX1,_83t(_83q&^qdb$^V@Ou^V@Ls^:q=q]tM+m]tM(k]Y(ni]=Y\e
]=YYc]"5Ja\[f8]\[f5[\@B&Y\$riU\$rfS[^NWQ[C*EM[C*BK['[3IZa7!EZa-mBZEgd@Z*CR=Z*:I:
Yct@8YHP.5YHG%2Y-+q0Xf\_-XfSV*XK8M(X/i;%X/`2"WiE(uWMukrWMlboW2QYmVl-GjVl$>gVP^5e
V5:#bV50o_Unjf]USFTZUS=KWU8"BUTqS0RTqJ'OTV.pLT:_aJSt;OFSt;LDSXl=BS=H+>S=H(<S"#n:
~>
<~hqm5HhVR,Fh;-oCh;$f@gt^]?gY:K;gY:H9g=k97g"G'3g"G'2f\"j/f[na,f@SX+f%/F'f%/C%e^`4#
eC<!teC<!se'ldpe'c[mdaHRldF$@hdF$=fd*U.dcd0q`cd0q_cHa_\cHXVYc-=MXbfn;Tbfn8RbKJ)P
b0%lLb0%lKaiVZHaiMQEaN2HDa2c6@a2c3>`l?$<`Pog8`Pog7`5KU4`5BL1_o'C0_SX1,_SX.*_83t(
^qdb$^qdb#^V@Ou^V7Fr^:q=p]tM+m]tM(k]Y(ni]=Y\e]=Y\d]"5Ja]",A^\[f8\\@B&Y\@B#W\$riU
~>
<~o()ABo()ABo()ABo()ABo()ABo()ABo()DDoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo_%nMp%A"Np%A"Np%A"Np%A"Np%A"Np%A"Op@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4R
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4IXq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>0saqYL'bqYL'bqYL'bqYL'bqYL'bqYL'cqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
168.305 234.632 mo
166.004 234.135 158.002 231.543 154.789 229.242 cv
154.416 228.994 154.126 228.745 153.898 228.496 cv
155.867 222.94 li
155.867 222.94 156.199 223.023 156.779 223.189 cv
158.417 223.646 162.044 224.682 165.382 225.843 cv
168.201 226.838 170.087 227.626 171.103 228.061 cv
171.704 228.352 172.015 228.496 172.015 228.496 cv
172.015 228.496 169.444 234.487 168.905 234.715 cv
168.844 234.735 168.636 234.715 168.305 234.632 cv
cp
level3{
gsave
clp
[6.41376 20.6896 -20.6896 6.41376 160.504 220.584 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.41376 20.6896 -20.6896 6.41376 160.504 220.584 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
149.213 274.598 mo
147.887 277.271 147.078 278.867 147.078 278.867 cv
147.037 278.847 li
145.979 281.044 144.384 284.133 143.14 285.978 cv
140.901 289.294 138.621 290.725 136.444 291.077 cv
135.594 291.222 134.558 291.284 133.542 291.243 cv
131.967 291.201 130.433 290.932 129.645 290.352 cv
128.381 289.397 135.594 281.915 136.195 280.837 cv
136.817 279.738 137.605 277.022 135.47 278.516 cv
133.335 280.028 132.153 282.931 130.516 281.251 cv
129.956 280.691 133.438 276.318 134.371 274.95 cv
134.765 274.349 135.822 273.747 136.879 273.25 cv
138.269 272.587 139.678 272.131 139.678 272.131 cv
141.025 268.42 143.119 262.554 145.42 256.107 cv
145.44 256.024 li
148.716 246.842 152.385 236.436 154.789 229.242 cv
158.002 231.543 166.004 234.135 168.305 234.632 cv
167.973 235.44 167.6 236.249 167.206 237.099 cv
167.206 237.119 li
161.589 249.577 153.131 266.721 149.213 274.598 cv
cp
1 .784314 .686275 rgb
f
125.043 357.492 mo
124.504 345.221 124.152 335.645 124.297 333.778 cv
124.649 329.031 130.93 302.25 133.542 291.243 cv
134.558 291.284 135.594 291.222 136.444 291.077 cv
138.621 290.725 140.901 289.294 143.14 285.978 cv
144.384 284.133 145.979 281.044 147.037 278.847 cv
147.078 278.867 li
147.078 278.867 147.887 277.271 149.213 274.598 cv
154.146 274.825 159.785 274.742 166.004 274.059 cv
166.004 274.079 li
166.004 274.079 147.141 321.922 146.125 330.213 cv
145.171 337.8 144.155 410.911 143.989 423.452 cv
139.45 423.7 128.422 422.768 128.422 422.768 cv
128.422 422.768 128.36 422.788 128.256 422.851 cv
127.8 414.373 126.08 380.958 125.043 357.492 cv
cp
level3{
gsave
clp
[63.15 109.379 -109.379 63.15 115.67 293.964 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[63.15 109.379 -109.379 63.15 115.67 293.964 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
154.789 229.242 mo
154.416 228.994 154.126 228.745 153.897 228.496 cv
155.867 222.94 li
155.867 222.94 156.199 223.023 156.779 223.189 cv
157.276 221.614 157.546 220.619 157.525 220.37 cv
157.381 218.339 148.509 178.229 148.509 178.229 cv
148.509 178.229 150.125 201.383 151.597 211.686 cv
153.048 221.697 145.855 254.18 145.44 256.024 cv
148.716 246.841 152.385 236.436 154.789 229.242 cv
cp
167.206 237.119 mo
161.589 249.577 153.131 266.721 149.213 274.598 cv
154.146 274.825 159.785 274.742 166.004 274.059 cv
166.584 274.017 167.164 273.935 167.766 273.872 cv
167.206 237.119 li
cp
level3{
gsave
clp
[36.1379 58.7586 -58.7586 36.1379 117.786 175.886 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[36.1379 58.7586 -58.7586 36.1379 117.786 175.886 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
148.343 152.753 mo
148.674 152.524 148.965 152.338 149.151 152.151 cv
151.597 154.681 li
151.597 154.681 151.556 154.805 151.452 155.012 cv
151.224 155.489 150.664 156.484 149.399 157.79 cv
147.575 159.655 143.533 162.599 143.533 162.599 cv
140.942 156.339 li
140.942 156.339 146.021 154.245 148.343 152.753 cv
cp
level3{
gsave
clp
[10.6547 0 0 10.6547 140.942 157.375 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.6547 0 0 10.6547 140.942 157.375 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
135.947 155.759 mo
135.574 155.924 135.159 156.11 134.703 156.318 cv
133.127 157.044 131.262 157.811 130.702 157.79 cv
128.754 157.707 122.742 153.416 119.446 148.545 cv
118.928 147.799 118.472 147.011 118.12 146.244 cv
116.461 141.953 li
121.208 143.321 126.826 144.088 127.987 143.715 cv
129.562 143.218 130.64 142.637 131.138 142.74 cv
131.635 142.865 134.206 145.207 135.076 144.71 cv
135.926 144.212 134.537 140.73 134.537 140.73 cv
134.848 139.693 136.258 138.947 137.252 139.362 cv
138.725 139.963 139.533 141.953 139.802 143.404 cv
139.864 143.735 139.864 144.067 139.782 144.357 cv
139.699 144.689 139.533 144.979 139.201 145.187 cv
138.745 145.498 138.186 145.602 137.646 145.685 cv
137.646 145.685 138.994 149.042 140.175 148.835 cv
141.108 148.648 140.963 146.265 140.88 145.249 cv
141.751 145.933 142.974 146.824 143.969 147.363 cv
145.73 148.296 147.265 148.607 147.265 148.607 cv
147.658 150.12 148.011 151.53 148.343 152.753 cv
146.021 154.245 140.942 156.339 140.942 156.339 cv
138.186 164.423 li
137.397 160.36 li
137.149 159.116 li
136.755 158.039 li
139.45 154.079 li
137.149 155.178 li
136.465 155.51 li
136.32 155.572 136.133 155.655 135.947 155.759 cv
cp
1 .784314 .686275 rgb
f
114.492 141.331 mo
113.56 141.021 112.709 140.668 111.984 140.295 cv
111.984 140.295 114.347 136.17 116.71 132.521 cv
119.053 128.894 123.343 125.349 125.167 124.748 cv
126.992 124.168 127.904 124.748 127.904 124.748 cv
127.904 124.748 129.085 123.359 131.759 123.794 cv
134.454 124.229 138.331 125.723 141.627 130.117 cv
144.901 134.512 147.119 148.089 147.119 148.089 cv
147.161 148.275 147.224 148.441 147.265 148.607 cv
147.265 148.607 145.73 148.296 143.969 147.363 cv
142.974 146.824 141.751 145.933 140.88 145.249 cv
140.217 144.73 139.782 144.357 139.782 144.357 cv
139.864 144.067 139.864 143.735 139.802 143.404 cv
139.533 141.953 138.725 139.963 137.252 139.362 cv
136.258 138.947 134.848 139.693 134.537 140.73 cv
134.537 140.73 135.926 144.212 135.076 144.71 cv
134.206 145.207 131.635 142.865 131.138 142.74 cv
130.64 142.637 129.562 143.218 127.987 143.715 cv
126.826 144.088 121.208 143.321 116.461 141.953 cv
115.777 141.767 115.114 141.56 114.492 141.331 cv
cp
level3{
gsave
clp
[15.8996 27.539 -27.539 15.8996 121.848 126.562 ]ct
/13 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.301961 .364706 .92549 ]
/C1 [.254902 .211765 .921569 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.254902 .211765 .921569 ]
/C1 [.258824 0 .529412 ]
/N 1 
>>
]
/Bounds [.326986 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[15.8996 27.539 -27.539 15.8996 121.848 126.562 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~9h\5S9MA,Q91qoN91qlL8kM]J8kDTG8P)KF84Z9B84Z9A7n6'>7n6$<7Rfj:7R]a777BX66psF26psF1
6UO4.6UO1,6:+"*6:!n'5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&
5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&
5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&5s[e&
~>
<~?!LW=>?Y35=]ed-=&r@&<E3!t;c?Rl;,L.d:JXb]:/+GV9M8#N8kDTF84Z6@7Rfg86psC06:*t(5sR\"
5<_7o4Zkhg4$#D`3B9&Y2`EWQ2)R6J1c.$F1G^dA1,1L<0JG160/"t2/hS_-/M&G(.k<,".Olkr.4HYn
-mpAi-71&c,paf^,U=TZ,9e<U+X&!O+<VaJ+!2OF*ZZ7A*#oq;)]K\6)B'J2)&O2-(Ddl'()@W"'bh>r
'GD,n&eYfh&J5Qc&.]9^%h9'Z%1NaT$k*LO$OR4J$4."F#RC\@#6tG;"pG/6"U"r2!s8W,!WiB'!<<*"
~>
<~m-F!'lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lK[Wuki_-kk2k^cj5].YiS`YOhqm5Ggt^Z=g=b03f[na+e^`1!e'lam
dEp7dcHa\Zbfn8Qb/qcHaN)<?`Pod5_ns:,_8*h#^:q:n]Xtee]",>\\$rfS[C!<IZa-j@Yct=7Y-"h-
XK/A$WMuhpVl$>fV50o^U8"?TTV%jJSt2FBS"#k8R@'A.Q^3r&Pa%AqP*1rhOH5H_NK&mUMi3ILM26tC
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
128.256 422.851 mo
128.36 422.788 128.422 422.768 128.422 422.768 cv
128.422 422.768 139.45 423.7 143.989 423.452 cv
143.989 423.825 143.989 424.156 143.969 424.426 cv
143.616 434.044 li
138.725 434.044 119.674 434.044 115.757 434.044 cv
112.212 434.044 112.191 432.925 113.808 431.37 cv
117.021 428.281 126.805 423.535 128.256 422.851 cv
cp
level3{
gsave
clp
[8.88703 15.3928 -15.3928 8.88703 125.787 423.814 ]ct
/14 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.219608 .141176 .490196 ]
/C1 [.466667 .164706 .552941 ]
/N 1.27262 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.88703 15.3928 -15.3928 8.88703 125.787 423.814 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~GBS.QF`hhKFEDSFF)l;AEcH)=E,]c7Df9N2DJj<.D/=$)CMR^$C2.KtBk_6oBP;$kB4bafAn>ObA7T4\
@q0"X@U`bS@:<PO?sd8J?X@&F?!U`A>[1N=>?b<8>$>*4=]nj/=BJX+='&F'<`W4#<E)ps<)Z^o;c6Lk
;Gg:g;,C(c:esk_:JOY[:/+GW9h\5S9M8#O91hfK8kDTG8OuBC84Q0?7n6$<7Rfg877BU46psF16UO4.
6:+"*5s[e&5sR\#5X7Ou5<h@r5!D.o4Ztqk4Ztni4?P_f4$,Mc4$#D`3]];^3B9)[3B9)Z3&ilW3&ilW
~>
<~.Oceq.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\p.4H\o-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
-n$Jl-n$Gj-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-RU8h-71&d-71&d-71&d-71&d-71&d
-71&d-71&d-71&d-71&d-71&d-7'ra,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pai`
,paf^,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\,U=W\
~>
<~NJrgTN/W^SN/W^SN/NUPMi3LOMi3LOMi3IMMMd:KMMd:KMMd:JM2@(GM2@(GM2@(GLkpkCLkpkCLkpkC
LkphALPLY?LPLY?LPLY?L5(G;L5(G;L5(G;L5(D9KnY57KnY57KnY57KS5#3KS5#3KS5#3KS5#2K7ef/
K7ef/K7ef/K7ec-JqAT+JqAT+JqAT+JqAQ)JUrB'JUrB'JUrB'JUr?%J:N0#J:N0#J:N0#J:N0#It)rt
It)rtIt)rtIt)rtIt)rsIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pI=6NlI=6NlI=6NlI=6NlI=6NlI=6NlI=6Nl
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
140.88 145.249 mo
140.963 146.265 141.108 148.648 140.175 148.835 cv
138.994 149.042 137.646 145.685 137.646 145.685 cv
138.186 145.602 138.745 145.498 139.201 145.187 cv
139.533 144.979 139.699 144.689 139.782 144.357 cv
139.782 144.357 140.217 144.73 140.88 145.249 cv
cp
.956863 .698039 .596078 rgb
f
139.45 154.079 mo
136.755 158.039 li
135.947 155.759 li
136.133 155.655 136.32 155.572 136.465 155.51 cv
137.149 155.178 li
139.45 154.079 li
cp
f
136.962 159.738 mo
134.703 156.318 li
135.159 156.11 135.574 155.924 135.947 155.759 cv
136.755 158.039 li
137.149 159.116 li
137.397 160.36 li
137.377 160.36 li
136.962 159.738 li
cp
level3{
gsave
clp
[2.69468 0 0 2.69468 134.703 158.059 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.69468 0 0 2.69468 134.703 158.059 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
134.537 157.624 mo
134.703 156.318 li
136.962 159.738 li
133.998 161.625 li
134.537 157.624 li
cp
level3{
gsave
clp
[6.13788 6.55168 -6.55168 6.13788 130.745 155.123 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.13788 6.55168 -6.55168 6.13788 130.745 155.123 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
135.47 278.516 mo
137.605 277.022 136.817 279.738 136.195 280.837 cv
135.594 281.915 128.381 289.397 129.645 290.352 cv
130.433 290.932 131.967 291.201 133.542 291.243 cv
130.93 302.25 124.649 329.031 124.297 333.778 cv
124.152 335.645 124.504 345.221 125.043 357.492 cv
113.435 420.633 li
113.435 420.633 110.761 420.487 106.346 420.26 cv
101.91 420.053 97.9092 418.975 97.9092 418.975 cv
97.9092 418.975 109.082 339.935 109.932 334.773 cv
110.782 329.633 128.028 271.136 128.028 271.136 cv
128.028 271.115 li
129.728 271.675 132.734 272.524 136.879 273.25 cv
135.822 273.747 134.765 274.349 134.371 274.95 cv
133.438 276.318 129.956 280.691 130.516 281.251 cv
132.153 282.931 133.335 280.028 135.47 278.516 cv
cp
level3{
gsave
clp
[61.0948 105.819 -105.819 61.0948 62.4743 250.988 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[61.0948 105.819 -105.819 61.0948 62.4743 250.988 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
128.795 178.519 mo
128.754 181.048 128.256 200.886 127.738 221.594 cv
126.681 226.672 123.364 229.347 119.923 229.408 cv
121.375 227.066 125.645 212.245 125.873 207.042 cv
126.08 202.171 128.484 181.131 128.795 178.519 cv
cp
level3{
gsave
clp
[26.4828 43.3105 -43.3105 26.4828 109.271 179.288 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[26.4828 43.3105 -43.3105 26.4828 109.271 179.288 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
118.12 146.244 mo
118.472 147.011 118.928 147.799 119.446 148.545 cv
119.446 148.545 115.922 146.907 115.301 145.436 cv
114.72 144.005 114.513 143.425 114.492 141.331 cv
115.114 141.56 115.777 141.767 116.461 141.953 cv
118.12 146.244 li
cp
level3{
gsave
clp
[4.36217 7.55551 -7.55551 4.36217 114.505 141.324 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.36217 7.55551 -7.55551 4.36217 114.505 141.324 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
104.231 208.576 mo
105.185 207.498 107.113 205.425 108.896 203.829 cv
110.782 202.171 112.938 201.03 113.891 200.554 cv
114.223 200.408 114.409 200.326 114.409 200.326 cv
117.063 206.088 li
117.063 206.088 110.782 215.769 108.605 217.572 cv
108.418 217.717 108.253 217.821 108.128 217.842 cv
106.698 218.049 103.609 209.26 103.609 209.26 cv
103.609 209.26 103.837 208.99 104.231 208.576 cv
cp
level3{
gsave
clp
[1.34313e-15 21.935 -21.935 1.34313e-15 110.336 211.138 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.34313e-15 21.935 -21.935 1.34313e-15 110.336 211.138 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
101.433 178.892 mo
113.891 200.554 li
112.938 201.03 110.782 202.171 108.896 203.829 cv
107.113 205.425 105.185 207.498 104.231 208.576 cv
99.2358 198.066 94.4058 186.997 94.4058 186.997 cv
94.4058 186.894 li
89.293 185.293 li
85.1475 184.111 84.7046 181.753 84.145 178.353 cv
83.71 175.658 84.2695 172.486 84.8706 171.036 cv
90.3223 182.955 li
90.5713 183.515 92.25 183.494 92.6855 183.059 cv
92.7891 183.017 92.8926 182.955 92.9756 182.872 cv
96.9351 178.892 li
97.2456 178.561 97.3286 178.084 97.1421 177.669 cv
95.9189 175.016 li
95.8154 174.746 li
95.7324 174.58 95.6499 174.353 95.5254 174.124 cv
95.1729 173.378 li
94.4058 171.699 li
94.3438 171.533 li
93.7632 170.082 93.4521 168.693 94.3232 168.258 cv
95.4839 167.678 96.8936 169.626 97.5151 171.098 cv
97.8882 172.01 102.096 174.87 101.475 178.871 cv
101.433 178.892 li
cp
1 .784314 .686275 rgb
f
113.435 420.633 mo
113.083 430.251 li
108.191 430.251 89.1406 430.251 85.2231 430.251 cv
74.0708 430.251 97.9092 418.975 97.9092 418.975 cv
97.9092 418.975 101.91 420.053 106.346 420.26 cv
110.761 420.487 113.435 420.633 113.435 420.633 cv
cp
level3{
gsave
clp
[8.88073 15.3819 -15.3819 8.88073 95.0458 420.155 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.88073 15.3819 -15.3819 8.88073 95.0458 420.155 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
96.458 177.959 mo
96.624 177.793 96.6655 177.545 96.5825 177.337 cv
89.7832 162.454 li
89.6592 162.185 89.3481 162.019 89.0371 162.06 cv
83.627 162.868 li
83.2744 162.91 83.0879 163.283 83.2329 163.594 cv
91.5869 181.877 li
91.7319 182.209 92.167 182.291 92.4365 182.022 cv
96.458 177.959 li
cp
95.9189 175.016 mo
97.1421 177.669 li
97.3286 178.084 97.2456 178.561 96.9351 178.892 cv
92.9756 182.872 li
92.8926 182.955 92.7891 183.017 92.6855 183.059 cv
92.271 183.225 91.7524 183.059 91.5454 182.603 cv
82.5488 162.931 li
82.3833 162.537 82.5283 162.102 82.8809 161.915 cv
82.9634 161.873 83.0464 161.832 83.1499 161.832 cv
88.5396 161.023 li
89.0991 160.94 89.6592 161.252 89.8872 161.77 cv
94.3438 171.533 li
94.4058 171.699 li
94.6548 172.279 94.9243 172.859 95.1729 173.378 cv
95.5254 174.124 li
95.8154 174.746 li
95.9189 175.016 li
cp
level3{
gsave
clp
[11.6118 20.1122 -20.1122 11.6118 84.3108 161.089 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.6118 20.1122 -20.1122 11.6118 84.3108 161.089 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
96.5825 177.337 mo
96.6655 177.545 96.624 177.793 96.458 177.959 cv
92.4365 182.022 li
92.167 182.291 91.7319 182.209 91.5869 181.877 cv
83.2329 163.594 li
83.0879 163.283 83.2744 162.91 83.627 162.868 cv
89.0371 162.06 li
89.3481 162.019 89.6592 162.185 89.7832 162.454 cv
96.5825 177.337 li
cp
level3{
gsave
clp
[10.5268 18.233 -18.233 10.5268 84.8736 162.1 ]ct
/15 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.937255 .811765 .392157 ]
/C1 [1 .443137 .34902 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[10.5268 18.233 -18.233 10.5268 84.8736 162.1 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f`6n*f`6n*f`6nF5r:nF5r:nF5r:nF5r:naZ/>naZ/>naZ/>naZ/>o()ABo()ABo()ABo()AB
oCMSFoCMSFoCMSFoCMSFo^qeJo^qeJo^qeJo^qeJp%A"Np%A"Np%A"Np%A"Np@e4Rp@e4Rp@e4Rp@e4R
p\4FVp\4FVp\4FVp\4FVq"XXZq"XXZq"XXZq"XXZq>'j^q>'j^q>'j^q>'j^qYL'bqYL'bqYL'bqYL'b
qtp9fqtp9fqtp9fqtp9fr;?Kjr;?Kjr;?Kjr;?KjrVc]nrVc]nrVc]nrVc]nrr2orrr2orrr2orrr2or
~>
<~cd'h\c-=JVbfe2Pb0%iJaiMQEa2c3>`l5p9`5KR2_ns:-_83t'^q[Y!^:q=p]tM(k]=Y\d]"5G_\@B&X
\$rfS[^ENM['[0GZa-mAZ*CO;Yck76Y-+n/XfSV*X/i;$Wi;tsW2QYmVl$>gV5:#aUnjc\U8"BUTqS-P
T:_aISt;LDSXc4>S"#k8R[KS3R$a5,Q^3r'Q'ISuP`q;pP*1ujOcYZdO,o?^NfK*YN/W^RMi3IMM2@(F
LkphALPCP;KnY25KS+o/JqAQ)JUi9$It)orIXQWmI!g<gH[:!aH$O[[G^"@UG'8%OF`heJF)uDCEcQ/>
~>
<~A7K+Z@q0"Y@q0"Y@q0"Y@q0"Y@q0"Y@U`eU@U`eU@U`eU@U`eU@U`eU@U`eT@:<SQ@:<SQ@:<SQ@:<SQ
@:<SQ@:<PO?smAM?smAM?smAM?smAM?smAM?sm>K?XI/I?XI/I?XI/I?XI/I?XI/I?X@&F?=$rE?=$rE
?=$rE?=$rE?=$rE?!U`A?!U`A?!U`A?!U`A?!U`A?!U`@>[1N=>[1N=>[1N=>[1N=>[1N=>[1N<>?b<9
>?b<9>?b<9>?b<9>?b<9>?b97>$>*5>$>*5>$>*5>$>*5>$>*5>$5!2=]nm1=]nm1=]nm1=]nm1=]nm1
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
84.8706 171.036 mo
81.3262 163.283 li
81.0981 162.807 81.4087 162.247 81.9272 162.185 cv
82.8809 161.895 li
82.8809 161.915 li
82.5283 162.102 82.3833 162.537 82.5488 162.931 cv
91.5454 182.603 li
91.7524 183.059 92.271 183.225 92.6855 183.059 cv
92.25 183.494 90.5713 183.515 90.3223 182.955 cv
84.8706 171.036 li
cp
level3{
gsave
clp
[11.4352 0 0 11.4352 81.2502 172.637 ]ct
/16 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.231373 .419608 1 ]
/C1 [.407843 .67451 1 ]
/N 1.14527 
>>
]
/Bounds []
/Encode [1 0 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[11.4352 0 0 11.4352 81.2502 172.637 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~BP1sjB4bafAnGUcAS#F`A7T4]@q0"Y@q/tW@U`eT@:<SQ?smAM?sd8J?XI,G?=$rD?!U`A>[1N=>[(E:
>?b97>$>*5=]nm1=]ed.=BJX+='&I(<`W7%<`N."<E3!t<)cgq;c?Un;c6Lk;Gp@h;,L1e:f'tb:esk_
:JX_\:/4PZ9he>V9h\5S9MA,Q91qoN91hfK8kMZH8P)KF84Z9B84Z6@7n6'>7Rfj:7Rfg877BX66psF2
6psC06UO4.6:+"*6:*t(5s[e&5X7S"5X7S!5<h@s5<h=q5!D.o4Ztqk4Ztqk4?P_g4?P_f4$,Mc4$,Mc
~>
<~XK/D&WiE(uWMukqW2QVlVl-DhVPU,cV50o_USFTZU8"BUTqS0QTV.pLT:_^HSt2FCSXc4?S"#n:R[T\6
R@0J1R$a8-Q^=#(QBmf$Q'ISuP`q;pPEM)lP*(lhOH>QcO,o?_NfK-ZNK&pVN/W^RMi3LNMMd7IM2@%E
LkphALPLV=L5(D9KnP,4KS+o0K7\],Jq8K(JUi9$J:E&uIsuiqIXQWmI=-EiI!^3eH[:!aH?jd]H$OXZ
G^+FVGB\4RG'8"NF`hhKFEDVGF)uDCEcQ2@EH,u<EH#l9E,TZ5Df9N2DJj?/D/F-,Ci!p(Ci!m&CMR^$
~>
255 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
117.063 206.088 mo
109.409 219.13 li
108.605 217.572 li
108.605 217.572 112.713 212.311 113.891 210.518 cv
115.069 208.724 117.063 206.088 117.063 206.088 cv
cp
level3{
gsave
clp
[4.75461 7.77577 -7.77577 4.75461 110.483 208.106 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.75461 7.77577 -7.77577 4.75461 110.483 208.106 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
392.995 167.5 mo
391.537 166.042 391.537 163.668 392.995 162.21 cv
393.702 161.503 394.642 161.114 395.641 161.114 cv
396.64 161.114 397.579 161.503 398.286 162.21 cv
398.762 162.686 li
399.236 162.21 li
399.943 161.503 400.883 161.114 401.882 161.114 cv
402.881 161.114 403.82 161.503 404.527 162.21 cv
405.985 163.668 405.985 166.042 404.527 167.5 cv
398.762 173.266 li
392.995 167.5 li
cp
level3{
gsave
clp
[6.29342 10.9005 -10.9005 6.29342 396.11 160.263 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.29342 10.9005 -10.9005 6.29342 396.11 160.263 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
90.3252 151.082 mo
88.8667 149.623 88.8667 147.25 90.3252 145.791 cv
91.0317 145.085 91.9712 144.695 92.9707 144.695 cv
93.9697 144.695 94.9092 145.085 95.6157 145.791 cv
96.0908 146.267 li
96.5664 145.791 li
97.2729 145.085 98.2124 144.695 99.2114 144.695 cv
100.211 144.695 101.15 145.085 101.857 145.791 cv
103.315 147.25 103.315 149.623 101.857 151.082 cv
96.0908 156.848 li
90.3252 151.082 li
cp
level3{
gsave
clp
[6.2934 10.9005 -10.9005 6.2934 93.4396 143.844 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[6.2934 10.9005 -10.9005 6.2934 93.4396 143.844 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
388.264 154.801 mo
387.344 153.88 387.344 152.383 388.264 151.463 cv
388.71 151.017 389.303 150.771 389.933 150.771 cv
390.563 150.771 391.156 151.017 391.602 151.463 cv
391.901 151.763 li
392.201 151.463 li
392.647 151.017 393.24 150.771 393.87 150.771 cv
394.501 150.771 395.094 151.017 395.54 151.463 cv
396.46 152.383 396.46 153.88 395.54 154.801 cv
391.901 158.438 li
388.264 154.801 li
cp
level3{
gsave
clp
[3.97074 6.87752 -6.87752 3.97074 390.229 150.234 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.97074 6.87752 -6.87752 3.97074 390.229 150.234 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
97.335 132.634 mo
96.415 131.714 96.415 130.217 97.335 129.296 cv
97.7808 128.851 98.3735 128.605 99.0039 128.605 cv
99.6343 128.605 100.227 128.851 100.673 129.296 cv
100.973 129.597 li
101.273 129.296 li
101.719 128.851 102.312 128.605 102.942 128.605 cv
103.572 128.605 104.165 128.851 104.611 129.296 cv
105.531 130.217 105.531 131.714 104.611 132.634 cv
100.973 136.271 li
97.335 132.634 li
cp
level3{
gsave
clp
[3.97069 6.87744 -6.87744 3.97069 99.3 128.068 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.97069 6.87744 -6.87744 3.97069 99.3 128.068 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Pattern [/1100066816.0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 ]]
] del_res
/YLFKHX+Courgette-Regular*1 uf
/YLFKHY+FiraSans-Book*1 uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 24.0.1
%%For: (Ayib Makmun B9) ()
%%Title: (dating app concept - up-02.eps)
%%CreationDate: 4/20/2020 4:09 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBij'#oC2AJT#5aXFFsXOpP#bQ.4nbTmL(n/JWp_D:=B,f?i3.c1Qj%gG.bmfH:)Am.4(!*Bh"lN1aChg=)iuN<kE]UEW3FI
%cubtc.8#=o&4Q5hDFdG#gq3<TI:W(t.b:-PnCm:?%UGuHp\Rsgj1,&i6M7h</aQUVn;UHC@!=ZWY<o'q26YYV)GYL,l8h<,_B'-P
%bp3*pfWe[\B>)Z*]@O7;m;H#F-hQ-,D7Ak4^6d#)l=m$LYoA^MD%-iH<#"h#;*(ffgRZppnG:@P[gKDbiofk]L?)&N5X:mUhtXa2
%\oS=ANhJs.%.oUL\TbDd@H!!>\?(.20t$l\f,D#em[#fbZKq.c/bc9;KN(q8`4kY^XFZ@NDhp_W/Slm<qN(S?.g'>=,UrLM;%ZZ`
%VMRKMP"DYWF(PAfgV:0(05R\#]*(9.GAu@:(SDKXB\WDY^,d0UD"gZ5N=`8OB;UHV4f;k8i/OCd7`WAZ_*nc]P8YeaROt0aV_^_3
%!SI<V?k.@^h_lZ#M0*dbZb%U1><H"f;i@@sb((dD.uL4*(;upS^I5mdkdjV&%G[MK'b&n?J/J22h4QZ'MmP-C7T4O;Z[1Q<0A>56
%<D]>!;^2simC$68I-X\Hn:"fMM?`[uV#SO"!>e"g?&B_s[H\f#3C7`S(j0-Q[]7V1R[?;8=94lT!]bCn$hA0(!Ik>K%!tYIHs6A:
%2G68hcG8j8M]KE;C8D<iqIp%W)l<DXFUFio0K%.W^0NdTBkqq+Vl_cD)6D/-YMY*&9.fJh_KO%Nn9q:hG(FDR48/\H4kgu^3lA\^
%D3^-NQKrWc(U/.'gE$0=:cbNWfr/63kQ/&Grs$,B%f@r!<VjQ/l>-`%#:7":ZMKn6q\oJnJ9>Rm@.gmCZs99/I\]p2A]HF2S3[B\
%?b7G\B'D[`D7]df^JO4iX<sT-;bG<.le:1WDtoujc<TPTm[bS6+_jK'eh8nOhJ^i>gH)gIgYI#h?Iu"di4n*T3aHAp]):Br[(@V#
%05Ys=<P#W-BNTdcR&!W`1[N#K_gZ=hbNTN<Bl1mB%5(r@p-2^)iP7'O%tS?S&q8DH_YiHFRWbafkuc;qdgb/a!F8q.k-0J.A/OOR
%+%+5*GL2tK<p/9(K08K:6rPS#0g.d#AZs-01Rhqd^L\M`1'4+JY*Z/!#c0S2]i<$*6S!<Aot(1[N`U#:lXGXKZfBZ:%k^NP\3jrl
%^jG%UHf9L#iP6D]JcFU"YVTte3kn;mr=5QY2\_oDhTKi)Qf%RVIIOs5\TD)L()pA)(J(Z8ZFl2L$BN0=D0]DkINoUtLLlg@'HOXV
%]'ZnC#;8GC[f9[gX4?oY[@&Z$IN9BSdIfPB]]otIPJb&kO=L6VXnL(!HJfrVke0%LH5_OX1\BT#m<q.5aS8IO0E#ripDBY$o(8^g
%Eac#Q%tm>="_KUaDUUoBJ#dNL,%fj<n#+TI^!c,6*c!t8\:f21r^Qc6S@Cr`jEJqq0sHb4O,A?&;!:J">hbGRE<@Z!S24b&?E^7\
%N'e_F!FFsd4oCjjHIs+PQeSZ!m-So@SY^g:n_46*riTPr^0N7jifEa3U=J\6A\;BVcTt\?)Xs?L]0G\Cdpj<ilLD6+fWi#<J,G#X
%i,0J:`h<QD"\k_Kp>A)8S%rcbG&r1<_0$shVc7'<ip#_[<!CtJYMCZJS:-/'cihq>J8Sa@G;%>+%WGdNE&hg`rh#`AH6f0>D?6+B
%]TE1ZC7XBlet@<!gHOrpJ5EX=d_`$O?+-5VMEC03(/>jIj7a;[]g!t4GPE]\ApU@/oZQiL(Nd=,nZY0\K79?V*`DD6a-Tg;4Uu3J
%F3V:OPCkK60+JPNZj7)5+F<Kq!\fPhr3t[3JhQ;d(XUSAB&`XmJ*$Dl*oFb>4CiS"8*p,tHQRl`&Ms$MEK0kiopO9CpTK5.1/ABG
%O(pU8p@3&to,.J,,"]VnK$@"d,Lo,Wb6j/E(MON<_,auehu6WK*t'.)!'M&89DSk2P#SBeY_rI*koW3F!lim"I\=Y/s.m-6oZpGE
%LFgN@/BaK`bGJO,CN<\m'hM7::!j\SW@0X#!MG=MXK#[pl)L_KeZ)eO)k*]sR]NKWVAYi%<OAc,di(mZBFPuHF'[0Nh9\m0U=]%K
%hCq>GP+`_mTc8_p)AT#^e;T,2R%P+^ZDj4kWL:>3RUrg?f$$1>7Th-leQJ3]8m*b3AHRfm/se*MC:RA_<.p,>8&_Dl<tuPVr'gWd
%Td]].>`k\8'qsD2fC?ToZr)OCBL+l02>!Q:StK0W^BXWdIZ^<p:dc_q[nmja"s.IfO19p;'hSXrZ5NR*MZ=bIJ1Q3c'a=W$;8I2W
%(mK=KQ%m'gOXUoAA>Uc(;44.9^gopLERC1`0Z@Qpfe4);<1-X:(2JAu1Bmg*.=nMlC9:[A<WLT\eYqb5Xf>EeWa(gh@T@qjl]kYM
%>,_N$9g!-Y5?W*.C3Yoge9FpO9aI0l&Ym'pOc9oh@+9K.Q%5e9!3?YU<X!dt"2Pj?GT)[9@`UfjU*8_S;BX5Q?3P'm_ort/%Rd?!
%l,l9,,)&B_r$"Xg1fD7_&Y_^J?IdC:WV&f]NKe1R<5JfBXMD+M(R#UCLJkX+>&c:k666caPXJZ*56+kc=$;=8;,Mi]kjXA/R">J=
%:+U&^'tt=aoK%#OS<!>e"`,-O-qI0FW$*(J/g.?V/t)u^5U`(OFB(b9)c>*BoEWU8W9QZ9bTJ6N$B:u^$\Sarq)RMiS0T`JW3cPF
%Q\"X+=98[XKaKAg)I?!E9r]Wr_`DBMj]]&mLXN,ZFW$'7fBPVpFT\n93inWn'n'A++=9BV!F>P4YqsQ`=LQH59_s;d4m!8\-C?fe
%dEn"hR)oJ)`>]902#bjX,!QKG@b=^uKWS7;$\^=%!1%S$E)H/Z2fPaZ;A[.$8&%Lb,=%A_;+)F]9@4H)E'tf]bkFOt`^R__^r7Rq
%,#u=^oT)sa$6g%D.8k1($c_ZH#(jW"X4&TG,5PZ'.I'Ht>Z/V]#Se#k/J@k5)rCUj+C*Lm$AB(u92d]5T@#p-;*_aU5fXI&V/%K%
%d!;Xaq,BW?RgR4Ed"F4Z.Y1VGA)rP]n6"u,6"?q:J9AC0g(R?qO>$nG"8\7BAHXhA/%D5o&(fZC@'gJ::?SZI$d<+G.@!FQ-Pm,b
%s28H*&Lr+&N63q6.*s1:>=g8X,Sh*l""fQ/6X^,fNW_HWnOU`fZ(OU]hSA+l$%*0iI2*-="Ufet.f^2_!`1'$KleM8#`rq'-`,sl
%.Oc+0PXEEK'Z2HJU(JiE5>e\F7'$]9VBQU&RRg5*56Ot!4?3ZS]:bi^0VKY8%%=`(a%Ps%2!,*e*GP.:`gVc38S"$_.'%mn:fFAD
%R>OO=OS#7IX!&b:-Z!H'!aSA1kXngIQ]7,:qM"oJ7S8r1)C]h")[$1"9,aC!"%C-s-3\H8U?k_j#?_mMZfn:k"_e65V?nA&@#4m@
%n<=EebV8]6e\d(.OnsVCO?,pBTn_Y:juG2q+pq@@e=),Mm[K&ZU_lcSP>W\1Z,E*O,(WagK(tsq$W<a.'`qrn2AHW3(iC@00G<B1
%.f)GIftcMih7&DUJqQ"!<<EsV/>t<j"#;i%b7MJI">L"r;Mie8_Lek@hBWZ=;hjD;&]58V(,A)>=AoRN:MbPZ1X*2D1h3?FOV7Sj
%IYh59^1@9rMUVu@2#fhYYP<FVM8^,@:c`;k`I^^u30LMU!dP)sCg`B*a&?'YJuah6Q\bm4Ne`3S=&aFpZ1(*Ojf:=(IF;#M(s(2t
%p'bMb(sBuMe$*D\L(.^-;8gF0Pc:WU%HK:LgC.O,X1gTQlo/[qeU82DbT0f7@*(.3*+n):>:sC0!Uj]8FeG,%k.rR&NM</@+Mj$3
%$W)qZ')$sLl'ML/-7Eg:b'-gk#]h2E9qr$Kn9Cq0$.tOEo?&n$o"$%/L4Wa`F9U2ADejYrQ3B"]6H=G&$Cip"F#N#;""M:U*BTP5
%MH>UDahY'U$=3rp=;;9I-Sf!u=S0D_.ha:/SZI)CAlaJ*O&is?WF/Te6s2om@3%1&^]se9_@cu%&I>ZD/?]O5[/`h,"H,U#"`!gI
%F:B\ETU\RrqOi9'*&INdJ^e'.KB<B<mM(,K_Tb&jEk"\1S0VMZM<CL7qT!Z@:_:G;WRklmCK<^sR%Qe1_!2LJ;Li[Y+:No3f1fdT
%5Ws?s^*OV>:.<u:UX#g:)_0itJekVF2WDeC=p`h#Lu9Sq<(0.C)C9X$&PsCMWaeT*8dSiTRZ_7u9XAE"R`[1RWANe?A=sHObl`e/
%=N_=fO>ISf;+L!r(!OHD&nsHONsWFo-Z!H'CKjG8gY.H^I*+Yu/Q/nfM(fCBFH)ZBBYC/U?U7.=E=$Eb<",iS<Ido.IRJ9&?SA-W
%;44q)4H2nIqN-Xn+Uu%qOI?Aa#`Ao!B<["X"FCTgBTSEI,>O[_G0qE[9q?NJI4ld`3%D\B\LA*3h&o072)n=fjRct@Q.uEq3:"ND
%XC-+u+PN3CND0QqRHR/Z`[*AhX5nIN0Fn-X9[Oq:Xb7N(@S)A)+gt@d(cO0j19^qZq(,.SlD9.OQ&'#[o7f;<=>d25_G"CX<Q=m<
%J_?BM[9s_*0a4VW&nPXAR/oD@rOjQ/o/*Pja]NTtYc_$E)HrZkJ9;g(3Flb5ko"U*Wm$t:Zc13h"WQf9RF0D-)OuX2B;2)V'io!&
%:g_aD;'Nt\pIAAiTZVlSYoHb#M1&uFrZo8moEXk2_*g#&U1^_3K>eA\rQ8&S&Mmh=Y*#=WR?4]\lBiA*8GJuI*Q&6DjDlg;*P[F[
%0O5o[ko,BBapcb<9;c*36q^hTrWSo]7J$ub[o<TQANg8Dr.u1LYoq=]ll0UMrN?f&8W,K1I+I\QYl\7)SdWcK/]6_P_3hSEhlLDB
%\7aLsq1];^`)$kM/r7nS1#&[;r(rbl4Eg":2mDa6@-YhVXl<&4_tRrEpp0p@QMW%5Pd&M7Z+)ZFnbh@0NF4e!#/Wk;($qjl?m74]
%WKi,P;k9lO"^9ui8_c7U+.@ML73Zmn^>G@TREN=BR/2J!T.fllJh=D&%mh2kO07M3L))90=<VH%g$T%]=utL@7;d5NY`+PqZI=AK
%[1O@pnsfFHZ'PFt[cXi0kJ^OOStd8E>[e8T!,JkK/(;;(7"l@+@kK&Q=>uYV%4D[*(0BY,FI^<=m4I1Sl&^-Y4Pb)!aZe=N7J$>A
%N`@;:E^9PZ'uJ@uKWBBgbu\^hXOJid3?d_,h2%q',&Tm2K@46LN)ecS=SL%FYcGul5C#=<'gHBK,d&PJ\>+0**E1(?MF(QH1/W'<
%Dp8iiR8;q%.a2A7_W=]kQ)dmZb,B&c$DOM8GY_R@'Z3<GKRi8-WA'JB`hS,C$*;#iD6m$fMJ%P[\gZLgF9O*Fe/P5n)\G)eL]W5&
%`kd2u>EG\UAf;TRf:&oi1*4f+7't:5BnE-WpQQ)*C'[G"3quG!E4e%jFqZl9Z8^UBF`"Sp(KC8E7D.@sq`J<k'CU"m$[gAAfF';,
%?>'cuk6CHF'2LIEHc-TbKgP%>2S;j7Yk2l_PS\H&M^]c_'DpQ^aHf)C[T!mH<Q-";jBkii2r28u[30-UM0RMg3ilfKfF$723qAr!
%(H5c2>0&oYpl(0;1)a^kj(tZ<<[?O)lCWbV_tn%pV(WX[c&Vd+qM/XgYs)Mh!OB^+]WPY[_K2)Z&gm1DlG\mAR?"&ag@82Ki828X
%N?jrH6_k1A7.-tgq'<t`M_SP0GXY.qr/-S*G0@,G9iZB'r[6uWNJ,,EA_e#GJY5BK77CE<0QW&,+qrjlVl1h?TSrtab'lVb\qUrD
%oL#D=JiGfZ#-<>9mmkRshBO9IOl39m+bC+6074!B)`9`i)S0F?^`>(E8&[qbfeXJ<2[T5/U@=8>Z[tPP1.#@CIY%P;J'21HMOFT]
%RK+a&8m)lGLB3:"JplQ$+J8ooho&iA%4bNXlF=nP!@Se[7]a]9$!pK5\qed!07:aW$=VHqA#Xa2,:\Ye?M+Ce!];XC#k@ogQnaYT
%V"c5UN5>dj:lce7&oIb=i2\0OrA_A5-[NCFrgk+A.p$/&k"K,&_TEF/-.UnJPPonjOW^JdG3_]'$!(djO`6L,hup+W+<QEFmuKKN
%=2h!sNV]YoJ4dfP<FHP,_<-<)c%7u7#qFRE0X)^n@M8_Z!!64"4gi%`eU:6D=)ago`2`S:Z12gY#;,;>],<*b:Y6CO2K,;.+<6%D
%$;j.++`)sj'FGQ]"cT*@!_..maG:b5WNqK3>`5>P$_iA53ESCGAb%+"BaD#4Vu_q1!"$iq5o7EgRg>3C>\436VFdFVi]'XN-7O9k
%,RB@iI>I-p2mL_lKm99ncY'X'Tjm/8fENO37+)go)KCEPk#E%+]lJoh!b2@]Uk6'"^%ae@+SnC:">)&UY-3FoF6&QPSOlc9ggIQL
%^uh`Hm1%:g_g\iRjp(L3;)-3_TR&\GTQ#U.nY3:\Yp(l6ZUDZFCp7&?@l?sO=QU?7P'B[E7%:ZQM,E_sk5h8OGNs5##i5Ya-5%s:
%YVYj"SbbBTmK-`ci:eqE&?##G,%Y],Dpmc@@KE-q`JA^h[9u!PK?]q)XW6]BWF;]D"ab73fUG/^6h'B7fc^]gV-\>$L__Tig,]Pb
%U-UKp.;fWLBGPq"j$dk.k"qM^"j5mA\P[nsMJjKjE(\u59%\fS6pE$uN5S^BD,K82O/20CR#S0AbpsB<8PhOk.YoG.?5LG&`_eKt
%Una$Z>r@'MF14FM,An025C(3@,OS!g.>f4f(j7`:Hq.ZegK_Q!OGoMehYP(I0gRW@h>EsN5Ml)E.Lk:@U`2TVc;F/gX4YCK2htN0
%C/B$0eS;D/B*Nf!U)/H<8^E;[/7\]U")E`Zr1W<DWIZl@6A]WP[g+pPK@DjHm3/HI.(W/$a_tb1I9ZFj7RbP<!Z/"p>ob<4)6rU7
%c_4QQgq*/U[r+m2;bV(-9J07KmLmcDW\E*uI[6/#OpC;W@j3!phqh6JWs]aqZq06*`P;QHXfr">Mg<HtT*,_r@>-jH6(XJ)H`t;3
%@PP-AJ1VaH#a5u<&n?e*i*&,mZhVU2<>+iA\ul$uBi1e-BII9!Zd,78:uaO=PB]Pq":S[E"9YKL1"cr,!qQE=,Va0c$$"=25i[(u
%9[;PF"TC:lcfh:&<_-D/h:l&Jl]Q;&?r\+5Bb/^:<cOJr2O#->E"t9;HR*'iNS.?8^;WKX)kNZ=H\l;RK5KPflT0m5VB4_8NjP*C
%=tfOZ#M`$"nKULO^01l_=/18pX%ah?_k(]ud<@Fq=skgIZt@CZW=qHn+[!XbX%*Q:7+28[=@^Si<*DD+aOB/G=aVkq@$'kopI5#,
%BmHX<p-aRS;+!I#bsnO7L@Q38MA^K(7`'JDZUe[sKl81$I[o";?M00m^Zsd'ACXV8%J*?Ce?Ph#0K5Zhkt!.J.j(nj1="=HPI3#s
%dQq<gN)*S'$)(qq=!jMM0;O=s#d)O.;!cf"8-1+ra8O7XlMkb[PYob;%mk?tJo\P$gh70W1#8anQ8rFHrun]cRC"_@2@Pa&9ub(T
%@6E4c&hu#$?j2\jN?(!.FJOIh43k#M%U4ea?o,b\kRqqZ7^SD)@lC'Z?u:gE`WZ4)EnBAWP8`sr;nk2'0[/AWS&B!['I0;>P8HlB
%(1Yea8(/Ad8o-%Q0N(."OS);.HDI=-BJ#I-aS;@#74#t>*:%TV%rfn]U#I"ANAt:PWp?tO"V^+*J/u.m.]I*^&FC>ZAe(g\2Arc(
%)/4;W'YB0BH:fc8i^*f7M-7G>$\B2M?LX-gPB-[;Z"RSePSr&*%8A<=eG(EmFX0L#R5R&toG@p3f:YRY>)N4I>U^`mR7o(,V1JdM
%W]1igk3]-7Ms111[-3*K]TjfW_cO\5""NiqYWp&b6p`,[?!8NT'"$/n1+A<<4Ya=\]nN0<,srI\=]DVIJtFeimAjXfZ\k(u.RXjp
%W[KI;?0h#(;kX@_]AhS@>!gWApl?1(#Acd91?pBs,l$%B$r5GQ$Y,!W+Dlk="],1dllq<IKj[[c@F#<I0hFuJfuG$aK[$bo]SA;b
%=65\YN[RXb*)s.W<$g_e+Dh15*6;=2kOC;;%o]`S6RU.gdncJC*$"WJ;QRg6_no:\gdl%/K-NpD(&`6#)G<c!M.o@4ck@'q*&s=u
%;IKq$O/LWm&iP"be,;R8=>:]6\V_7W33OjG(n?;A3"GLN/m:`$SpR4F)PBMj.<8mS*3B2m#+rhe,/fae,IVj=h5$!GD6mdfEUfOS
%UYFRGCKl^5CF>Wq^aKc\q$%Skq"2)(iOcZX`oA]Kk,=*RF?PhP)Ps$?=iO.O#b1M^-m`W^Mo9JRA)-tGcGW06T?dOA:>uR#r_=S9
%3__h06M5O(KA@8,6&P$5N:*qrLGbmqZG:bsn$@rUTaA;beL*]a0WC++o:5M@L7LNJb9TB9T)J^XU?bcUdcl#fhTgOQY47kg9WDOc
%nJ[]WU1+!4,AfJ+`#saLC&2;,VCQ0Jdka&t<@K2&J=[!F_9'l#9Sm)oJ;@\>A=UN<i=N6O>bJBpd+lDCbp#@;:ViWD058eOCSO?/
%C65[aVYWE44Z'u:YHK!g@NX-J.V/.F60(/a\tBuY($nC7kOpX"'gX*4)$Sdj/eT%WghB.tLSG\W%)^LXIM@Ec*@;L6`Sb>!cj0h=
%'Z!TR75)`2j8sLP/H+V$<`L:T$^iAB-+c!]"e-Qs^n)b6SKu;1^%drtk,8FV6p]mA"J/:lN8\g\WOl#8ch&GP-e*ql0o64:&ue.)
%2IMi'i7q^]K6$h(Bi'NOFE5_sgm3[\@Q*;DIpt;mOHY3;%>b",#'CB>R<+Rbb[H6'C.(M3?)'1CW+`si4l<83q#Lu.$li-M+)'p/
%"Wd1=0Cm$i@SK8JenB:UT[h+$B4[TADdW`6_j%@?)N_2p&.,QFFr&Y"rdu"`CQNp,P[sr4%VOMR>T5o^VWLBpR"!>?k!sYeIcaAB
%O6ih?q)8N/]%Mn"i/E5A+3?gD3"1t46USh()S&/n2K6kEX?:g'Vr>8S<IaCm^>hC:Nhl$Rn,9"Pr/JRu%[TjQ=qZVEVn(f-D\j$L
%BWOJEpp^ru,SPiO7cR*?,>ub8&j=Am>(UVPp_#_B1L*D1f7\`sNG+.ia;HUiZk@24K=3j^pa7]A,=99oip.J)jhWL)-MG%P1GJ;N
%M'sd0k&&ZTZ71o!;S4TNYbsQK,;a^87;nnp=:OKAONAZ=aL<Kd@U?np.s^!@<*;&c=Col"3Op@*<14.SQ,YnPL1\i3,`frU1MP3R
%.4fId3fS>A%<Ejrc/1BINg[Zt_e&t(j$Ji:<AT'@1$3j&d2*)Fkr's@^5c2\3HDQ&SZ%,'8#>D&GWA0b#6e6u>%itabp+tu-3>_H
%$jQ4S4F.Rl:YERK:Wf*^cT#S*E+XZQeDNK]QrA`MSDM/1G0^G13#Zh=r79rIX3`jl8]Oek*)rJO9JtDGisr(a3N>.-T^'%H&e.m'
%J@7-G)''blpCBecSVk_pi^jEFUmX5(6&==p6LK."(+]fH<j,ejKR8OH17nn_;#q.OU]4m>;':MX;4oH1^F()FhLG!DU&To3QOG(9
%m!=`7M+iWt^V.rHiU?7)oG7e1_Hu3M([,`C^OLnI\Kj>dT!#d#6JWE#fnXZc]Bnjg%n!Oq9*S-aATpsd2pheDQM\:uKqH'9gO6D,
%.fa&:YFXCHBP=;ZKh$jInr>,kX4cFc[DIZB,\O+93$%W+60G4k]?+d+C0n<[(\gJ1dj'7\$@_"IqW/sE?k@HGE]-<k_c\4q!+X"L
%;^UB"119Gq,#=>uCkuE[0)>Z]cG$ba$VFiG.6rnY&1@VYTM1FKr2"ZDZtLR=AC5ll1"IWCnO'9(Ja-q`kke6i"[n53-L#1@P%5>j
%*pZ%TN1t26h1.=K5DOQZ&,l%F<eNd>"0Qp@A&?`k$1lOtW^T:p=e?NsU/ocS"aq*XU1E0a<QTdTK@$je6OFc\T>F?m%j;3"_N^KT
%-)IQU,R9<jcf(J:_dGU&'ql2SO;gJX-A)0WV%fU6,tpi$Thdda9L+3RB0<I20i8qdN;sH21K]t8F,64I6_ATOU?Q=!-fuQnNo(*_
%D?QilBTp!k.YK]@B_p('.5FZ\Er_1!OM4Eg-Q)B#@aRZ%_llI".N!a23Rh!scl3I3KFTpB;f8s6R:nBaGY!eY7F=M4%\jJF&'PF;
%Ijfm_1^"CSK8HA(rb(jYR,S5cndrJCqJUpC_H',hdEhTaBT%C(!U,3F5sC&"+j]AA_>i@oUB'DqR@&ge8VUpd@gjCrEmUcg'5Ili
%i99>8+S6f\QF&qTiUmi#Q37Uh;8f,b#VsQPJelGjE&ZjO58M\'5LpB&\^;^BP8G<2LrALE+/C<@0KRnMj2"*uPj+AKMdG0Pq&CT`
%?qrESco-K:5sP"0O"&KYK3f=d]K"A7:(dqCN0"9m7_tdNoKT[40FonBZjin8'#rKnF0n$_6L^E-L-DCde,PiYb4t0U1=>bA7r*E_
%CM%!tXml=\Y:NR/QDc?*CJ^.FM"M'.72[,'4:#_+jIrc;OnX9@KJXcK=[GiWVh4r_&8ke[\e"cg"Co`:mR3m5OL8'@B4WXuMa$cQ
%6$7e;1SZqVLV=Zs)PLW)p;G,-OG9^oLhB2:A=FD5hLg$NClQ5l)bo"cDB>fOe-fb;SXhq]2Efe5fI^&]MgTrB_'jog@tYRhqTq/`
%OQNF_rb)(J8>2h41]N4[e'B1kddMbNMTc@=cYQCk#t'I-RlGN"&X[Ub*kt#Z65u['j+k?/6H2S]LOen:;Z/](a$WIG#]3NWoICMZ
%Og,&%c_6r/@7,f;%3IXd#Y_eVQE=!G+o4T,CN?0DR4::F53F4&IEkNcN-l,!,(8[Eia*jgrU)[+f\%4Knq@/*$=K>>r8%OA:M20Z
%6giXMf$/6ZQBnJW9Jft1,8dQL?2'<H3@=\UAR00^6hP>eJ%ONMGMna_InK^tW#l0*^=0CXhr,`SHj+3YhfYh)?Z*_Gh"KE?@.uC;
%!/YJ[lSL9LSX+&8E=JmDg?B*!0@?u>DfgadI(>-)J#,*[Fq^Gg&'tL:iL3!5cB)$(SR)tHj5>eKOPepIAc[uAj8eFG]/@+Z#E)QR
%$d^Nnp;Q-D+#[;P<l!esm=5%1rGQiZ3V^V]$G&&4L0/FN7a8_mNk#>C*VB.N%D=SKR*.Rhj\G9m3Yf2VD7?0Q(3$5##2d47)M=<b
%1!q"J+#F5R:HQUuZgZ+QdK`/6N#P=>mLMB>fFk;N1U^6s<,UX>XM3M0m2n^-gWUfm,Ho?!e?3jTBFgOLnrNm]O/o%8Y8e5qH>/Zj
%46usYD/NapQ[,:s]:&j,0b&k^VTDFBqh,VTB&Mne16]78f@4leOjgXBCZ)`#o+\hl(Yl@Qbn)6GTnt8F$ER`MkVhgFfBQYMRlTEM
%"5_6<=OjtM3W8XofD>>2K>HgppGbc&qn2E3@@Z1b$Z9CC/r\85EV]p!;e9C-');5VYqSpkUiFQGB3ElaF(1W1]+urdcG%cq0<A)b
%@@]$PdtMp*ecK&XVgk"g2Po/@T.7>%50X2`]\03n89$gE<3Xq'p.r;AHtg!Y?],B4M!W!Em%9MI2r#JA%pCjfBA5bjb+mn$Dp8X3
%Zd(6l(/DmsSYbn^D%6C@[ahKj_KrQ]H[^igjl!2A))Bb_&EQ_l=u4Z3Eil6b@>3#&H/BZR0;&&Q'aGT(H"I]e&L.1IHYt_.j/1AK
%iNER&2(ORN+<;9<\_2'cNk=uM1=NT=am7ip+SMfg36DqdlM'Z-_(]Amc*93thaB_s(j7I>l?)n*X.'42d5P\BXcOLWqYtk:f,b1P
%i6=8>R_V1C+)[&9bE&BIB5$sr\U^+Z(Y#=N#H$:jN*.VkLJGHCfZiM\gA#`a3@8NgQ\b<[<krVK0$JPmT6]+KafCaZoW9'D^5]PF
%FOM'4^Vm\*n=Qp@K^.EAD>5RcUUZa9T?&`W)8M"M''E_aj;\`QZ\->>gOm[bH]V`=I3&Q4IZZK@_Y??RN0o_8CN*spZRk$g9HIh9
%DOO*<_gt!a!Btk=HXS/3cElYuHV+2GPOq?MEruVe/&T3o";oC=02<2tiF!Vr(_3G6__rUa@"2n);UobJ("]nojkjabmGVtmOoIfY
%F;Xj.a0a=lZ^UDb]49sT;kHS'q)1_rnj>6P>O+<3Wg.(sppn`n;huI'GNj4>$\!fr#22l]SiG=anb-t>gRE5Q,9(O:$"m\"hnJ=:
%gW(?0pV#^L4ljgcRNMM_s&%Kqk%7@h&qAj8]Un##Q:&!L1L;6cd+T;6GOXZ%r+2dMh"1b1B+jWU*(Z5).)[aDS4Q8Xbs'9;GB4F7
%Esl!21O]Cq2h@M%ZnY\?9L(Yuh^>L3>2?@;3OV"m1RE`2oZ^N)>NXh8*uiq]2eO\mC@-JR@l<Xh]0"ZOHLi]BKE<`ZO[$h3TA1*>
%s3.0Ide`RNKB>U3nGDS79k%@3cl@P:_Hbap3DWMC+$6-QdbFLUB's7eb<-Fp-_)ANLA*eP&&dqeRl>e`"11;21iD"sF`"4MEMLKf
%[G$9,cQ$C<G[jd\cG(3!5j9-Z0eD,,L0pDba?kVRaguZCI=XC`\mG&4!S1t/D2UWRU1nb=HVTUZGNOlfJ]Q04##5YFc'\gIH1!`F
%3Po<Hm9)_dFadK.q:?M*^4GD.':.J_1F#;:i*&-9g%-]>$E3QDiQUKP:+',uG%YukFe*C[6/HDfYD:f9D'@lX]JEJ2am-=<o8J(W
%:CZCY*&P3?/0^Eu]E-a!]obrJ5asQZcMU0bjdDSu=\1W6YFF.jV<2V)?!?$@S*YH+`%E??_)'oRaKZrP9ZGnKfHkt]GeRXRo$H4J
%`%Kk4V5/B`A!_4d[YS3m`%EWNQi;6rP5*YJ0'2%Xo-,n)YtO\%#:s>NDDniF1I6*!.K5@[V<70)?-33%S2$!fY_=urTicRe3'Yl[
%jTOIuK0o1J%PFXA5G+N3HAKi$c-@CObRGE1D*5VA]Q78oLJ=?%oTe7lnDkQ!dD`Y*2sjkTs6M<:RBl"\cE19S`A-#>[U>!r5(60V
%f]%K70%f1NA;bRHSh-,F^Hbr/d7c3\idrU3Qm*VN>c<Oh?WC>b`<B1F0L[UkaR6:'jpXG``Oq<T'3!TuT>t6g`C_(rV<No'7c<=I
%`+#Pp<a%CEWBro4%oi3uE0M_NQ$HqAg>?7`kM0MCIs1"ZA,SU9R1Xh)fk7qOZHq:]bR9\'iGCa4)V">JbJChHX82c7NhbUp7Z4UO
%Z;YjXHPTVrLJFW(#&YL.U:U#1*/Q\SF++TZEp[WiM^^7g3D/4uiBrW;6^7iFOX(W/'n-Moq"G'nLAr@3(PVl55APH)dhkS:h)'!9
%2W$7dT,[@-M=o0$gugYZ,StEX<0A+:I#Eud(`k[jB2dkq@WTE_S'H0&l*gok_(^Mr9ntaSP)iQkXRjY(p`6/3)*;9n%&(6gdu4#F
%b/#R1B#lEAbY\T6+c+(IR%oUj]b!U&%%SMYHZ47I%s!K+q%_%tc'EVea^[oGGneO'aUtee8N+oTL<t/Y5&ZQlMp0elDLN3*(;'B`
%[[Wo\m*ipkraIg9Z(&M\c!T6W[Fi`2m,fsEoB1?W+02ka5@5$Ej\p:<48AF.$C_Q5d:*?1Z%G7EUM@&d5HSda<r;fBfXInV(UU)X
%%Pf#LEFrrecBWRCn+M^e9='6?\)$:.^UO=3ZnF$::gp\e:.46"2>Z1RF;B<S0m(aXaNllEiO@s%Oj8f6-Z%bm9#&%.r?XD50>*1O
%aK([uHn8N\$eOCT[J7dbgfo%CqSKX2aELBbMk3r>keaapmN^(jm73fRZnIq>5MJrR*^"K1eg&5C\lk^7$_QJ'of(:VpBt4*[]bI=
%N&tH8Zq=\m'qoC?^tBb'PgAO6]J=!k<NV7/0tTu+])g;G0HP$]m1OhfSeh\%ZG4EX+tidHF6e>?pZs6*"n$l)-8VEVG(095kfE5M
%*dr)NQ6R8hrI6t,5fWmaG]Vi#>'QbWSu@>jC>k"QGbPtFW.cVa-@;JChoYIX&[rHt81cr$o4DYh4AjSu7*SJ:S+Z4Ehr8!)-:Za,
%E3T9ULX+]+r:Y-C:(*-:X\WiLl%b_Oah]bn+I\LHB6#!@1+*=QjHu^]_)"#A0]rr0S/\1"T3^A3,=>s[BXP1T3#48p+d6Oj_<+-4
%0+NV=aQ+9aPK,I,k=%#dQ<a#.Or&nhjcmmY(h\t\Z53b]9fSLZ0Tb%6!8Lq-383o!eT-*jmQ(.pcJ@DCs))iE`m*'tDT`V,r7<%"
%1)P$[MWfPrUV7]Zn_Z6bld!IqRMT#gS=fQC!Eq[ih9*e*kEKNt@#4hl>@iC8ru6o_Rl4RPfuD"dc.'VCS3QUc;cN4*'6+N$@"ruY
%W!N;DrG&h4KP6P61BU@s!SXB@.h^445:bZ4O^\g&H\P/ehsJ'Z*,GR53,c0XoB)?@@^j=%A)'-.9b)spcC9OZB&UCjLFN6B>QQj$
%\e`S\L%FI#3,edso5\7#M(u[1`b"b&#!(N31R,Jgl\"?8qO&]MSpb6P+?'&/,P-'[Q;HX,'C*g,gC;d60snR;*2ZBi[95fLFcH^o
%5r6E0*--V'l6kso*c__'1b2DK>mlrlBA[Fd84W5WkCqCRm%uGW`Nf6\XD2`W=WEO05HHC@UV/NtQ2LkVH3m%>9?RN7%USMGL]28\
%3nHAC(gMDgE8CBNf+t9f/P]YG4+1sh:9cO6*rAkGZ'1l.2XGr.Sngj]i]s:VkK:HuGig`'k0*E\<po"bj34]qh7IO?K#6ma(<cm7
%]EJ]*!,W;t(pA2@LqT<D)`l5'jl.rIdGYW1RFg8U!DNABhZ"-&)^#IFcL1tYJCAD*I/@E>$M;1r?!+!\[SCncL4t&eYYQ)/l,#WD
%_R?[E(\[*Xm8JJ)rjLRZr+Cj;m*cnfTCPe9_E=A&oCTeVcW_6b$NkN[TIpZ&Kn5\^FuI=oB;2E8f0mjcg:WiP\O^^KUu#K(opt-M
%/mKo^;K:GCeD#D`%);VH3-+,8g>MeP^R23_88l[315eMM3?_Rr,BI?)'q%!Ek\qLa1V]H!WlO/D`i[koh/]jdF<#MjXCF,k*Yl=X
%:=![`#J[b=30X5lhjkbd7T+Y8UksZ:[0nW0FE=nY)MgfEH.h"os6rFSB$H7'39LWQkU&6J7J?7+[aj-V-u[*'Xo.?(OmA74::EHl
%ZL0[\R5iS1B18#0D_F4j>'X)McqC]sn^h?D,=af9M[gI[3VY06C@o2B6-C?Ne/u9b<n#>SV;\m!G5;o(b'Q5I]EuC/\'P'pk9>a<
%s-g@pD-mhFm!/@[b\GQ`rj2@c%XcF.[D9F1.f_<aTD;o&InHK:[BYIlRqj['j%k[?o8m6%D<G'J>j*IA]jrbfP&YB<T/YSZh[lO7
%aD^a2^,[u_q1UREFT$\PVe_=qDXcdT6!GaN1K)R8qUp@nT,j+aIiB*/>J=ln];+Z3;-F_Bfo<TUkZ7$un4VE7N9CLiL/?]/;.'li
%E\NHQ)=e/a"5kZ(C'Z#'0'4SBXK2t$o'@L)h"K[sg<ObDb<--ogj\h)&^%RENkWs`**V_\'6tab(G^9e&o:<REfN/K':GA#NYXDG
%-HY?=bfP-mbIJqN66tH+OZ\\BqSh:$F/=Ec(Hc?u-L$R$AtGu54D4>7#cYSsH;`U0QKC/Y?u\e_,.NP@cr/e,*.p.47Tp?oM>PJG
%_EF%VcQ"3'ld$00SJN0S%<)!I,6I%1IU$+(*<-=4F3%m2lJ!?bQoCMXgh'RYml1[<^J6_YjeB@=VrqmQ^>j8mq$i((3Bu]Ao"N?O
%\:^41Wm?iRbl<5M[lfCd!g9(Gh5U=`s1E:bZu(FBn)Q^E+5f%o;9dF?bmQCd`>hHqF0,AIPK9B+4/^9i[cmb#>6ql+\(sO.rD1(1
%o=27_(&7OE#1cqtI[ef/)gZ4!P^j!YRlu:]@CLM=cWmEI(PKYW&oS"$DU10dM@5_p>6qKS'1.AVI>7=b:L'sT5L4=Lc4+#!\(p@,
%DB@'8G^RM/M<@IfpEoAVC&A@J:Wep\nB#^KF&OFOVVu/]P$UQK:,nU[0TbgBe[no>&V\\[\)lMMLS(R0dHSBo4bQl*WF_R[H,[L2
%GM-o#rn6c!mgSZs_p/gB+5e*M?sMfZF(Q4<m]_1DfX&0?L$]Wcg_L;UlcXnSD:Rong)$?6,um_\Vc/3)_rbOSf;5lAOUMMG#S6)/
%J<hlQ"@:HAf1:^fU_H3__#I5n]XYK9&)[#n/%^FDFS.sBf''0;o;dd6TnU']mQ00UW#,^Mcot84?H:+RlX%X*.g^n3oLgUTJhH7B
%r#lr`TpoA)?Vr`r=]F;ic-R_A/\JPhD&W*Ar\s]G')q_;c[Go=KtY@$01)A?"CE3q<St9Y=.G2!82IdO0f%BWnD"'trInac,kMW_
%Da:8%U+Y`"W1cKbJg.8bLM@1[ZQUcLM1?.K>uK&dU*Qb-M>pBeZgb]!$S!kK.Qf@<QcuOA:[b"-Ym1Bc"7>Rd_.&:r/p\1]0TRPG
%1fYFl@Hr_Zk[^cqT8oRurkQKJJ&!)EpqI*,i@gMr3Gc^oDY5#6-]rf$h(O5bK!#q6YH@qm>.o)F6Iuq"/qU%K:LXkfqPDOHfCrII
%S09o&\o7TuJEks*K<8*4racOHZ,pe*\:_"aYu%tr0NBUL?Mo/<9e0^3X^jAmNnLe.h6](PdopqD`gBI>fhICb@RR"?6'Q(uL4Moq
%;1LFL+0'5D)Gk#X<k0UsllVC(C4bE,ld6ARc.hG`jb]uP7).!sL?2aF_(Z?P]In;'Pq_B_1]nQtiY/&`H7`q%KDL`bCIH&G3$WMg
%lHk4p&3UUOKc.:l!cLC7.&&%<$6Ho2.#8`IYi[ddQ/IL5?s]oQL.%MqTg`+>(3Li=162&26oi.+RPJgJkY25A(D't(&g"QW8K'p:
%;:cMQn3^JYnXr!Pkg3$=TgqM'QR'uA$)/RnGf51b)$7gaWleY;#^-W0#pU6_-.CnZ']Y@,g&qT]D9Aa5VB?b$=@GN+`_?sO$Bd65
%e%eNE<)`$k!]oD8;0W*[<Ui=SM4I3R/S]eO>mH*;iL(ETe1uD,%1J+>-jof<VQrLRJ9XmrO:6_*$&/Xi)MiK'7:>:Y'Od``FK145
%U4uVIaY6jq&[CiD1kY;C;MlZnGngDS>Z:ht7*$t&+N@*s6\l($+PEgsP%>;"2GMO9\jh?)_?1VrK91J$IJ)-pdiK2CfBQZF(r\Rh
%$ms"2ZD`]H'+h&1mfWK7o`T@^T-=iP,eTRs4:SY)<$3"i"06.5\!juZ6%=+e77-<.M/1gU=r%*`#lTX[lZ`_N3egou,t#Q8c!P^k
%IG$u49Y3d@XpUqd&>4nsb%,@IA:0gpG[8^n#3_BC1ar.&\>FDGBgJ'TGRRG-n5(uF^dKX:\qu8B!7$>H72MQ\Tf],[/SJ7;aha2e
%9=cP15=>\-%;K%m22h['/jGU6#to-oVU_>R=U2GN9]^k8L_pL@Io?dgPDD]+:SV/^$Pl.?>pX/c13IMh8\fN=.Y?7@$5"Q*:sk)A
%8oct`86nZb33Hh\Bc1"_VGC@B7#q?NS!Ga0Ou,;/L*o2fT'8s[9Zp>\Z3\p6PpSe`4<,2iJ/9<eP[roMO3@F51Nn<P*"t^P?;84@
%"NeQ^M"qEnJ\l7:%%@:dMG+k$n?<O=VS<%tcf3R\oeN>QO/fs$Pq`^f0OaL<a1nh(S.9<!s08G<jCqL&AC*333P5Q]U1Oi7.JHS1
%oDu6Jd)V5$#9GRZSsZ^F*@4P8GEr)-btP+',Tk%>do?@s^!kO/h>ZY7bO%MtbAq;^Ab8DUTq_#"n41q<J"1jbS[H)n\oWu=;h3;+
%Ha&QN_LX>JqSnKp[d/%!L)pE'j#!t+bZiB_88-Of'#ipf89OO[46;st2VO/P=rBH/47gS?cP3g:o!8L!pLXssK!RK(&"Mr)_#F<]
%M/Mu<jGuY`'Gq9DV>_:sjqq`/go0buY,0o<s)eG-HO`#\^XI)W*]C_]Jrs:d*SFI@"m4]I'E7l`Y\[;N1*QMEDW-L#ZCrI"k6A4b
%Rp9Tf%2u?p,@K!mCtSa-a*;J-7)3RfNfs[nR54iV@b3dc*4YAD]VD).hWRTk7YSXjd>MS735]Y"B'9dKg2=hgY3gej!p+/(K/"_p
%bafO>ODrSe;gVJU=5)N*.[8)reX[^JXk>+k!S@8D?ZC5Mmal%Bo7'QRYa+$1iQ[j_>2b`@7>K1j.NR8]*?k.KQ5Oi?lP$2:I]:aK
%[l_m'eN'p^_bQid8k%W+b9t^n7VL=pH=b^:b.oNVg2YJ/fn^fM@_kl`fk^W7Bm0f,%T\XF*SV%*;;+[Fh=#Kfhg:Z97HXc7ETUA@
%X!#D%Z,7FW+pI#2I)L!L9q@/]4FeZgF5e0bI=$T,6uc`kDZ$n5)\^W"JI93aXq]u84+00`A%Q50#JU!T;hI%CpZ"f8f"oFf+KW4#
%M?Vn8#KleF=4jpl(IRN*/fZpc@?2%PUe$7?P$,";>4E&N"fZGVbdjUNZC5$"AF!j9lhY"%2B,U1.#'F'FH%$hIA^QaD!9crhPAQQ
%At`l1Cq%c0?Oo4a7Nf`203m9"VK[O?FdcCWDub#$+0cI-kPtcHpFI,OU^!+</JuOCgfS,X+=:-JdL]]O45C]LVs:doI^BH:im>+1
%[enN+SCmi\'^Dgo^cH7Tg&jrEU*^hbh^^"PWn%&^ooB2'7[CS9:g.].g;PHAX\O4R3;oF9fqkdt<SOi`,EmUoodLhV80<?`G:co7
%4,*6Ei"V3QrkN]06*>[jZWlhUFlCCGMA_QoOXTgW><<9:RXs8u$GuQV'Nbj?qQ(<(bF[P)oR"TR`cO`0'1/lB$jSp<T8]-7<t9'`
%SIgbtmPYX*Bqs]J/j2@+A;^&snZ^Vt;>1GX\>=06drp(UgQtX7@2bB5U.ll@?O9c@/>:.:po8QQ8,cDOeAUmkDu`G,qh!@q75_&f
%ea@OZTH*dFc+l]mC'N1g0^FG:+e%HC6OT$$@FtKmG@GM<'[HX`LP=PuGO7_Hi&XqjL,`Y0L/g]Nm4YOA:_@ef]0!DabGCEfmQ+(C
%K.&6LS#p[^Hmu"09$sA2'T)seP?aAs)T,=*ddLDU&I]>eNT":a"/aThZjVC!X7+MNg5I^Y?cYLf!#Wlbq\#aS@p&3V.:#]lcCA.@
%^PCu1O^t[;e?GBb\U2`_Tj@T52T'0ka+::G#ElVIQkcD8W=[Y\2[GX;+`4TOGe"euQW]R[eP93s9H;I(U=FmSDkhVf"WLYh2)?+Z
%4LbsD8oj%&D>P,G\9A0dPI>AM!bddT_D12(jm-Fp#R5i6?uVUP)]?k7P,P2+A>q)IE`((0i@:k$-aeoTMf!d(/hn>&ej9uXeGd>,
%jm`,JYg[IBs+B3_m6_p-47$'Tqe`t&p(RR]^dN/Q9Zl6kL9F55*`a*?e!9eQQhhkh,r.`HAeN-Dd[/:ZpG^'A7flI@$epL/+B8us
%Ujh9q><k)F("=?qNj@H,U5LoBK\@$g]Pot5oQc'-Kct@1;QuJZ)P4p4pC&&F["1QOZA>#QJDGDK'%RC#XYWE_L9f3Mqh*[^/"d\s
%1>/6.6%`3K;9Ndp7j!mJ+hk`V'#0FRJafDl(sMMfMsXY+F5[+"*8<-6R[hji=kPO9a$0nQrl?4Fe=.N0ruJ*T;?aj4(!_(4+<R"2
%4YU_>h7?_?h>@S]J<=nbFVp^A1t6-8h#h-lmCE0+N5>s)dX?U[2go%Og-BLcr;F"mJr<(i,Lf0rX<h!FUYMbDg33b[mmS]IFo`e%
%P4-o?[DuEtM1tfb0sM'XD`pco6C:A!BL8!nC*V8V@<AdV=AB)u3ad_rCSZq<XBqX8b=Jlh,K2FBbd3C'd8gT:Z_d-9=n/RV\@)sf
%-<N`RrSGNd<UgL^,gQ42d;o@fTq5Bdg2aCn,PB$CiIm[Bp2-1&X8u2*Xc?SNm/-`IVhi`:]8Z&0%WL3ebG6ee6/;ZBYK1UtXOc`Z
%d)'"@ZepJ*$a_">58EGmhId%'#\#?jTN:q.Lc:8@<S,]8]<'+eUt5ddRgEeB7j\B_%Vm)+9Y[(ICj>f/TlRNr!=hhn/kTm<$SD5q
%fh^sFEX[Y94bEh+Ha'LSm6N+Zrm8O"Pj4dJrJFKV`A=fdOkO?hm^Fj\&V;('M5Lm]cZhomofWf$LB-sMGE`]F<R/4/@]OPj(oSE1
%&>F.fSg`Dq&YC^V9V#<cc#GCo5C"_anojgb%GeNpYLAGF\g-/,@#;>(k>#'kVTUUP'K4+KJ:c;e8s;o9l))oql9(.H/,1mp&$qE-
%77sR!i]sc#!\1Uj;,T#\`\7/okDhtIeFA-kE_)U)$P@>*K@Eau1/<(H^Nj`W_(2d$eU_-j>nB1%jQ0*?bG_GEMOrdk\o_rr-J?"Q
%gjc<3+sg62>\)N!1*#MM=mp)l@m.-:PIWFLP`F;S=MgkCg?bS\"0`8`4Xt=j]d;J#p7l6GaF^_0a?ECh2dEJG6J"4(a&?ZW`HFcn
%o>iAAaqt/Db]&Y:n]Z%&L^^Q]rp["][VhSd/01hcO1$QmSU+9L9hjB,MD;`'OgfZi.kh(-S?:q^gjXK6a/W@R)E!3ES/N`'am+&?
%1d^\8*d4#UFi))6\!+Zeo"Q4rCZEnLW6ltS'u/*b7B5-nb"f,tbc9&d,8XU[l(lZ+e3HK9H5jqHDM@JIUp^O:`&e:4Wg_<$7@]d0
%dOO9hO'N\iB>CAVG10ZKMI$+r@^bmg-4B#V/bP3T+g.e#*:#j1jmdISbUuTKcp@WsVQP>\7mmnlr[)*e+p8YXQWD:Qm5,<(C=r]r
%jHp)eD[Lb?PGtG"#n<9#Ya6Te+H9?A\L&@R(sd?b$nb\SS"R^ngiFhsl4Z,uD6eHcS''PWr^JV9G+hU1(RSJV`eE@H)b,2\iLP$p
%L$T;?KQ`+pQ)_pc;^EKWUQEN/ZncLg3-h8Oc@;$m:NY%K&ln7)[<nRCFORT2<6k^dGPeh$&,o,'MNlZ,pWI!_cp.SqWL>GW0OX)I
%&uK7V!bgou=F,5VSF(hA&>=h$m%WeKNl=>sMqrU<KVjlG`6P3D.1c<AcmF7$CFS!aL:bRsLkWk`:K^"^23t&kfDr+@^VsT'>9m;n
%2*A[$CDSje2D`]a3)jDKX`.Y(R`O<QpDQP?%.p34ql\2]pAaL)U$\H+bq-?9(G^a$`gggep!Z[61W4/ba"9toqSgfD_Xq9=JbBD^
%/YMhp,o.X2eb);idb@bu?0WM*=oEFJ-a)"cA_"^$_#*;[5hSjK!3R9#qaddR!S1"WCU@usl4;b)B4ud\Y/-;p=AoCH[0n+G$H+nP
%^bS9FW;XT:9=nEl><gMG=ks-@WCUMO=FKho4*h0Yn0>&mKf=G8,lA-2p=gH#H9b%*Vd"]5O1rG9Hd,hu^j4Y-N]%6kRK%"<TIgQl
%e3qb<Zn\Ja$6AFkMX#f(kd6gc:ei)QFp,_;l.3*9.VQifXUC@KK[DgC620bq@G&7[a86S"8X3%81u39.]e&b11fm0b?AO,>4<4tK
%2ojDLs$\Z/II:NC=Dr/%ooi>qT2n)XM7&Q8C8+^(h"ETeij=F-7:!a]5Zrl6XbKrrT`_Vq2:bl00&K]110?rr@]6U#O`&_7GsQ[l
%]?bN^`2<6uY1(%*SSPhAAEK_bNQMKdZ':`\F(Pl)Xl$S5;dqn15#]:PHipqaMYcGE=2C+nWg:W7d"SMo,Z2:IU9p4D:FYg)M$'g`
%-524RUVKG-P_%^\Vh>1/Z%LhgjYOq9W"cD6AGUc*m\]hN'61srKa^[2]I^'X[tPi-4"*LlIGVD<%\/73Ak&>!Mt%$:VCc>aG^$_n
%=@bEiLKVG"04m`LEP.[E+e=@a\CJa[.LX(L1`>aS#gm]#H\aK'=fDE8'+,.C?NH;G7[?:l@N=@S'];rfGW\)UMZJdn,=GMqN$:+n
%10$;Z/l*a76:#_8j@U6sEnZIKCVJ?DBV&q>2F975Udd\ME*-/mC3Op,6-Q>B-K(F^hZ^+lU[a$1D0&S\3S3^Y6Pc21Jslk[f#hD>
%0Q2VVD*6*9&X0F(**$_0Yo?D0l;C+\-=uR!L16Abo)u70$I)\UQJZ0lTd^\SK2)#PkWPh#)M',34,I<#l"U[m1SWD^!n4X0nA\f-
%XjO)N@3f*clYg:>8KX'3U)k/te3u5i:^pNOSc5;7AE)pSIqP[+<C#^RZ*#)jEO;(XY8;&!Q^g)ANierI*a!o/R"B@sQ,IuFe5RNA
%O!]OGGF*j<RVVj/3SYk:mlAJ%4RLl>W6GpX@C.)3[nD3X7GNh^]067[UTc7#dQ.`"%S!F49K\]\!:3:c!h2uLQ6`uQ]_p\i*N\$H
%/q8-B<3DJr?C6cleiib!jnO5lcL0``nac6\q<l#D[gnu?eDXHii8<83IXUlrpfUp0qc6p-Ie[;^H$T)E$8dNBqD\18\VKLsh:F_4
%r,JWq4s$'`0,GZ(j6dNW>1'f0cg>Rf,kp#kK)5E4QQL#4a8K$9Z2X.T&+nKPa67$4,$geNki4;pq#!NYYL1D:pga8,F6=kGfYR#W
%AE2&n"QMQB#i.U-q:OIh:S-MmNU$>+-i[p'[GGKnlpOri4K`T3jbb4r//r68MtP61f,IQLZ++,Sqr2\ar8cY3>LnG=jc.QBJ0D`_
%9%ln4>D;4_YMOJpCYI&]8ZnHT?iD#C=[ID%s'k%5oY!74k^.RId<c-`chhJo#&\Tqq9+E^\'/K<VoU+\R5T;>*rruqIKa'a/+hfC
%G6>ST=G;M84oaKI47N(=2o(+>J>S)K&5s$Nc>kMWEi0RB7=5fe5FD%i,KGQ_Ic6hJL4"^I96<ceI)/"(-g10#l8O.ig"Wir:g2c2
%>^poWOO7Euo(_mDm!nQZrsO>H8:G_;W79,;mAh%INh0@\F5b#8s''49acUbW]XhgZ/T8?[^S3_j+)Y)F2p:dVnp5BK.kH>E,'nFF
%]Wq4F[_+'U8OD[`LGdl%\m/NfXn8Ih*fR7FV*$j7p(UAk!E=:AnaYbNL82MIKi[]FnD_qe`8nL*G:tH'p.Ip%97:CMH"eBXlL(Q^
%8!@#$X0n"Jf*L<$f><GaLK2*m")lO'6=K8a+c*u?[sGdeH+A=lp#HQY\FQ3-^Y?fb8H%l9c0jo(jUJ1d?=*ZA]"Yg[HLQCZSh7YX
%#`D[cq"s1GVcPO0nu`:K4R([#qXWIo\5tHLD_I_+r#=rt[>/s@[TaX#fCsIGeR%Vo+%%uo6LCdTlDlSfc<:)N^nACi^JME-eXimM
%IKEWJA,XsLB,g?F\Oh@ao5MD&o]sAp/aKrPhDZ`pmCBGGQeS^Qf;kAOO+NKZ2c"d9O*gXr1+_ai&fRFprt"nj\2R:h&DoDbh%OMQ
%r,>_Nh&![38eE)RTDKE/F9?bAL?hXEQgY/X$gekeo".D9cJdf,#@@F,$S^tZO89sS096SRKT^Agb$kkT\h/A3hI#\g"MI,\9ZLKm
%.PDE]eYMZ1jeQ5/gomRIGO`B7=4$2`GM_sQ]5cd&msNY88\Mi_qHE@%NUKkMHb]QYH*A+WMP0K$G)+t`<Zg1F]_j@a=.pd"H^rH`
%G3?$ukhJkqottE1BoS>!lWA+-)SN8"#OT4"fNu&U34k$\5'XW=lik'HAeRN%)u"DPHAQrR)kG]JG;@7Z#OnVM6j`/%f%m7"f>@h(
%,4g\RG+ro!E6$tUnl\-2lPK<=gU!Z.?FN\[2m&!9Cp.2):\KEI;)dHop!W[+KD8ap0<_qbXn@-jYD;sU9#`*h69"iJ:HsXAi2W,Z
%%k@9rI':]HQhAC[Y2`qrBisYk+51ZEpPKZI-pbOm>tO6[]5pb*e7T*$IQ/&\cH/X_Y6^S^mCQ0^n(O+HikQ;;?Q3pIVY8"-c/mr]
%f5(?V<?m1UQ*pUDk8P8U%l'nL^jU3KXo<Rt';/F?([Z?hBE&A(ou#p,"BJe[(-fh3M?SS%Yp/O@^XdDF,JENH%#s'R9d@*uK9#mS
%Z.E'r+2&-=.s*QKY4?:438XTgN:6G)r,oKrGd\UHlcDnK-a$OhTi&kNHeQTNGU+f3C;O36Wu9g\mcL((f'1(BZ+[mMqP91!`@AnV
%\8PI9dp>qUHc!D>B9e-Vlg+#2)f@O]/*[=_r,LcXCEeqVYFOr[&pjMX$"'cPlg_[V^M.%lh:kF,<%POd^V2p,m+&A5X^3:G\gMm+
%n(&\r@U6cR[;X!KpOh'ZEP8sOroP6Ll^>C$=Zl$4_n,4-C97oQ_sD*\*Qh@_FTWY&N.?9EAG+!pqYTI&lOu5*lhZq=@>"2uANl(F
%HLLd\MC7/Tap2nkpPQR+]])J\msj%\]l&i;gAT:.?2;kkoNE8'0jLo307(;q>HMg3R,WbL])'WLDRV^uh6#tC0OM3=T,@Ht:p6_C
%?F>,1:HlF9!PQ3PNqBn6<=UWQY?S2g\6#jQ!q(9q8c?ftp">hjh(Y"C>C=2-Y`pI1BCN#[\6bK0\n;?,%dtV_>&IX?i[ZEmY]ub>
%G1*iP:rH[%iS+lu6N-F?*ImAeF@8RmpdEb_/k`^k.)5fW9\;LSVBgRo(3Woc[)f]b$%/f]Hctl:Ut=qL6$)3;l.].q\9^#'q">A-
%T#Yd</14FG$7F0o<g16tKf@1>MXfRf?5D>TZ<j=tMr@hmKXYlcT6RP0=.JjGV==1fo3'MN]>D1lAi]E6K="GO_E4l+9mZb7pio=/
%P4\-ciQM+Z%hl\UXJ9[IHp?LZWaH0@h`R'c^3qW(C8Y[\\#6B2I/$>,OZ$+R=r#;#dU'fVB6V;:rND3VDi_k=Y?,$W,H^3dqc?ZW
%iUtcjpu2+NqsiRD?b7\H*Y1HSIk11&dIM[hp2V6VO<-MiI1`VY?7rs:rm^hrB8$9<mjp\(?@HP$%GPPlH`O7^AC0`@p5N][.N:m6
%6WJ[5ljDlA:X']"^IRX"f6o"&"&nt\[;kb2rr<hqLQgH4qVrbXO/nOTZWaJq?EFJ+SS*<+l_"j3?AGJ'de+XV!O`aua$Y$sVh"`3
%p5JDAYiO[Pd2Mf`]^l!*mlIsWC-O^_K=/'ami/I>%\n?=]-9C_Ek(@j'k@Y+m$I*>]gR%*'Aok]iI.M'k_A>HV9pb=p5871KO-t1
%"ZsdtlLgWZi[02fZFss-]sd@d^D$6sD$.OS3J([M)a'k.@WaAXjHW`R=693pcmtKB@PP,hC`=YlWZe/]oAF]:E>[J,M7itFYGK0D
%Z#('EMPXsa@q6OcP'XO"HStM(^JF22&N!BB&s8+eNRO\0?]WFsSZN@L5Q6S&qc4[C`)hB*<DWG')cr*aC#Q(-LL*uAF\',JfOG_$
%_2TV*j:=FS"(r+plo[I!OXp=Q#2X_[DS-Q?r*Q'uB*.Utog57Poe(">LiFP$4hU6Vd32Ngpj'ZM0XF&4GcBQ3LOZ"#IE*hY@6Yb@
%VhWF5#-JU/<'<+Jh]0MRqtJ/bl[:?q'LnUN;#aHgXFKJQ1X(jso[EY"nnVa]nIXc\oFY.G!!%+CFg4._5U23c9'Od,h*\r-17nk7
%JW_*6-GN1>R..]?W,Hpq#Za+gb\Jsl(@f:%`(.%lIh;skm1$0c34&qOiGpi0pt&B_*.e[fo<a`r4<6V]_tRu=3!^OSVN^2i6Q4!%
%5$H9hY>A-u1o.MgNn1^RIeuJc5eX)KN(mZr\[_2RCBXb(&^mtiT2)L..u83HKJ-a8I"f+-d>;fcci()q$h`GQ+Qn^5&Koh%"9+)g
%(LS-.g3lYdn`]kS0h<Ark4A?a5p,g.`\5[7kI8VH5+]#A4jt_^\7ag%h=1"-iQD8WjrFq:$he$!^:tBpMs9WHlYO*!HZ6sQr7AMf
%pTNFN^VKUeD=k[H6V_/MgTU$8FSX9_eOmKa8OSNhc"U.##D-0a#B*4fJp`1D/=9NrTCq656J_.=(1)N#DaY$oPC=cDNOV66"kZ'm
%Vk'(*4<6Tc-#de?B2ANHas_O;%I)'?ng]&g]jG=FT)3hu5QF.++jnb.>MH*XP$tV*>>LnrX!+!7Mk:Wt4@!-o:-2+<(?NTXZs4Jd
%3nqVc<!";%O>aoI^7V2HA>k[MXU(l?*TaS(8X2!OUPN`'Mq6\h0>bkKFHUp7W[i-N*FFVMOdC]1=An7Uq(c9&qSPlF'@@!QYjNbH
%/!rN73P;pBR7#OL^eFJtW^X_KTs*d%bTU+JanQKblh&H?']B@4eCo-Dm<%P"$^aI`e3Q2dCZc4W]Up7n1).Hm83>^4rAZ+!7CZQ>
%U_,O&p"9bFreO[c;W[l/=FNZV=rtraiW[*)87hK#:O@Y9BO5Xkhhg%hJ981SXl]?[D5+]&25^bW`Q%1N"Nbj0^"U_bTTS15[g;;6
%iumQmaC.UNn)1fGBX67mf16%aN68MB&kA,$%q$[>:1;.MUkqTn]#e=[;:BsZ8%]f^4RFMR5>2,up*8GN%,Bm1N;O5F1oA&!%`A+V
%"8os7V`Rg$4\uY['Ra?b>n6U!^da\k&dfMm_[=m*/uq!X9S5E0IK<bUYf"Wk4G2I2\KnG3mlUHK+9=go(Qc?>efTj-prJi^["jIM
%M%X`YVZ1J?2@ps2^,L9[`8)\7j!F`J9JbLK4JVE;O"'$<Br+>4*.7NRd<-*N!jA*g`EjNim+3o.M`nn8)tcXZ3`G+O>:V3;3ZYA1
%L0\:E'*afTk'/5!mY!-H!>0,3>Q]Ki+&!(_F<a"sHa8ulmPIFiI+S9>Ur2<k"k%cA0;4lEc6ONX":Z%Z&[_A)7*if<__?;$'?+,j
%DUa'Z9&JtWd5kV]\p'=)6HCGb<jSE8*=f<B*HHAIcedI;n3:NcftCH!+'[O3a[Y0o2r_O#iC)d:&-+LQ?a$2u0qKraB?S9N/$s1\
%U2c]GoBa_c[<,XujYgldpKg8l@W$5,F0kOc3@kQY"6lDok8d6-"g:D6?Og,PkQ6:(M"$>A9t$LKYS3=MaTTkbjuu%-rXYAj?21H-
%cW6fIne%XYErj!>:>FZ],E'@6)U\#_&$I2jE,:j[1kkjA;tA@'CPb\<#DYd,7i^!;ccuug]X?9]pB,@b%jS303-:aHeoM:Uh-l@$
%ZnW<*2K:5gLX%=V@p1DRW>p<_*,B>bRcsV^NpR/>+Qi3X6#.-iT;_.6`g3oG'YdS6Ls=M!WPg_Sm&#%HG6?;`?&NY\Gd\?S;3Rsq
%n)&)'2_PRlFY=:?cAB)9i4MR^9oHWsFX#UX/-QA@[,l"@!OT$Pj\,E[5S-YP9kg")D/p$iFd(KT"t/@H%bedPL.[<bJ*GBaImRiu
%?9\]kg3T9[*DdZd"'LN3>t>qQ=Ye&BH5MVZK4hHJI@Q+r.X\M=_2fFm/Tqs)rS'($KO^K<*1&$ZJ4&KiXjMZV\>DB#P9#(UrLl0,
%`U1t\R_3U`e/8$CDC&'D%k'#*6eP<OO]Fr"2I8aBQ?TLj"H5K`ZT(ZdO1(AApPQneV92;DAU?Qi+0Cf6%\)Vk]-j-t+5c2.rf`:-
%A;*`PqhM%XKOZ!un]8bs5B7Y"+X\Ns[GhOSIjRO===\aI&So`)O#4upCXCGH_+@W[a($d?\]5#CQm`rZQQqQ=KLsolMn+W[NaWS[
%.Nc-#2b)lgegf!V7"f'%!X45P1uO8^$:6feiSRfRUDoB_fL"4!<bBbq*Z,NHMk&I)j'Cip>&GWGg&5mTEijBmU=i`#dZBd<!/9*R
%S#h+ZKY\t=l1_/@mu25!&I1$3<jFN6A!'3uPZ2r.@?Ugs0Tp/r*b0"BmR&+o@\Zm5?>#&5*J=W?RHVBYYSe5]QUim^@YXE;,IA8p
%`[,A/iqR#Pd\c/#OX_GRmW82t'/gUM'?V'SlSXrD8Y>[NYujS._)E^lS'8lpncme@f]@+0cIcj$`_n[^"TLTRK?NZ->O/Y>V_tP7
%be)392GThbeoR\ZV<@Dpp<=<"q,eg[c/f<hRgIO=dW>4HJ(bUbq9j?[_TR"PFM@BP^*P[[EKYFXoN],,E8K=Dl$Va+HqWGJ`UVFQ
%dW>5WS*?a?V:WUi?lJ9Wl+)25kB73sI-C[a,Q"(mVXm4XTHbXCen=TR`YCnZ."'.)83`hXNGDY$A',)&!Y*53*R)UZ$9P&(LWV@k
%P+QJth)H?R8I"\CK4t2ZkVa#+Wko7F=B#HK>4PH^LdP01plEG"KoE=%N&430Bi0A*W6.[Wcqs(:rZj[6#QsfgGZ`WUau:ZQ'u]MP
%N/RH^7p#PuaiNB"8DX`1QKW$SFSiJ;hr,DLUg`TpK;F(gKpX.)QdjJCp_X5jLV*@tIE_JL&/P?A52R56N$9*1>^T+J^h%]C?1.KN
%;)8QUh+bOj;pV`Tpi2K1?SZ)eOD^3i("?DjU0*`+6NauKGPBQBaba[HfhQ-C7WBaa1S#u-WCekAe)WJ_@XI\.]f,Z7.74Sq":$[P
%>Y5Yig;8k>@c)!T4Y#1l2t]aa$sL3LN>G`bTNU/#=$E(F;`I<L&`]B1an]UWLZsCH=&*1i:A0eBE@$[f?AWWP*3"tG0r7:p*ukFj
%UJ"iPKisQ4\T/$5E`[;*@DqILYBBEFQBC,>1_mqrVmMc&s3<\[5@":nb;dKa&"(bXO3*KLO_'UfC%<NW"sG4E4M<O(6ZH'A0<u:;
%/iECBP'?P/H7CXTp.:Zd)0pSi^l441Z?Qmdk9<\Gk/E6mfn4oiZ&:^Yb7U](8T!8GFU9<KS&*RfOE$MC5MbkB0-t0_aB7Dgl,^k:
%MFEaDA:]p2P.*%=;#7PkB]R.bSr"<+9\4][\>L!L2@(R^(Sn,HK%6;/W0]]r^@X&_3@s70>bcU]JpmbeVl)fAZa5d+)8D*A1U/S]
%(_^6NM0`?s[1B4Y=LZ4Vk<W*#?Vj,sBB,\0o(mt5F7eH9+k)/\)ABm[`cFJD%4aA;`JnR\joh(A;8nZURkh(LpZBR?lFfJt;41kE
%HsXkZQ]lZ4-l8!6DQVcdMYH7ESG+A]bJE/N\UHPui$8:t=e.Ok0C[i:m]blqLZA$`&ALJ>5$YgHjOgFuhO?(**>`V!Z\+SCiCa^`
%"@WrVEWrHoq1iUFQV+$1FRN41C2Bak9k$+h9cP10189rf5=+iDT2d+#H_YX-ZUWb8nO!(PHCul<E,,Jni<\E_K_d1MZ"GUEUFCZ6
%_%>BE/RsgaWZ5NGq!j$BA;)GGi_3b%LcOuV!gMl7loE>7o8CNg!lKBsELUENXOFS!_"f6_8nQpXSoY.Wcch=%NC'aA3AYS?9&n1?
%b7',r:1g*,Il!7XQbT6dbe-d=@!4otB'([6;\s_bC%>p!V6S;pB'+g,"`id_E+e;bEL`FPL!74!h"]!:e'?/FFV?%`9su^^rRRB+
%i]iTM),NhF$dXch="dBc>WKOOTpM/"oWOFeKQ:V-*V4,oV<Y95&T[fE<>kZ<2`04X)mkm7M4L$OT&!5g,622*PAilf3aWV7$`4sK
%Q9W;+[.L7,UR=C?cdc?6=9@B+r/bpND;Z5O8uTm'"%h,;_`Jpd)V5>U$&*iD)O+a4lIB.5'$7.7b$U\:W+4W*>A%si(H41V*oj$-
%ZPsh[8.J,"`=5O-nY]*P71Y-3B/X"-iZJLs!g_3>(pc<Vn_i<A6?uBt*/P>s4RLtsP%<HE2+dMtP`fQAs-QQEXLPPrKd9f7ANEDg
%W1g19aeFM::Qe.\FO;Ae`.P5Qe''$E-0?UX56Si]?WnYO?1Y2=;g3=HT"5nZ0WrdZacl9>@VonG1]&Y7;I8/6r.1Y+?Pgd=n0^lO
%)aTqd8!<GKD9i>3Q7j\JG*=tgacl9t1WmnabFOm<UG7(,e6,"i:$"J8*bA]4@kJrE/,<-AY0mi'A9N@aga$b5T[nRfmiV)<*>5P:
%C2Lb[Z#QVf71NQug5Y)OTbln?EL[S1Nu_!JNC(:kPd1OY:KF!ZlZ]*oRZA3O)JJ^WHj3/iA4l&pqkLe"o#Bec@s#K_mdd6[H+NqC
%eK]'ZUNZ9IH/n;Dj5l9Lf#dL#PHorB3^iY@bF>\1<MB'a8ghL?M/sF%genqg3:1T@-11-),d:qlV;:edgi_72@O'!DlK.<ah4q$(
%"LtkcBk_cu2\UNQ)AVXI.5BLO]+`?3MPf3X9hW*&<[5:1Kp)DC\(qRDYL0/MPQ\M:b?n0<csAq$$7er8[(Ai!2u<opWg=6g^O+U+
%b!Z&fQL"iI^(:p('cLFc,U`KF].1KW9Bt&28ko$6(:Fj&Fo)t.mj.V<r:uBH-Ma7Mjc-V]_k$[eWC?,r'DIRfU.KpRegLjC=$=''
%o/+!un77r^*d$EP:Ts1@*Z,%TLmCY70YG-))A02f2A_5=>tR6h/u%,BhS5'Tk=;)I$#q)H#:_`rVjHVCMKc;#hWa\qr@D^?jJ(9W
%C/Q7e`k>\3:,-'I3auRrlh.!_!pFO8V2Pcb3DoHW-"fVIb"ZlD\#k<m#Li.YS*4ItE)R]Q<IO45cg6Qj*`AaeHWZ[Zl'Z&P**m5[
%\Ul_<`Y9AL51[:Wc?GQ">[rXrIPT0d^:5=Ab3cPKqr0I&-0E47.4+],q8\X=`+(1gKn(DNlG+g<>%6A;>\j)u^1TR3)Cr(2'Vnne
%]!4#E`4g6Ih)Q/GibZ.:5u/l5O!kL3X?Ku^:G8t+DA"/;Af?MSERsdq5"KapM1#]B\C44>Mp(B1Hd^A:lq7cSSShnDg^GS*"XZh-
%$dZ&DeJE5[9d?nr/uroI\TMmaM1'Ab\.gs5Gm]CVEER^H$Inj-I;qt5OaPJ(-MD"g(/H<_0.s;D$:r@a%a'J^m_h:AUeRH5kE?jK
%e]3KRBdNJlAbAK>S^U-rMedk!/=oaK?X-W=@LUc]M1'AiFeX^SIUZYh<hGG[`9C#`9D2AVbUg_'G>FIU(RN[=BmV19KKK2]E?ft=
%`4dor$Bqi]40^FoVG%qK.5jaUCa3ij8(*/nCRKK=-qc/FN;C8PFc@be7MtWS>Ug!9/Uh\Maff`(hr5FgOV(SRZ>]9n6reJ)b)>?u
%'31Be&j:7@:tg&BUNcFo*u"5#AmaK:Rm`Zh=79$\!co-WEi&*),r6JsXQ8l0Ht+'TI?]eBL.s#jY'F"SRnPK1p/9,K-_K-Es5ea8
%8/o,>Dd7_H^\j-Yg=T8`*1-]qGWDp6:42lp'"S?#oDUtgSA(6OA+"U*aY*Vb,J$eAs5Qk>9"OpRj@nNkDAhL*^PMMU\GqU-Ds$/2
%]P#uMUpr307D,($N^rOQDfQNOKM5"EhKh>)2A$G/N!]%4-.F'800Qt10=i)sr'X\u97C&YB!?:;$:_RR$"4uM3RZsWNI;\G4!@.3
%1uJui8=q"q/X"Ph8q!8hXJY#;iKmpB+g:lke@leV;,,/O.H^uE_A9u;6ETbI"Hs&1+"&\W4HtT[rPuR&1ZB4d%8E;TMd$M2^c9oe
%gJDpD<j"M0VfWFs\O1D;ftQA2e`cPHn18oFMUtX[>"dG-Q9tD=*!n:Fg-[L4`qYjoQ_1Jf4mm?!P;P7^2lF;/O11mr_s#dLLDS;O
%XQNMAqZ3OI:%<8E2cIEFn]g,B(uPc)_odD%'/D'MF$3S378in/C1uUT@]u%G*+RnaPc`nk"J+(>8i./f=DX'kJegt%(.F5tM@[C.
%0f%S#j6<YcR!\k!`lRloj5.O]mi]1;Dp7kkBaT&?q0L8rpQ&*MTD78-htBaTqCcIk;8U"r9=],=`k(n_<)nuar>4ql9Zp1f2MDY6
%@@9j(eoKUDQP.T]RI0nI#=muW2GXFW0-ahq6hskoZLGB*9:fs,E@#qGr6iYhW]\tKer%_7pVE&L3JD;,GCf@$U51GW&=3Dmr+W,>
%9pY1)>?T*.gFd.4rCG"),SG-V$dM5:G#5p(S(K]q;!]=^H9??A-W6ds[J+[O<,no=7j=4rgn&(:r&?X:&CN1@e)sl0nXe^">.`cr
%T#n^l0[b1cD*58iWOq5^"3$g((!jh,<f?4!<.X#EP=p&`NgWEQn?f.BGW)jOMk?!,0eSIB;cn>&)CE^IhTIUR74E(`-#_Z-=[1`R
%%S,8bjkW7=j.31bj&JUO:$XRYC/O0KNT.N7nGR(@PoS;sOd^Lk+]mN;gmD3]!tU;G_D=ne"O$S>]%=nA`^H\cH._MrXu*X]&dD^3
%+&JQf$2X=BH+d@.M,Fb_37"fWn!\J!l+8#T>p.]baa%c2]]ZR.21.:;MR6qA>lM3Q5;=s4$0=X).jh.sY!84)P-<h;\T1OBn1j-l
%=9RSN`:%/EY<q8ss#@:8qr5fJAmDMF)X+\rFu<ReR-?Ju,M0\OBd[KS))%T\\9n12M=-BLkH.0O!^i=S4\<8?cP0ip&>:$rl14%A
%qO3W]R$.HYdc`4']l%b9HcrR]BM.1bHW@gS9"HRNot(#CY#g95O,VsY>u!YjG%^XHQd(`@eCl8:+9+bVA$,U4FWFP%$)]D1WdYsp
%G;G`<meli`It*P_:VF]rLH.1'S1%%nF#hT<K1-1U_<U]L0Pq6SABs7/4rQVR*MDZa.##*n51O[BB.g#elZW&rOl2=YFf$GI+5q,.
%"E#NH.4sJ!M4WGEQ!`'tSfu%Q"HR4S[7LG/U:9^hU-:Zs1*'@,rHG".\;,&.fQcY#)8Vt+W%'D(CojQY"CYmbHjIT"_ZM4>-%pj2
%*YY%64#Z*?R*oHZnu\BOal2]!32:K',DV]*SF?9]4r)s34s,+1K<ChqfGJ-K\(hiup!7R*/ad-gH%al#Vr3m?YSdo")98@McgM'r
%or"LJ`/46';*L^-@[<0P:?"l;j>qN#+_Jh\^-*5j;`]EV,Nt@G0^akCl.Qr#,HAkRoRgZ>Rto[!N@A&ZBCa34531*S!ounBg-K"p
%YE:u"]]US0gb2_u0+sBYp`s"n3I[Q*Z9H<OP!q>`0h\-3RGl5YoTbPY'LRo9/Cq/<'YW0Q`eU%RB:!u[".uS7)V/J/OoY5nK>aUt
%*G,6ajHdgAq@hQ!j3K<"_u#W8']F>1dTXgLA%2_tR16NhF]E\s0]NFgI&(=c'BMParps"8OHt/>1d@@IpY?!D)p)QLC6!aY@pCk#
%oZooSM=I$]@PI/Y.>dC6dde!,W]k;miZs!:*%?a7F>0/E33%,`8kI5\NtXm_Ei(,%cdHJji^a&C^6D#lPX_H]hNYr<.Z)>=9XgfR
%;\FBI&X+g2oT[:H2t:i5>ZM]9Zp/b;@2_G0-]dB#<c0A^^l2u6<f#8Al!.2VH<DE':%SZD.ibgis3,&.S8Pr10.Z,)=II0?Kg`$0
%r8Gg+UC%\gWpIZ8r7i5$a/N,">^4><WmtVr*n%F1ptH9GOXZK!GaRp!:?Kn`00Do.Nnee;;%+.ciF0;*BdrFKX#q1>VBu;cREcN'
%$P0.tml>A+L;,hu^$m`S[_jD;XkP]1^ra&+0',_S)`JpNe,qSjKnlqKq-F&.jVTM30]R%4/mi8*$P*oLPh^FQGM"8CBmCW5Ye1bn
%B'4M9le[higC>G24oU.jl*h\QlY0j6GaLEQDG&%GiS+jkpBZ$36Qd0d:7OqnGMs^s4b]),GaNs7iDM(BD1W-+F5BhTmY-GT<hd&D
%->\"i^[Nps9IY0SN,dfbH?K_MMO==Y_t5>\O4d4c_F"Ns0t//MD+Ng'n;rJPO1FX3`FkAQi]V>@@Ci&?Paie]n%uu,I+/([aJj=Q
%jI<%&G*mmiUgJA6Xr9!+e79@:L0>IO2'!ikEA'EoA*\K3$P*nS3DJ6W*94oRjR"V-;p+Id:3PT)H6NFDOIZ6c6iQ_fM(Un!ViaDL
%&-l"k]C9cU<B]5nLIpS#Q=f2RUS4dD7sRd5XpYch>?M=$.@bcKNo"qM(ZS%qbd\H1VV;XoT?[-I*i>F_0d6(PYqA.tJXX.:0[[h`
%Hf8DEo!@s!B9[#ZKnl2=9hfrmTq<;BHe[LWmTeP#$P2jlif80?@;II.qg/0rY/l<P,C],YW]m1C9m5K(HE)F=.q4)<&(B?B9D!tE
%8M<17Vm/[meW<n&jMJfVl^jN6aY#\L\*f[G3SB+A@AH>13um/O*'L_l_tHc3@ehW=9HTIrVbQ-e_a%^j]Bp/P1R/=Yf2HTLoT\)Z
%>^.++'S8K:-%$fN'J;LAh=2XZS&0l7FC=XJ*KHoJ`*R\U^,*$YGbe3^$P/FV,e_qB\`,Yq/j)g'dTp;l#Ne/%`?*^8`6XTX7;snt
%`lY=!q4"Kae0>CJ;H@p"hEU)_Ls;\';,o:/nq%0/X9K(Uj<%UpL;fUJTA\m@=Y&;X_(';]]Qn6n?2*S\qfuoFpgmSbhAo6"T!$R^
%'pR8A@f>B7EgQ6C?GF76]LL'T^:q*^/jB);7bp1QqSQQfr93@^qFUS,&aK&X-)(<dF%^2ZH<h1&:4$'pIVis0]0#nf_X@*mKlGDD
%088FLfb@2)g2D[(rQB9@XYArEDneIR$L]n1XpQ70hQ.#jc;kF.Y@$1Z,>($\OpAi_q>CESgYV42f6-C*\,Y-,j:9/s>Bb=,XS*b"
%pQ:VX1dJ%;%lW1E(C)Vec1C+:^O3[rIX(nLqnp%cUJBq-iUQWbqj1CY<`[Gmrp$%LoA5L:hENuPDSElh4aorn&sn@m4_=X4Se`s[
%YM;)t\L61?>O_"+M.J&FDK*=*^Q0"4GF(6=+-b]8bU&G=\,N>4<Ct!XQ3%m@rXce,rjq7'qjZn#YUXGWf,r0HSdUP#X,>7`DnZpo
%&,).Qft[,Y4%&hNbG<%R5O.Q1N;ZO=WH#M.1*g37osacH^Ah"X*S;<n<>Ah0TrSU:X^5K=V:(R<!&P6X/2@G(Qe*;I/'FEY#B*HX
%E,GDgbpY/^X?D&nT"SB8J%`.KEe3u4(XJC+bAqBDA+0ASjbH(gi:@+EedmBaEI:45I;']VdC\DUWq`OH[Rq`qlh("Jh.7Bu:noZ1
%)=Z6t:Y`IiGRAr6rIN5ns3KPkG@to*H_^W8>58XT';HXb/4kNBAdf.P#R$?EaZ+s6%>:G$HiCRJrU/S";O+7SO"iUslb.LbT0BWq
%>pZJGXZ[20mE[F%r3#uZmCcTdfOBhirBeXD*91D9U)^jgmC;dFrVbqe-h6NEr9NTWX8$fps17H*%+'Y$Qad"m/#bCU?!Z64^%q*U
%NLt_"9jN*hrP=c>a+(Y91ekZ0;O2Xh`5tZM^A2a0fX:%sor3phT(RRm<WD$LIbt*5;?,UofeVNsc"]S6L6SSplZmEOSj#p4p=40U
%r7J:'"a8j8s84*iq9eF_jUYEnLHfaB4i'&.7!;bGH:u)%I$1t"cfXLUK>C=pd<hMV(dtCne1(5A]V8c:Y83#eiC$/(+#b#6#gMks
%*W::SRGZjae+Ct-r;&Y_[HE$c[E)C/YKcU@(WZ,%DI#J\#>WhuY]X`te(F>,j**SGNrQi`7sF(GqJQ3\<d'%8=$Gt+-'t<ORBTe2
%#Q#&AH"ZLu6dE`aVi#H:6[&4LT&-u%n([<&D#=l_]Xdgd`E,8;e(IE,rKe1Y(hLq]m0>;fl2P9i?G?Ht)U@J:IDX;g:\BM:PV1%/
%CI50e]<f:*SO2JaEV\k`QhOSW-ee@--fh2uL\;Y)Q7YuGc<TP)jEdmjHf=K#hY:]L0$h37l8<9:\TjA=n-(2]?9H6BO@m*(2Qu>j
%Vl!hK1Rd:Zq=9:WY$B;.^AjX7pADTS&.tP]+1d6.Qe%b"q=aH==%D^b3HNmP]=-K9c)gI#KA5(>+THgN$=5HVB53BQs2u=H#b8MO
%6@QNDlh;dgVgd=3C%#D2#+P:fPF!XIl5oA!gV*7V2t)4,E9@'#GO`ZTobBX\RjUM^[L`uHmE9F^j\%TL-8m1kb%O-I='%iM5(SN]
%_,&tKTCYB@:]9tKej)W;RXpLEq_YKbe%Rl/'fBHCq24(`3?d"V7hE[Y'Y-a"=KcrLHiE3O:CBl!l!/`a*YSmooBoCBUL-*F.AZr`
%c!4HNjWr6mZ_tt1K79!]7BhaT"MP+MX.Xs&BC3TD=^,Wl+p'hn!WKtsG7<caU*b'H:@j5\X6JEM$VWi/U>>X'I_EImr3I>&[!,2T
%he]5ahk,1rkc%d4+HBpcOQ3s!p4OdW$EWCP8No-H^90Y'J61M??D4R:3K:hGRqtbY([bYbGk1%:SP8[YhPg^Wqf(Tu&]+o'%O)a%
%@<M08-/;N.qd:$7?=2O@N99nhUR+e4s."Q3ind+Fr0PSc)+Pue^S-chd3%9"bLb?Prcml5(m_Mc^>7pZfI*#(DJ#Bffe%sc*@jQg
%%>sPA?P8bhHcA2)ZYi)QLE"(af;`Rclq(-Z#raX>qXPk<,f+]67g2(E0O#i*r#cN"],bfh!Z]+<]Kc*boG\\.a4V<t`79RRG*0_)
%DdH^qqtBCB'=Dr#,5%@(dG%cX2TO73*B$gVa`#bF^;Lm>1<0$sZSC%_W\O.2#?UR@dPHHp2BUt+]CtgN]uqu$XM$`=qAd[A"a9o!
%eo(](olf`aX]NHQc^]9t=-m%1bo9*S"+ed=jfas9GilWO4%3sJrW%HCWmN2!'G"f.pa!$00kqX+Pg8UU(&EPhn5B&ma,cekATucG
%ED5safPp0&>Zemkd$XK!rW=YlgUDV3RJLr)@&2jYo;4Z1np9]/M"GW;[sfdS]QB#1Q2$`Y.a+6VJ)5`eK>AY[qd<acme>[K]aqK?
%=psFs7G3>%[b?CQc5_+-2SlNc-@EYK9P/_=`OrPG5+F`bqTi5S'2Ep2hLsF.'4b,MM(^/V%^Z`dprcas_i\@@Njs;JI(L(1`g0hC
%Vni)@If)[M&(c87I/35XAKR:![ZLSajET?Kd^/h1UhN:([GMfH\Y&XjN%?#nE3GJ-FW>c@ViRBP3e.K4+!5!&Z$Me<"_&]'N6a^#
%I4DopYs2uQ_3L3>G.19e4QBsnN!&JpGH`/[kL'ldHKO?DLAb[ba*J0RkT=)`?3glh=i]gZf/8WZm`VZ_ekbuSF&)Z(f)AZ4GBNkf
%j7t\LGNtgt`ne<"A;k48Fa+0cPKN9J`3`7J36WQ`diMdkLVpKoIiLO,VQ!Y;%n_Z4")OPkeRR;sLf09gqiF>,+M50;VNI1ZG*irj
%=#[mYHRkSoF>NV2j5.$C;o-?%An*r,S3#/V>^bR3#J?3oqc)&h&cC,IS#2U6EUE'"CPVbJCTCO6(F3qQ_*@!a\#DT?&RX&`T).1:
%46@b(p$K:Ih2cR#]jKPV;[r6_d5Odc!%*-@c$8sAjN5_Q6m8,tfc,?!eCsm_X<*OHlL!-.Mo5$19XEPl*:C+NT>,ihrq5!I$h^^4
%mp-p._"PZQego/>pt(GQorkFa]DC.IoU5R-o,#^'^L"NmDY,gKq!H>to`G`n>c</.IW2RkFna:0[Q]&_9)Rtm*t_S8CqE@':Hj5H
%l,1uNRiB+jT=u61d/Lmi\bq_8lDuQH?CRZOnn?oD]]#KTrc[bhUQ`gu\p?.-P:<H6]BAgAj%mP\>ONV`8`/Z!$iu\.-V?P_?RMOo
%'kc*K%4oO)97iO1c^l9A"20*T%9thN:K>tu@P0]!;NoA"E\'ND)\i"f3X8BJoZVMLIQMj)><iB;40*AY?<ubnq@WWq=&h0'prDjp
%2iMRT]bU.hL%!OiYB^e+LS5=H5(!:rV2&-\I\KP#q,[OhduA%UnaDMK/#'RL*U@PGhhlpUaj$H-TKaD\A\\3>k09$llmLVY%A0A6
%c)GM%[Y'3lj.5DhNa:sF,JGoRcmPC,A&*UrhQTodS-1N$7\8GIgD_<dnZS]C5CU-HUY8;rmXc3j/2X71)&Gg5>t8[_N&_X'cArn\
%eb<9Lkdt08^:X+0a%'2r2h(.B.9RFR%!b(sJ:=ZaJ+EGN2P*_DE8nl+-nWKaV8\Rtk4kLMA%S3oq<+k1k0er.L:oZUo\C7r\oGr#
%r;#LL`N":MW;ZG3PKiH7SIGMg")#QM3]on@&U3-ngF"o,)oie0fu*g9?5p*pr;5]cF1j[5bIl!cNA?i<mp.UpNa*e9q;^j"oAn-k
%lYMi\Q(5?V2r^0(F4n4ibb^*H4cr&RkWMWsrQ!erF-)*\kO5s&"PI,+s'.^-UqhF0Thb';D9WT$pYOWIXTqqp[r5&I+A(\PkLIka
%dq@q$dhhAi[l;%QgV9gs06&md313pd?N*^(1H043V=4&aE9&M=a'UIG>j!`,9<3E+mDUI)49l/AED^c#5JDmJ6^LMWDcFI"#Ukeu
%QL(@.Sk".He`;aoh)sdO&p[l"!NU"NIJFl>%#$_!%"ogSc(3GC7b3*YC9Be3l/*T_qTDA>Lg[sli>\WlPm_Brf/GA\IS[)<r98u\
%?WC&ZLW$Z8:ecHIPnsg)-CE]ZAR]`BnT"*n4oOquG%7$nO5)i]fNQ*S8^]KYfS^PIo[Sr!E+WskOnUi!3.?b;atI[[++ZrGj/JH7
%Eu@]-Y<>B?*6fPGlj2hlrT!4VBVGq+#Ut9Eh3JkdYhg$@cQ?NCk)!BY!e6O\1qrIJep2ZeL0XFOihq@0\\"J'g\2lX@ef[;\o^u$
%s7DB4*+q'PD2A,RB:Fr7WuICcGeCR:5)o1.^0HK/mIIGBl\-`-s$#:7n`lBt[l8cHFQ<4[]/8L"CF$!PI7?p,mSB1p++*u`4aHNS
%*%U0hT<EH.Rp;u/(:-7(F6Y,CP1[N`JQI>0pZ?ArQQtbRmZEJ"cQ4LGSus$#W]*)i[&^t@<BF6;&D+q8ZWk&LF,!P"A255HhW(Qo
%iNK)FM9Ys,)&ecB4RhNnp[su2R2ga@nCR<VKQdCM&MmQGKPBj*M9kXHp,mVFK1HU<f;5B@#%hlU:'-+J3&@7X2UC&p:NW6Yf17$0
%s3dn8s*Pqt>p\Y.m5K\^pF`M;5HgU<HN<>[8T0A:k)fA?T"TScci<Y:Nf7"C0'V*]'e^&a#M@uf)lROZ`d'Q<2t6(@qliMGZS@rI
%a4"9r\k:tC7kU/V-Z7e@5,i0Up>U:?[/0dQY:%SYit&6frlY1Lk-t**jD8jnKjVd'EpCV*iY51;h?<YP[2h>U_-FE5o2.OFc1[V7
%KX1>/epE2AqqcY`8bi'D1=:S/O8"H=CgT0,8T/tmC&9MJlD3Tmqi9=Oq3u.Qc^d4704&sdBY?@-REJ+Kjl.`TOh;5/U6W4EEdRt4
%puoKqEbG\%^@MNUkcW9ZjbT(JFlrJQ97L__9X(lr^%V$M]laVE(8dM[ZQLS\I)`?_L6huCQJVE!lgIVAj9,q7Xp>qIPT5i1lnIk?
%f^5Y<+S8*LnW,WTH;]!ca=PjS=dhP-&,!:Y5]%e_JdNqdrGK0u_M*!pj_WeY(Jc<>5Yf(uK>X]LNF,u"8kietP4aFlL._R>H,/[k
%FC*;GMbKUUbZ>?C&um72?KCnX]?B)qaK^2Z[cQ(c84$qq&(WD'a3W)e,.bGKiQOBa[hl*sJO*rA<P<[DAGFE5R-*"ZV2siJa*WKn
%m/Gc-p+EE'+"M'?CXrRCN*jk_LjTGghA$t"l1l;aG=Wuh%$OE_4="\J.AK,_mR;9m7EJd2`r^ut4tDaEs'3>N7gm^$s)>aba-+e+
%s)>ab7gk.ipR_j2.M5tdE55;,)Z#3kL5NkI%gNM_ZqrrUIkY8dUP87qs'WW=*W>I<"q5LY;#Zou-X^W$8D"p9n^Z#Q)(P/jqrpI9
%[@VkpC&r#e]^=<pq!2+uBtr*"i@Ru<f!OY5ZQp4]^gDn(I!8jldthc;<J]+X<GlCLde/]to_WP1Dg-X=B-apB.+p8u/<\m4?21gn
%n8gY=#"M!$r<&#=`poKaV=u+'2bqr.c'+fm2f]H=r#m@-kK9MC@UH#tGLq&RI!#V<\Nfir#f!@h7-KGb*0!?C%CbX.S:2ldfTjuQ
%AJ@ak\0-_SO\[[Ds&&499iDaLR)2q25'$2nTaMfUe12[f]s;hE_sYh)>Aml_Gkl+9e///]mYcRs?+d?5]iWNe?[98io@)"bH%5)O
%p4p>P=793cYH2$B]5ddqoTsa0?U*FN3@3SP,ZI[I&;NqSCeI:_7Gmc2^Se,^?Mj$5fr(0c='Oi;.`<t<UMkVX$dm*NefbCpRj4gP
%5QBid.<FV=O^m#"S\hR7&d#jUs7GV%d&s")q"jak.BJ$5mI[doB>._RG@nE!RV)A)Nn\>^&^#8%6#C7pI']Sd?u:,Xl]nc32mZ'O
%Z+XQe/&[1#F58bo+"f^hZLd#&=3j*9hY?L'SHmuqNTXYhq"ocQGL+%9P.peaa3-\SY`HMF\G>FFe_U*5I_C!.47]IR]<g@?9V;5=
%*+]b(G3`#ALEBjqq"T*,]Hi6u/oiA2(fIj6%9e+.Cf/qeU$:[2oJ&7_1/$\BWbZqZ%84&*.pFhiMQXU;AZ_<]<IKjerm?Wddl[<2
%\h2CC\)"g+>6!PYf]iF?2@c(#dJlL6J%3)hf*Sm:@%%FMmoV6^goR?>X"R^2`S=]Pc\1IU$15@5H3JbhRlXp!o69]im7KS%9DRQm
%p@ia=TPo<#:1k&alA*tX&%5Qc_U!7LNJ0gr:U"oLo=3Pan+!pOa`HSp-FU!Ak(r(uQgM1F<I4h_aEN8o]=tn%ET5u=gV7[4O^sm=
%qj[+?GA>=A[4>mq8Gfk*H$f/LE&7Ii+2?[CqV/p_Ju6)'pVYT900aj`UDb*+T+JJ]FJ6cNO).+fT3V'RQd1@-?[`cBD(aZ$!1j.8
%X^M1TMDsqUD[=tk=VpN!1TU2PnWW?iE\bYrn+Je5!-uZ+gO/i.f?1]9<WA7(Tn%Dt*qeO>6X)/8ae_5:c4'-eJ,<Qlk\B_0mbMe6
%T1[-G'ureuHM']UA0h0h>=<I5r)S[4p=nW:Yckgh5?g@)8cP[bT1o4=%keo1DITTe/%U/jao/?$9./ci.p"A'E'Is#n:&^$DV_Q_
%dKfV3X9iLI-5RIgD&Zeo&SA#CMZXX=LSLc^I;Rd$T@a+S:SdU#V3B$51PLY!3DY/"iVQ7iT)Ntmrc%T/Q1Xa?k8V0artY88gDk%C
%=_p.q$0L*j&T=PBo<.s\`1&IgE%LB@+l:R&'+*hD&T9.Y1J9^8GdCbC:p%CS;T_^NLE9G:B%/lRp@"2npnld@d]\YiB)OT1a-NCO
%[jU?i\**3\"'km!e7'+<_#EnGpE#s:grK0GCW$L.<Q>A01uD)<K[o0?[k>.AN()R\0g:Q9\G#<tgA:.'*pq4B6i^$=1l,^42#K5`
%f?Z$pfNJf\ZT31&08L!DdXnsnf]$>Iqr='i:C[)0E[K2K^TjI)7EJRL"TWHm%04\NQ;7td)@%L+9_\O;YPUcgSu=R+QacZkfn@gX
%:a#3/qW'dhq_2pZpr*-]n&&d+s7/#8ci&!R-kMb'(A4c>Q/Z]eO+L].4BrTmKb$NboHsbAO)f7/^HQ<jH&l[G0t,q4ORa&>;Mr$G
%73KD2PJc*I!K)NM`UhbVa5HC%L\[#r5"st@bGH<X7"5(,c)7?132ZT.O,oW4O+Zl_O#uf6J`Y6AlOQ#GFZ%27NPAe\`cupmj,7U=
%An;a,qdgXTCMt%W?2J&G]:Ng(f,fp\Wmb$NI_.L54o]Njn<eCne_r6"kPZcf0csftaPel@ri<qHg=GT-&7QR9g"Y'XpmTTB4P]Bm
%rqP:)X>'%f%u36/XiJWR/W1SR)<9CWLKObd[B6"^L*$7\[f0ssr;j*Bf$1oNo&h1dHgB4;0DbULci&s7dlZ!h+INQf>K;LP&%@@M
%?[[%s->hW<3fJ(>kl!_8%A]UZ4"s;ER.Oo0cZ]<afOfMA&V!c)2'JLqh2Gur^,n19I.ljc3D]PCV.Y9PDgGWBh@DcAI5k.)])C0G
%UL1e7WoS[SeJ<``@e"bR_s9IJecLf=EMu/H;(01t/:)Zs[7/[Ec"8oVXB%FO016R[#IbaiX,%BrL%X]^HbYH=l0-eP0:&j8#EROX
%\QWf376/\oqmBbVa3*B?K'3-o-qTeIL;hrmOH%4'0/^LIWVX"Yl^U%;q+etU^V_-?ahKNOom\bfcYoC*J#ek&g>k-cQla%KMJ3Rd
%0g1'![*ka7gLGO0GNfodnUeNn^"IRqZBaI3*n(5$97bHFop?f9?!9R&&*#B-J@foBhg`A\oDn=-08<ZDTC"?rJ@cL2W5EpT%q&32
%K%gJNc=;/#HQi^e*n"PE!./0NTb$*:4b,[Ma4MET@le[tIKrJj?0fOt?TkS5U'1IM5^.G/IsAklprD\^04)BHI/:T>['+dEY:0C"
%q)>)aD;pHCSpp3[DEdsW?cU_NDVVaJkLR>9Q]A7c_O^CFmGcmpQX4REJ,/rke$o@hEggDIIb;;WrR/jQQ-fusXW4+$WQ4W8rUi-s
%A05<pO"p[R0E.eK*rHQJV&qoUkRDtc18Yi0`6NHToRjHp-2aFDdgcalUsQZFnO%C60_uq2lW5,i`;oI/2#.+1\*rRZIhV0u<jZ'+
%@HEj5eB7A9k`9q$7NL"$.Xed/g&'c9?2r)[r[#Y3o%</mo%<D([q#h*p@RJ2ds#uDh`lP^@X%#1b1aO10B&hCqu6!+="dVLc^QTf
%ZZGl%Vf-`RT>($keaqUf[l9rImGs7rNTcX2=hD$3FE_:Y2SHcpo#2^>o6\Y&qt]@FpOD8%Q9DSEqX(>S[s+E-J,/'Zl-gtDD-,;k
%^Nr+kq"h%XmpA97^&?pSo=%M&Pm&/>rou^DG@*OPIrk;ZS_"ri4f:OBoY9#ZSR9FZ/mB=Sq9I`s_p)[Tol\q#H.dYpp6DQKb1c^X
%f8Z\P?Z5u?5;1p]I+"tY0HY84YO@On._Y9_4o!)'?'IEjQt-'$PL,)Slqgnm?N+hcl$n*Wp?CGG-%?ubcOW].5qa$8\^5Im(mS#l
%80h'Yi&iE_%8>7fW<8)NUfO0np_6b0@k`h&X9SXPWq-UrM!>K.bma$)cVL#Ah$V&Oknp;^-[KJ.e!=+YG()T,]=@&UXbpM0d:"/L
%d7S(\JC.#@8GrPC_!Bi1U=Q1CDe<rd7LN>a%\j*f/^HgX[^?#?CfjX?VQDQRlh>#M<Q"rd=L^og:b*=u-:M:XGYtnRFPc6hb_rc=
%iLGn&&PQH*`1meu<NpdH,B-u(8IOXF++5NQQkrM@8nhJDI+,;u.FA.66n;qC*IYT"%V1)h-T;+t&Z6<Y.[X1D!^QBP]##=g$[i/_
%A3IaS@aYW'Gr#gb72f#GDP7\k>m6obLkMR+aoJ7%,,'!><m7199cC'L)/q`>pd;g[UiZbe=B`4FlY/hm@6GiS?MJ3Tr-=9[[]tn?
%E3,g;Xc=FLP<qgkf.V$*7!Iheqkn[^9EbL"aT`,H#Xeq4/SGYk3nDUR$G)Y!4u.H27cEeEEm>%@RUdcgrn`Y4D@Q"0&Ml8=0aUDZ
%98!Kl]l9G.6AU:a7M%8+0Ogc7j\i+ORfXlCB&p6cVeAIb0Z%'J+J\T8jO:tmSO]28K8_cTBcTJ4W$#+2-$=5T;40jc]WOLV?o2sF
%NYbWeRt*sH;#C*3X(ag4lT$Fk?49;n6M[B,B_au(W&0@7pApp^-U6J-k\7qt]K9pS@<6oP)2cUE%ORfJ%EaH`&Z<tu,M#]2'F+Ab
%'9#]q,%adt*_%F)GK*>'&_G.$)Mj;Bk7Zm^F?5d$a:Cq66=kug1bM*b]O@0PC8+Ut^3NgR!H!du;1UKK'/&m!0#0^o)JFqAMAkQ2
%q_ElJIArn8",AnZ/i9a'^*LUJ(&2;M8hrRapZiSL'kBk\BE#*G70nokC8.?-!W<p%d4T7@B&u7P-])[j&0&[nrMWoY*d=bkfn.):
%Lj0j_VY.h/E&;M;m[#V7/<.7?$ju%"H`pb<L@flT`ENuA&-eY\G!bq-m@X[oqCV\PJ&+cbGaa=%"2^%]=k1eNI,IpG&@>0/j[B-:
%,$6&3NW^``,"EH2p7'ncM2%s]$DI.hW[1-JYaWX;kHlE'B33ZnATF\0T%oM(P2&>N?U+>HUnFT=Z'P.="Ghi%BE&trj8/U-9N##k
%K?Cp6rHdoA,i4f1&3X+g8@"fMmtrO,2IQG,O!Ing#a#H%14VIU#=;u6fSJHi&E8A^GBT).I##`i@/=ik@=OMboOGrTQ>s9M=p&Vt
%gM1TgO435o1P9JS`'gb+(2<Y7/q`1aQ-)(GO54'$K\Es7YqS0N?GQIq$,V]Z>R[]I*JpX9d4mZ!(Q&\X-/LCIUk%l;7R@_;3^s4U
%FK\ne'+S1Y@RtHFl)\pDD$]BW#+n'QqLRh\RPp5**q)1aTMIsqs)o*h8)LUmm.e_UT:)^aSC'(!#PG>kA0D1DQ+k+=ii&Xm'`bA)
%,dNHus*od$kiuk1-<Y*Bd>0,p)NJ.[&mjC:?o#Wp267^;!"X.sQZrd67cH%+(Ta(nOE&XE["UOH=c9eG#,.$Le=-%UR[f%Z/NBOe
%O<mF`JQ.AX-;)a5I?i@h;F=n<aZKncMrBkqamj";9n*QVS9k,IVC'a(0OErKoFDRmrcT!5MT#:mA!Z3^AT\e,BbJNrc5)G*]EkF.
%3#uN7W$<Sd$WE+^hEj2h5\[UdGQdjuW5!iq%<PDbR"8in14%H$pR;I+"Po4Z/b3_mZmB,>]<o8C$!6Hi%R[^]`t7"L>Uq'*!/(V'
%bn.t^73o-oO;sK0n:m&""koP&Na@bAfP0FfY\*Se+WU%6)!sp#$Ck',b41lUY9//S81`Et"'j>tFU^anJ!t!6@`!uQ3S:Tn-:FTW
%oRlnHRoj]%W`!^gl%gVj,UG_sd0@82=t=-EeDl3X*l,Afdl1Gl!XIElOru?oBQ3@u#c;#Z$*<j/^q176F;aq,H7%Qr1aMEgM^ksu
%aYsq/0&T;75D^UE!GQ!YU&);hY[OpknEq,u^3;D6fpLpY$::trL+b^3%kp`)\ZkQj1lLRIW8TLC"=eUQ>_?s<^6==DkdNr`a$>gT
%8XndZBu,"kE"01*IAr[<&;efg$?1@i.0[pg-LI-6*'G?q[Xf0\HEmlY/[ti<SUemBf2M@Se(A*^qe1d),^GhRNA)R``Wm8Q"sDqf
%c/C`gK7TG4\RZ#"\3ptL0Tql\O#+L/^q176i<;eD/+lTtH\WnI)cJE)g6cQ0fF\>=i+PC@6E92d_1n5`^q18!rmlCmZ6ub;c+AsR
%#d?nK,pHfo1OUF0l@Z44fU.\\_S?43JALhJ*om>m\RVud_&W/C[^uRsSUbER"TgR*Ug`4RM9&?)VB3*-qLBWGSaeCUWmT9LkU>39
%o@0FATag5R(n*[rR\eo'erCNGU*2_Sa^-@C3.coH383^%o+[\U#;GBm$X58l!">p#_00TrrpX[pIXeAOe2pne]A?rt6O.4ph89Oi
%4PD2hcSYn:$Z3b)VssV\olU.][!":dFeDZP$$Y$(f_lI^n3k];1e]oV0X`?lMA)/T_$M<BZ904B'u\`:bWuX*`-a]QmuG4&[PgkW
%?HlH:<kYGh^X\rQnMf*d'"q1q@A,Jc4Au]if%L2o:;H[@l^>nu[.\Y>n$HFj"2QQb8f->%G2C7L3gSR$!p4(3!a#P5UPrAQK(LhP
%U,[mA;HF/R\&IPk"n.Jf[$VOY2Rpt@@.OZ2&_2I?CjWhm!o=Zm120p01kL95=g5Q2Vh3GLD1HgXi:=##9`:P>p@N8d[#*Gi4"j/R
%;6X"U.j`,m;.W[:U>=9b[3;=L2D@J>;/Cr[knd2:A0d[5jb7]CL%@37%h7%/)G2+SK81KM]1>UVkkY+/r#MiiRLYk;0e8H1GqtFl
%,tOYMNJ#[W%G$Fn8An[:*KTHWKafOYH.[6WV!qFiO]GD28X\RJ,/.\ab*-sa%)jSrOe6;e/o$?uOVY&uR!f&.*h?l*iHpE&\ni#F
%J[!q.0sGJgNPZu5aS1gX!<Pa=]Et#tJI,b]H&s!BBU[ZCYA"X6nJq`F7mt:00eO'oB9NJB#HS8_IPTW?N(V6^cNZ-l@ZP0`,?Qi/
%Jf`1nLP8DTS=pDWLma?2BZ7o?\Lgo*c0ZW-+)L68K29`2f/XEd4mmL%&GO>E,'b_#O2.ZR`&9#oX:<nCcF9bt"IWtVF&^l:n-7H$
%Z*T;09tYE$OCd%#i$sW"<oG7W#/^l%`9&E3\*cds'?#S[e\2d3Jl&b!.c)dJTAui--#AqN/R<mkC7)pE5QR'e+GQ8H3.Nj0&#?N$
%I=c[@$_7P[d%ILu)'&d6;clRpRLdIc\,i7Q3<]pUIi;fu4s'jT9.$EDEZNG\BI#+d$>t2W;>CD_-8qmOe^iSgAIWV0IW;;=LAX)R
%!WdVle<YX1Z&m-2(n^X.BHY)?l^8(1(AZ\:Y:9b2ac<pmasXFXCccPQWT'e&0)Qe0p;*+!8Nk6K6%ENVY_fg3HQHRU2.b*$.!lH6
%WK0TYS=#\q'4q6l7]?^5,^Nk1DN9ggboIlE/-WE+r-:S'*qh)h_`;Y=O""Z`WQf\k_DBf#>Ck]uH(_MHTbT($;-Jn<DIVm>a=HJf
%G%-:RWL7U5Uae-@,jdKTPGOQ&-3dU2UutQ7+G_=6Fos"Q=()H-]he9c5)!Mi,-OE&4?X2f7oL'?l""O]SN>EIlNa&MXr-!l:2G1s
%RNg_dha(QffY<d3NN:L=;p4T9j/P#@FSknn8];=218R54e#O@3gWa,=gdJ^t+<g@k34jP[];q-r]plhI1=.9`bG\'l'K(_Jj,B=D
%%g_H?6n@u:iQO>?,qQ80`/2tIWse0f1W!T4aMk;>HnG`kCa=Z-79D7<cT:b6CODEZ0l:>8*u&@)SA5R_Ns5l@9,Q>rcTl/b!_bN6
%&Vrf@&TI<7bQ`aY;8!dcMIRbm/F,o/bs+PT./eg)C:EED'Lo^-_d)o22>SH$Lk4qcnHY8&,t^?h0LC^@h`sS6cI'L7A+Mn4mC)"@
%Jj'd6][BC8,Q\=3*i-o\[#X]2eCDAh%>GH[HZ3SWG+%T__,@mmp-pH8U)uJ6ND*PbndeFQ4O*q]YNb@@>!'Y&Y&nc>Bo;7&EJX2(
%!=(Td5`ZC3n+qUueaVC;ame`GO+Gfc^P/mMDSf_7]B&qWg),q(0lS!K[W&[3grh?;j46'Uf94>0]XdDk52V)@Zj2m;4!l_q@5Ms/
%=6]@3fefPL.S7.hFMg*+7c9BH,E)C*:P^sb)tAZ\7&1SY)Y.%Q9;EooqLZ0o8k^FLN$pFGZ2k`P,@E7li^DT;>e`$WTqQUS,-.)+
%/*J?s?GVep@nNp9q<$g;)*JtHNK]FRM")JP!*1"!4l(WVPbJi'NJ>V5"?^Fli\AOtU&tUg&;q3=+X>:!Qs"Aa`LC<B0k/;kO3n?5
%,,3(LFQ3?36ZO_`49l4JL_gR7$^)k"gQ?Ff_[7T=N>6L7+e!ua,pW`L+]I*&8FQttCV<J"-[H\]c@L.u*Vpu,@;68+!N&n:W?,a<
%on-&b5rV3Y6p>T%E;go$\T%j"&.UFdBu6tYa@bV0\-r`a-p,?6-.ef<@p1glFU+DfFkOa*n%]Qn6[q"Q#H[;PYA?*Kcp^dtSRHZ[
%8(#IZr_aqteot:+:HFMi7L@&3/MM0R"Rq'\AkMhAau;jRdEcW35klqJNnE-[jT$ml]9m9L,++?m$M!dWI>a5g'/<=iQbha<M(j,k
%80jJ&Db+H$WFuDqeRI<!3e5Ro$Q^je#E[Z'c0OZ-(#?$NIP0qOhf2S9V'AuLJo7YSK_ZZ51/\j&P_UoWD)R^/)>K.Q@R$<ZGUTj"
%q]NsTB1WNJ"fHcA%Wp+W"F25*G#;ORR5(\Mda@_G(0D2#ihh7&o@IEI;]sple49gqNl_dJO$RIl:;j$H"&6IXn>VgVV'PU]SWJD?
%q0.pk"rcl?6u:f:''sG/EXV8=f43K.U7Imu#mA_s:/Q'=*k-+&GrZdI0W.!R[fO,XcH$0n`9:^Oc6#I$B+Lg2&Eq'YTg[ia^')hu
%-%Zn$Z%I(1LNio8Eu%M`-[>o[&4XSrR5#+q"!PrrG6h00!"..<1dV9&T[`OG7n@+BRnmK[QSL0*-h63,6(""#C:60d3Wb]5jD>,k
%Wsut2&qWZX>Fi_&"4KMoAKlmP4'oPd@U;m__3^tUZP+dr?9@Z[PJfoEJ#9MRn/+Qh>?fS/3,^iD/WE$M_!q`%'iK^h7p$'9LNY)t
%!.?5q+;R.">[dq2!3?SU5d&EVR7clJ,4065FJ.c[`lAu1"?>^ODm*?n3Jh[PgLriJ7DH^`oV0RR5rT%:H2ZYW7r[dU`<O3:T`!\4
%E*BcX-f>c/[Eu10\1JD5?A8*T;=H!$3(>]W<kA[>NOUP[Dr$,eV`3_,J4&j0ON[67,cG$;Pt>Eh,7]t36]Y[JHI/EuDFe`FnQh!'
%1*tqDcpq%?U>l9%Ioi9`V]*_2>=?k-KW9k?5\/Xoq'd*1,p!RC-:EAO-<RKg,>0[T*]*@]Ui+!1"],VT4V8rOQ0>.H-d?NC[Y3oC
%W0h94-T+=106"-K?8aej$WC7Se5mmL7EL"g9N\M=qL!lT)EHl4H^OX(D+>MFfNo,1*f-!^k-XJo#BQ[M$o:IKM:a]AC"Zq5-k&12
%Jq@en^nW.6/QRska!\nti56C$9:hjt?FH89.R_i4O=;CORJ@k]>=Pj7=uHh/P+^-pA;!LfP@/_=q`r17i'beF6mHj^q0*914Hq:P
%<eH&M>\iP!Le;&F08WIQoKj30"D*I]\s*%jTp5YY.\\!eS.h%`'XQCm&[8j^@<`EL?pTrd'BICBR9)7QCsBS@n9Lcr-B[d8,Sg80
%KX-<iHNKerK[tQSEj]MGY]X$6>jDRpB[_eE7G4%(9M*d;gmI<cM"h&6Sb5q6jCWi$)GVo%Su["K>BHN,0j:r\7>'a#fr"^MRaiYQ
%L=9fZ"EYmI#l/eoG@M1(iasH"@[-s0)<:9H7d/u*!)-^p!s]L863:R@e<Y_WI%:o128C@S%?YW;/HdbsR2JoASNsP%OC95,='g&I
%Q:1=4Cc1A#;3\`VU`AmP9fHE?rOpZt9I<?K,b,j<8]XApRu2nFLsos+d@+Gfk(OH5QgbRIA8r#*'Rt*`BfKU4=#NffOX^[=@&LfK
%V^OM8(D2FQ2GWX9W[otZaM#AQO4sss50"8>:_^,B=J!KnV_un%@``I0$K4-@G7N:m?jX0kM,kgu"hl/+3C1IgeZq_`J-+^j[k&S>
%lLfd**D+AY.8pM+:m\r7DVmeZ]o;g=\`k\cBgQ-lTjIn#Ri&gQq<,5_FdJQKY&Qg52nAJ?D;%>1Y8U%R3IG"ShFqjO'o-c4,I1tA
%<+?@WXsKPDF"!!n_1R2LcOB%\Zu4=6]U"(]dao436MY2G3f0>X51)A9VBMnYLc>j9:PW`qfEfEUmbhmOo!3s:-KSASkPT\R?Cr%o
%i+NUjhJU5Ih70cN?,O7])*a"XC#e"@F[Su;Q%Rp[C@+W4cp>X4@$+k)%Z-CmNYkTNTZ_Ps5a%g_'kQVaB,PXg"qn0'-[$nTeY?#u
%'s!LO(h!sb^h68HDX"rh8(j!jO.s[S*HLc`q9O=Z#il4gce`!9(:mH]"&Tf0+AQHa'gj]16,mP"i6:KlT,I;D<63W]0$s:#&=!IF
%mg7Vp2.fH7D1sT9@7sF8L86D+DBaN+G0FmPOpa4`R>q*uq!9=r6*>quU,a`W*B@3.q'`f8XA#;J"Dbq.PXmcs>U,_^U5O(c&6MCA
%dqhQLC4'5!dTjd)+hpa!5-)fLl.P,c=IHj_^d'e(^sn[f*fWJ,8LfH?idX:RE=sbjUGeU[i>+lHM[63u$ZpW_j9^ZFLLWeokqS;%
%JROI:[\Fr[O:DfTQLSi>XcOTuXVm%=8bM5n?L6dPOnlEhfX$70(^)<sjUj[ASI^N)MdL0=g*,:#Q45FE=Tfqa"tRnhU^^`u&OEKn
%r6#A#_NkO++oSdsn,O$G,A`$-I.k!N^_E"J<pKg%3FlJ=.=>IaAM`40-=/q+`5nY2i#E;=BO*XSplG]a3Ss*/f$,qNNJT6_D;f^!
%*\=iW5f]id7%d;Q0SMBg[Xm>\CG>eXrN5G0Ibn>U2'aiiHHm6N='(_&PoR$YTVs,rJGuIL.=#_-qo]pCh*#.3ao:Q'W_'4aRcK7o
%J%;'p8k"oo"qMPBTgXPof@DqpoXn.h,lNCF+F6hP,*5?@'Lql9Efq#n5WQsB+XTQI,Miad"jYWEaFWNWAAWAlNs^V`.>MU/%In9@
%R"tqJ(.+u<PbHHY's_i%1e>GK#19ZF!ni*:)-%'S6s0_39$Dp.W<+DGM+B7c_P4*23T?_?3_Ai\e!8QQi[7d,_ncn[3"e\(\t'5N
%+YYhN0S5SYfZ:4=!=rPN3JR8i`*jXcUsnG-*'S%dD7%VUl?/Zu<Y3'^&#%qCkq"Tm9k5%F!\>'S,%ATHP]-i8As1%d]"e]Af9KN)
%\V;.L7?Z.l.SsrX@K/5N#R\FD3m/hF\5Z*nGq1"r8\G64*"lTiYRS7W,dU\C7kiW<*5gH^o1ll%^2JO3-b5`ULE\^7>9KaYgS7i)
%0,e69:APmA.9Pu4X.^-emu6StR4;=R.`U`Tm_<1O"GPY>Bcm:1rI,7Bks695j.HFVi9jqjs0_/'Wue5Z$@Hh!.G$(#:t4>Ol[g[C
%H<LEL3eRMp3eIcuHq!`2%F]9bSnqfJe\48!dD>VW"EIJ*d5@F=3r7m^F4J)&'In?U$oJkf!d&uopn"CZH^nXuc?5OO/J"*JH**)O
%]m95%f*gS)(J@j,ff5"Ojrrh*H]OR,e)9Crr2Zk8e-s>Bs&,Qf"7@NR9gY3,[B$>@=mf#5X2=,L>*l1YOS>nFKV.4R0V?8L$>^sM
%)Z+CTc<$k'XVGf'0?R6==C0SBY4Nej\gp>q!jPrIVEsG\jh$dd4U&,7,YHWoJ=@kQ/dNd0[,/GX6Yep\O^c3uKNOVFM)*M2%37U2
%?VjT_KP0.Yj?^R5T=?F$It_;HjE&rll9DMN,p5_)UYJo9IH2QU.]c]46g2YG&!u>Qm.o6tAU_'cGIBp&-mY@BAD/>S>R<*)fIY%9
%0I7C9J@)S_:Cu!?TNn92+BAp13<r,#-snSR)^8<.lkb<mFlleC+X5oIL)HYR`W>O_8bXYR;bhY\3?*X5#V$s!13LKVW2,k4`'d#T
%\FFX@6%\7j@si#5+)QGJB[sQ`_tBphOZT=]X9\u\?joRM.cJCphNJR;P4_.7,"l*52a,bYKp)lt&5Qb-#W,(+6:qM7XGXN,Z'93]
%l!2@u!H\,5'l5NRdj6'nmO_$1nI(n3L9:`/=]mi=5g78W/]'/2O6,EC:N8;=7n-Zh1/e-$eQ@g+OF=<nJg=%%OJ58'5]!#W.5'=4
%jN1$p2]e[k7K?^9n&TL6*$iX<(Bdi\7>"^"Aj?LAAIsMgpE[Ek5_Y^=`4WZB9ZZPW;'TY"Q/m,MqNob2RpOFl%A)JoG$ooQ'lm(D
%O9Tqe&<p\#]KC]8ElFtqNfUD4rpQ0\AU[j/e(FZIOlR&/*5d"W11M2F9A%R(O!hQR.4$W:k;#30q8lCXIY&NF&(nrL2u\=%?(XV#
%+q0/#NhU:Y:e_(,$(]C1!A`d#WLcN$;n6#^r^3fsLT3S9+)G:BH#K)S_$jncoZG-SmpBDVIJNNkb?$?GfQmM;lfV4<_*NjY$kr9^
%oh1A5j8CPCkp+&[earnM-4(JZWI\E8KFM$4@,TF/6<2V\#uu!$D2X/i8qVtS.rkJOCtTD3!@+Lj-\[Wr('l]-77TnR2OY"dB4/S:
%(bRNaiA_u(^BOl&gIYB@*4e4dFst-nGG1H-&sL?]_ceg/HbA\R`J?npUD.A0?alPQ4dr/J<GS*lGK8)$M:Eks+(fl0?#4(h2<1oR
%7a,1]WiMGs2hq%(@8M3Q?E3#M>GIJ'P[Nj]J:K&7>W#Ii)E+^Pk2!.0l]89BZoZ$<D>eOn(\@tfqp^&gp;BcNUfZ^2b,^+$QAma[
%Z<<;#TQGbLWm0Y4;Of_.0d2lm:S<@FTn5$-FWt>s77!2/TR[0tmEB>LWYJ2^G,6*P9+4]UD2.PL*<0d=`us8^h.Wl21n(e+k10."
%e_`(V=CH-Ph5eJTdM&ng-scuZ*KPB`8bj`])[_W^e3YPBDrYUBO@Eg?nMC[>^Ws@:K1Jc"._W`=aI"KYk'=cd;7sm6ZG'Uq=AHO1
%a<?/"pHXS49?T054f_VH62?1mNHXq:A"XnQ2qjJ$;(hT<5i$.4Whm6EPi9Dh4KGR09D%5pOCqFE#%K!_Rurr%!/#TS)71ufVjn7i
%KBtWV[N7%V<H6R%XA"^dBP$:NNO^m2pF=:@%[$V#LIUQRZTH-b<g,i(JdgY%W?-`*@7I$:[\iEE0W%.HqQ:s.im<E$M@iA_hug?*
%gLJ,4g#L5$81kNsJ.FGZ1-81J]5f`jo:Ai/@uNFL$UFuU#h#XfP<jK+I?MR6#9hQ=+k4E']!I\#P%h8f(>6+HYAdRgJEW@@I0pcd
%MPC]RmEA%<aT?=;Lg!X/aY5ELm>ZW772a#l`<ln6&2/Us!B+/WDWVjd80hXY.7<THpf?8'dD.nEU"["9#c\KjctW]Tcl`J;9d`>^
%L%Eb"HRR668L8n%KJmp5Tp!"1P6k+:E42AB#_LG!%.)ki6RU?Vp]AJJO/B7^HXnLb=3s;/2Ff"!U#QGT//:]?Xo'_h01F5PRn6FA
%DSt<J8h:*5H#jB_2$mFt5d&S(3C]0N(mMD_Z4+mA@#6K"TpoPj>GO#GH+a9E8H9[4g#2]b5""bj#>(PH.V7u:^A):EW0_rTRls^e
%)@3rM6Il"$(W:`?huV-(0g9.M!DXPKB\BXcR$G;lru;ZVWpqT9?3lTN5SI%+`PsWa7[0aLVU09mjV,^N&Wi+'Ib=ml^GgXIs)tdR
%AWCN/nmXMs4%QI0gO,e/dC`,'q#iUFkH^Kj]M%fsK%Xna]`QHgeKsof_2)9J-b:RPAb;f;-&0GF<1s&;$n$c=Dkhup(/_!R!K]p&
%o)0<1_P$1:%p&+"W_(!:FO2OJFR]pY7RpF.H(4@0p2:JR:o:17X$WQV*cB7CrdP_Aab"h,Cpkc4KD7286R7>-"ihLl3JJk?H\AJq
%E,&3m.9)+sR*GKLR_W[@Rb]0W=:$kiBh#NiL?9EK&`"jec2regTcnOKdTrP&%"cKP&fFFih#9UfR*^p=%nAk7TKFmB4$XBmN6K4K
%3.)Jkj&GUc&AQsQE-Q?sN.cpSEM`3=U2I4oL&#jfZeZIkOI;<6as+E'81aIW]Gh:=<=q[BJk,h`jFe`-k2?M@]c.'<\6n1U&&XMZ
%UuQ^V%*GJE(>(i2Hq$?Um!H33keYarU3a&$'k6:)U6Z12@C2->pdYg503TV.JcI".lPP61C]LH[q?d?mE/+cB79O*`jp5.#2-4NL
%H7?58=Oh4F'R:JU!#^Y\V8dUG;aH\4)MAf</UL\f6hr!_<da_T/J=$D;UO[2oI-TC+n&V%V[K,7n7IB<=D@E1>/T22.T_Kk1i^MM
%UKU36Vd5@3!)7Vt6T:q?cRNkd]fa.K>,KHhH9ncF_!=$gGmh5\bpr0\-?4AWk\-aL\?^*'Zp%nD916)sE;4J/+K(Pn&M,(&!l]UU
%=1%**']jl;FFY^B,3\V]R#l%C^WUJpmiXtl<Y2pe:)N2Z.V=:Z`N51Ela2R^$8j6[;8eJ7@T5YZD%<M_AuA-S5Y(^1nc6@(e3b7P
%TPWiu\SZ<HN;[Yj-pg449TkAAe!ne<S5FCHZD@:0+2gcCgObN3LjU2fKgnQ]Y]3Pe-5+i>7WW!*M/sTP"^!=t/eT#]U)ot4?_i>_
%TVIhl_l@s4$=!WQEd+E":=S#ii(9>/Es&LHr.T(0?hdLr7Hc"P\:C?^6``_JC';`'@cs;!`aAAbo!uY#AQ.joN6hpI#UKI\LfBg4
%BC+1+<J>6G_EAe\+g]OX;*`6:qqE8CNR3q[Pfr9s7_pb&pmG]U2Uen#3/MIP&"jr816#b2n)ptfR/I,HRb)<ahBb!aL\+9Go9HdH
%483&EIgmipIsno;F8aY\Sc8eB7]l%/Du[9OR$BPA$g6$gm$n-EK^8SB7E$C@UmA2p9Nj1/mu>.s*i[M_'a4eN-n.h>7C_EgbPDJK
%PF4<7mMnHk&4W2fBZLN]AnQV/!-TVR,T'sj+Y@o5oqU1J%'N_?m2rGoW#r>8mG!DP6uiRV0q@95\\8Pt!+Hr2Wg7=I&>_dH\EkGT
%Ce5J,6Ru8`FWl9%QApmU="Tlc6mRb9k]pf;5bGqs5&]`ZK28&jC*mrg,ZuA9IH4K.,V2uO_I>BI4$V,`A%7mRIfb%XNFL99e4?;<
%2fJ,kCmL7tU8Y@d;@CCTbDF/jM_Y"dT+@L2AT2CP\EJd<]:8p:UdJZJ1hUH50U&gJjCLefNFIE!"1]Q5#_j$!D9":S;^gCj%ChTQ
%?)->mFE#7m$+X#C%G!4fVAd\N;<i'BZO8@dC(Oa:I*6;=a5Of+Gf\"uq<"!B1MjAB%-=$!4pi%N]52Gd^7W#HL[gt/]1Ws\Hf@nD
%;::!rG$Y6g\Lo153(RYCj$:*p]%SD^oHF#j"h$"\BnF9;e;npT>r2sL?p^9.6h%.s)q9Pj)+?"hUDKU:NDS#sWd,tr>g3G_B#Pe3
%iEs$PWY5U]<A5XL/fQdb]h_R]ca)@P,h(m\,n9Tm&6D7$H3edJ?q:RYZH:TmKW=oSLOi#]jH(8aDn*=?.PPVH)MHTN,:\KM@,9Ag
%4`"W8dN4@R5SI`[@8R2uO9-huT)D%lXBs?]S<mRlfmdULT/J1l[9>AT<#DUHO09cc8(V-*'=PL0L!ISh1Vh!L<e8XFQ1V:q89uB.
%a`P4+4`%c@4ZMnt21"n:_F<tm2XjBb=M83-\6j_CAH/4nGnnt$H`%?+I'oam<!3[D3epNm/+J3K)"f^H"-Ea!),c*@ZtUOO`Sjc(
%b:/T;Cg66/;/qlZiDGA>=].>b$sCKjm+^NV.psQp:+R2m8/Qd.Tf>a&K33dVbNtqqf9Gf/++=J-a<I;r#pC=0*tdYNg+Cnhn1`N>
%,,E]CW>Fu:\._:06)Q+[G3km38jN%4<<tf;!f'\CkhVn[XqL=dPHH!H;M^.K1\Kj5lEH/,j;s/]r_"*0%lo0M7\Khk-B2i9aDMI,
%$4F<(`X%f;gL<9cP2SVfl;3V*F,#GN/(b,Y"u&]+aA)#V6oieRr5fk.15NhnA<B$VrfT$?l_=^W\[h;r.p!,Dh#3kCn$i=!q+,F#
%'L%.hAecbbMN^,q>Ch0q;S12cVo:0>_F`tBdA'P!#`etj.<<]$g"X:d</)^Eg2ZZI?o&RHf$*FbT:$Xj74HRoG:onT*M>:Rg8o5@
%e!Ht.?f'Ueq;r^&j0a6;?>^Ed/fg2Ga3BtNfsqKVIJWTDVlu]\m_$5)f/U,)fm'_g'.I5!Zh&9_V&oR,l(;<HJ,`#fO&TU@B[V3I
%K8t3>m=Y<fBrUF%?dG=sID,UBs1E_\<WXG8(h@EldK&RlWu&D0nOTsW@+b#RCmC]`ci!QYkOP\:opACE]DMTlg\:B)Z:he)r3`)^
%0E-2\HojttUF34ZH3qjYp4oQlh`cHg*rTu">X(Cu4mCdc5>P`Ts%@;,M?!A1?U&UBqL>]qJ$758YL)[A7BVV4rBZN;Pj\P>hQthG
%(Z2mYTik]=n(dcccJ,f]HaUrf)d>JLn_>(Z8($HO&*rY5ri>=#-T2Io;-^I7iI!%V6t3N9\Icb6/uM]N/hdSHD%ugo.S2h-0=sPV
%'.#7C'Te6SJG*@Vf$^sbn!lgbJJs9E.@5t4emL/mfBOM>%Q^BtW@>&ga]q[lF2RPsMFqmMLhb!L<m=s%qh8'<p)hfZG2]u*DaG"=
%LIaM1HY9H;=XqeC&JPZ1=Z_>c1oN#9Vj181+83bkIImYdU9.ORQe<V!?,rbM%r-=)>X[:-MYi)^%&'qGqDM5^F.pBuU?[s="kBii
%oSrRrpG!_D75E=n/"#Nu7<tn+)Z5p@rKeK%QQ,m?go+b<+PAPA_4]2`Wkc;RK'R-,VHSof0MH2[Ti]tpP2j\QEV(XdF!WPlog;ca
%$GU@qDb'#H*6\ljj<M9)^WbZQl>-7d)B\tQgEg60&ku_r/gA?rNsubY6Ku!G*(ka'BEC,B)/W++c]%'@^dT,nhp43cs2=4.T3-9\
%ZZWfqTV1IF*@]60BE/i8b)uVTjB2cV#_`K:9L8r&AFuZ(BQP._,?D#\"qBL^R$J<hP$9*V5adBr%M)UtdLXt)m!TGd(Bd?I"B&Jf
%QjLb^nOrjIZ!UT[l.6!4;(,T6Cc470*Y8%Hac0a?4S8J9L9;$IruU3Pq)C19BVU@#rk"Op#M4Hp]`6m3N;i;)73a,>Ykgja69#<+
%8;KQehSEYl0AqNI0WD:tSbnZ>`iutWXqNimJ[l^AbuP@s<En:HJ/&oJ+=r*Er9.#-AX!Bt_iPV7T"P>pKiUS7+4U)Zm67SR$Nk1q
%P5+*Yj7Nbl3<m)*om,R3be5IA9qB=F6nprU'ROG"gam3."u1[E#LtB-(ERA=DN[O>bCn;&G(=^C5@OD7+Hk2b[AHVSHrRkP!E<+6
%dJWi.W?;.OErX`?+TEbaruWK^\!L3m.U*U"Op545K/'>Ul/j.WJaOl,f'Zr^9l/TWrON$YaP@Jk^"+WrBl)^X'4s=B'&Zg&8@h24
%GF`S7)7D+l>*H/Sn7[o\XS%CVYY;4Bg`2kN>YH(/U:R?[ICP-ZAt8F2%Sl8O*=Zf:>nff8)an5*fg8CWrZHVQqF=D7;2b3U7KbGG
%b"Xf$mJ<W<o!"`DXR(<,H9%_iGB3)@S7'l,ccngG^hM(<7ep*7@thaZqcF'$Fb+sKg?$')k_809&H>5d,'"5uLNHbPG[9=d8BitA
%SOS(66XA@3c^]7Yi"IKZldA*8KU/++:WnVhRZ'hu(.icu3ShS.,5p3Q;)VZh#9h"$8fVS2:XG1rn(>G#%ai3_1;u^:-(/s*"PL=*
%h&=XFPk1E,*$1*)7rpjS*p$45A5%(%@Xu+W17&oUF?RZCJ/oq7ejSH3F`]X\`H$Je*p%hfJ17:=1<^j@Fqo!;W@V`l7@<4LD?6^]
%)Z\50Jc=,N3LX<j;+mCp`!qt4MC>LIYi&CV4e\*aVt():pNdo<VQ7$f*d>!H,\94)/ocO^ZE9p#)BFZ$n]OI<IdD;(LtE7Ja:/IO
%,!lV^(5NeM^7Ng*V4=&B&]i87AkZYRA(5-d]mfIM3FmkcG#fbR>JrXbE*;a+?K=k3a`&;F!-**@DP,ZQZcN7h%!4+>e>8=.LAhD`
%=Y!n*gL[TZdu=F+mgK7U<j35l.u^^"fQU(u3hXDG?l^ugI,Lr/m0.5I!gQF.F^-HAUNf0U]>VhkS2#n+0?5*e"7#FH4n8ku%Cr+(
%,Qf9]0S_)4*YVb^H-hpPIlS3%?1#H:e(j&D;'*^0pUM9GCXg"7j-qKi5J+t*R0q/UI%)fHBo(%t0H'4>^5-0Z)qd$T68U%,!]L>B
%U)I=]q&&<?`&n^p+-\8L]gG:r2It`f&q;?V_cWU`#d&0=^`mt@jT5qK%&6QoE,u;QU]!KBE\6@f(D8eL9d(/?TOb<9,8I\87kA))
%R2!V8o$.@q\h8V<%+rd3*B5>M8(MYph$UJD0k2&_lMS5grTQPb>!?s&4qHQ$Ad04#fG1JU$jqr_1BBsh/Amu'mijX1"PqOTM,3,O
%&\7&>Li]4OV=L#p(sWD=kK1hL$'3FmJ6sZ^=KlkPX.0"+oR'%VL`FtNP(l@kqHnkaaAU.n-QuT0\_nun9d4F'do%#_O],$P%W)ms
%5CFKH'R>*`"-_0YjT_cX2=LBmkN,OfNdYStS'BSFTqh@&Lg^\=p<#;>E,l9Qf#Q1%JFV%[,[bf<D/>R^:;P?bRe9e:^rR;R:69iJ
%'B$utR*t*Tp9\_jlp>TsGBJBtmInTL^fCpNc=fMh($'$3RbR_4;,;.O'Tp!:OYjS(V9'&UVLqPo#id-[1Xif:;n3nK@4E1*#,tc$
%Gr)WGHtJAP#qgtVKp>4CoC/Y(;NMFu%>Tj)FMqNo*Seir:3!8./siZ%3g4s1i%=\.T[+hPQcVHqntF\LT-lDO\@i&MS00W7=T]bb
%V6?^'i"k>tgdB@t?=Sjd@8"S7i1u9D!Gc-:.!I(E)9J`7Y9K5(W5l';#o8lh@5:a'>D'+>(+M?Za^qX`"K0&WgRK;/p$0qp.WC7o
%b`JAf4]f$h(C2'&1h#Q;',n[UO:c%o)A5c,F!fnm7tdlg,+-i"f3t@aKRhS6AQ-)H7U0ZKFiudaMdI9>Mm^l"J=3c@G&&:+Ch@WZ
%%%3#(9=:P*,1TT$B"HZ9m=N0],pA2I<a)8nLkO3^=ik=AX^]EueYQfPjT2AREKa`@i.-J%L?Xq6[E`=2B=PF8GR(Vq`8AN.:C<6Q
%@Qotf\Eg^W@sGAi&o0"B+eLtsR(W&K,]XLD-/h(5f&9k#M8<&X'.oc<]I:$JR#]]Qe/=-QmY2#pA?'IXKgQAL>ZkV;(I<i7?+.Kr
%%%!=o";iY0P^8-jXr)SpU`Nk%%a"Mb&ian>Eg1gpjl@G16k8S'2;fL-9q8?9#h"^HFI5<P44!aLGHl8b/0kI8iE"dO$Eo_/(l"S]
%Tq8q%:LU37EBcZ;Bg;Z>;)XF5=5It7J.>^A/=B^Q&2C'bViO9375U&;.RXsm=_><j;HOI3T9/6dU;/dS6uhhD'rfuld%.>\`1htt
%*-Baf[Q84YZp_f<N$((c7Spq0Zh/#\:I=m<b#UA.*FaW&@/NmC4j%\aWPUr,b7.-%UI5li;og3)ZhMZ@=umZHiM7trS4^<o$7$.U
%!RpMp3/gge.`m5nJOSfm+`k],+-\4:4U[[FEd"`T/__fm=D2'COgCI=>G+^JcOqc_L$0C"Tq'g*\T=qrHu?e%VD&0.&o%Ek6j'=q
%]$mBUN5@"EQ9]U9/p'LMC`6KJLkO-p_Y/O<O*66^)bX%?L0\"$kA6R08ul(63enOcBe2jZ_KK2mX@!Lm@dum*41^HF0G]cgdLZ^:
%@7)D-j.sHjdSq@0n:KW#pIZpnUQ[>%J'?G7+&p`<mUQHkCOg*#dInbk*=(#'8lOGW6$a-:USXA(@RE8905s.%Bc@5'8_I!ndPr\"
%Z=L3B"N<aDb+A[-7d_nP,,JC+,U"$*_N6A*aW.BSbgM>oE&SA_CgpT+f#S>Xb*e'GFKHL-5Ei*-"l26WYm"qobD\4ihBMX9\3bh!
%Zl%&.Sht(e9g1LKMEF,^<"cEIZJPtl#YLg7OZJA@O9H>*/ZsUldIR%\iCSPGg9c#m%ME%K1F@'>VQGda9%rY4DBkMIStcbDgEqfc
%E,goHji_J^IuJ'>L:QMpFNe$9PN:r6h^*:&>"2=u6^/0>A6cr4USO"d4&1CLc,b\nTfXHV+5AY75A>Npq2eFHJN"qoFJ@g\i*Q7H
%YDTk#<>A[+6"/d.rdn1%3+CB'9:_EZ<!2]G;@jDe`!OChot4D66IN<\!XB:+h!IT/_B-aaPo#ZkiSKD&[ciHR'A3,EIEb=.j@b5g
%n_un$\Ed(ZrcgLMbaO7WUAqG&9ADfEi/uO8!h0fL_W#ECHpjM*-ba:D$'U'@K9D'Y-[M!;coN`k+j$B_E/]jXq!VXqJDM]PDR-(1
%D(BG/B>S?jOL$h+l6H\dLep]c4u;h<:!s^r@^fcX!&'b]Wc\'==*XtK04Jk%/kRB"k3I)a:Old$7lprq03A^Ui$Y5nfU2C5NE008
%iXn9t0&=&\IDoW=@D$71Rihs#(1Xs_rf'NZ#m/OS\`F$+]mO3R1<4XC6rT6nmu"B'i0gr%.$BUU*QtBbJ=U7'[//>`b#[1_"4rnh
%JI>>UI#Lf8Qr/6N%!P38)8Wp]1i_H41f";r0T#$,b"d<:6q@iNkn<p$hNtH[SPidG7^G3-_:M0#;uBh>9q8_t@knqlPuM6^Vfbuj
%ORVjU2@W*l:V#VdI8Q5uKQlkI-PL.7!pg!?J>%moUu4*R*#D@]R-'?U^l0pY=bHEL/8fN+CIYeld3>"M='3Gq4j<]JJE/d^?l-.[
%$T0H>MZpdTkXUR30$#q-Jf2P=+d5AR6_LKb0Dc8p+BcG:adUhb\WTP,YTTD?O"tc6Nuej$g,?AR'1R_O@r+*.@W32gJsjQc7`$6#
%C+Y<0qr%_k->3E1kH`3\0[StX3O$5QVQS)h9^fs["!=)V-G5-i#g8L(Q<r(hT4W\l`d[nMoash=Q]DC">4`]O:;Q\JN]@?Z'J$k1
%ZdH%#QCET/;Q9m%1H,K51B@@Xn!q'd1-KV]mL2^["XB%oE6lk$Hi;lDF73H(jRu#Eh58Sm/];/@$ZQigbD>=Kb]lbf7RfKNECU^l
%`RQ=J7&D6,Nkc3X\X4"XHkKQu77%,GM3oTdI&Iq+XgJ`ra#3Cq1V6CJbi(rd's"kVnibG&HsL,ZegS8Vj[nFDf3RNrYfg79+&u#/
%iC*(c*f8\[.:6U1L#;tfaq%-H2F$K$gfPc#MX10`FXG7r,O-3NL7E7aoBRG\61LA=4kS]9UK5qP<K-ANCLVh0M%I"p6p%IZJ%.r3
%=LNM8C3.c:^kaO&+b6#HE!1X.i!\!\)JlqY22&-R`#=\W(MUg?Gipk6"Z@5@ejJ1S].l!#iJYKI!cr"Q.Vs5Q:c-DbT[a/t5)35I
%h+J0Td`3+^(01TciK\#l,*eOs^c:&?@0T/nj`RrDAjjN2@bLhZ_T"@T#'S68,f?hd%[[bqIYL>0:65OC!"FdT2I*^u-kcK?5p8_L
%F*bf!(#WVIhm$Hl(5AT/,5WW^-]2+Rp1l=IR`((\i_<6<GaD,+G5.dCn3*C;::l</$OeB;adPj.C]H:C-=k(N1('Mp1IZ:LIN5tB
%%?u$BVLrp8lTsa3(!@V6S%Kl"2::J@pIIe^%`^H2=9O>r080\.br6t>WEm[TJm$54d2WKPC[=;S,.C..E$naUUnqRUc.?&M05R:M
%8Aq0X?!R$8g+X`k-A&*1fK'33=u14B22uj=mU&afmb"dDPohS3-Y9IAFg!j:P$DIF3]lt>Go_l<rTKh?mL]d2+p6u[Dk%L+JNA4,
%=U#__0sYd)NqPf^<,cQ_m@O!54L[6.f<N[2h<<?b^K?u<m9KJ/ATq]rFEQeE_;`W<65u_fM(l4=o#p5t`ubWLht"GlIEm[?'#fjh
%?lAMq$Go/*P1R7R6Y?@)Uft$KjPU1.=>@Tg7?bu_[&L<3Zn:T\!2o%=osW%E9s/WW(EfS-9.gRKS79/(aqnQcQ-%QC.To(qo.21I
%e?i1XRde[cb"XZmA.KA/iuR9^$t<eM"cp2c[;C;.fk>"2:9P8SKV=^Y</Xg)p1rj2`,Z]^EAu>uDYP_KVq@VL8a+=2)eRM@4=92*
%ku^K37C8o;@.'Z'LMf,i#WSS^==7Y.3Gq9Z]V4e6:^<3Q"VI"FO"/EH*jt(5eVolk->/]s#VN;JV:L@t->'ShjGX7;Jd'E;#V]aE
%baCdS!>\H>5JY\MIe#%*dn`^M!=Rm;!%*]F#lWI;c4gs9,c4EKqBl(e5rlN@SW<>N?)B;&'h]Nu8i';CI+=_sR1t@j/I<GdkVBjP
%<qmY)Hcab=jVuaT2$T_0K4:3*liffOFi[S%L_rQ(+g=Q/.+*+21+^#>)dQ"a34.*,QVU7q(bF<sf`hKZ$OocH=B)W*<5pOFd#ano
%O"_p5/FmmZ@Do4I=[I(8C-LOIkX;ug8.@#6TE$KE#!9$[UY/M'UIrMoA&WqTjGMTrGT'poSIV@_.BDL[Fr@h]cn>&g1DY6^2M/g+
%Fd=oLWf$<ZpP6qnJNA.sbf6rSg'K>+DRdD-b4PpHZe9:_%+blG51jFH9$dj/f6f6?U%2%CKt%f0n)R?`FT<(j#VM#tO^!aKN,=at
%?;E1Hkp_Ke#gPuSP%4N:2[s$g,,#7KcRNk.*MBJ_,"Ni5?l*Y'qPrr$1'#:!k>4.9<9CNC101ia^aq"5:]fDliX-Rc`"<CrASe7=
%0^It&!pmL[ol:k&@A$'%R$Z/"2rqr)?OWF.m_r/4jX>:97*4Zj.*3.-W<*mriETT)C"5"&B_sKg:-)#Fd44W4+d0`_Q,180a^$:L
%*F<?\_+^b\;SV3AJs.Bu,dMul%;i<3DaU]24*)B$C8;mNLHp@?bj,M+R8$(@\Y>").SQ+"Lb`d,BBNV1.GOG!'/NgNe+I2WM9X]D
%0J\449Fn,GAERG,(?*6u1k$5:L/*p5@/<FID3TUj,SC_kO$tt/n\orC3td.+);]KsDc7'FJ2Ejo/\[i!(5G,lQ"@f5R`M0Fm!\.1
%8[VQ#PtC<c+jDj1Z3Ij[f&n%tq*0e+dqq1Bb>LierH5>++Ee4K#6g="hr_]m:h@)7)Rq6m10X1jV%.N>0M.+(FT+It+`'UZ>rop?
%EAcG:c_#O^i)?s$UJ(D"&EXtViI[I?F`]2/JN)c_-isk^SAV9B-7fY8!LKXTd':iK?o5UbKalJWZX=@YbD7_,0WAS5!S]()P7$mI
%NjPd8>sc1EkBL)p*Yf&%muktb!jU'fU*/9bg_Vfib>OYS.LS,jYgCMPW;JZECQ1,gFo?/EG99Zi+HNkM$].H[[)/)"fmZI6VV1d`
%;I`7k(H4Z[RARPpHud:?c'2Rl;_=7D7QF"<U_TB:WQ!44qAjC(<\0\9Q\nu&P&;4ZE(aH-aON`3<gc8G<nlJ#MKN^_o)?+8,MgW&
%YsELkgGifBf9V8:M)Dc]oig-j)'a"igc9:Z_T#e"^EjaK&L(EL7S>@:,/Q0jSX)t!&tbI\=tPT4-+l+s]Tt[i7!*6:R;HZF.Ccfs
%gm0M(6u6a6fI]\-.C?SFqmIQm;AiZl78jRsU9M"IS%0$96sXPA<Xf56Xf8"n==atp\HuGT))/Rboja?LbNT3Yja+N*XaE,S-sO39
%.s$W"T0YZAR*LJUBbZ9LHP['>@>)\0GgjQ"/8MkN<'[*V'(s-7@r77*5lW$"/4+uJ,Wi"=]+5AFh-jdG&80.W2IrHAK$mo(C5?8%
%=Z#_U?5[3E],Y-+<(92mFDh4>dcaMRR2bU8clHSffcifQ*"g:Xb8pZoZgj?(p-uR.7]+W*fS!iN_m2OuAl)8Zr+C;V:a<3C'nJ3$
%<U(CI$>e-99!Ll,]bm:#J6?bk,2Gr>HIV&4c7/0tA@-)rMYE#,IcaXJ\Y#5aWnWR$V@.d>^V&Z4D`ZjDH0cKqrDj?BP'DP$E'Yu_
%@9LZ</%VDl#-f^kU)@@d%)ln8D)=UBR^"!Yi^TA&-I$LoH0e-FdkZc&fds;q=^XoRJn?'?Z],;'8SSX9o(OO8PTs5PqGac1R>,Yg
%74Z\u(+amuXP!?_1mQTB&u'(n(O"_aJhD8A$"?f/Y=F<Him:ZIkB$tj4cTicC"iMp$XCe@RthuJ.%aXa_Z!C@dt!4!Cd]e.@N')\
%KMdd'j:HGEU[MeL[r;ii4<<@YCINFE-[SJK5p4EcOl`8_o/MtH`(E,(jnI)]Bq=#BpL`>,11Efl`DiHX@2*e-A"o^QD_E936T.\O
%0Aii#0lCUe/A,SD?<^'`FuIt'X?l'*0E)\!FPGein@9>STIri+$n>Bl5733O%d_Gs0H:Y!VY=K-"856&GKqBBTUe(=\1%O-Fj_Ds
%#bAn7,%[i[+^#<3"1bi_6Ggg@?m?9"`9Le&M?V51USU@+oG>m^E)2,mJOCn9a\0XrN=*0NSWXs=GSCHA6Y%1%Z9M0PM5ucILR;:n
%Foo^G(?fuu7/$R,`4aMD`-PD';%sU4&im=bTofXOJX3\_(95P1!LhpP$/*@UfF@1md`&'13R:Rq!JU&RQXs9Y!*.Ha(?/tN8ci!:
%g;f*9Np$TjBi.aKD3enH4:j!:U3iRn']I3COol]7s'Ljj3(C@Wdi8]Db\%s6)/8LXOiQTXEA$#$'O)g$ct;P"V[NuQ*sYq7#IPun
%[T[8Ppj`@(OhNt&T2TPJQLSr@)XpMAC5Wi`M'7o,(S"Q"mWjJ_/*A>W<8\7#\eApP8L)Z>kT3;AEi/T$'=B,)'=%kc,9R`gaISZD
%*GA=U50Y\%6PLBu+3=]h3,%8jB\,ml"$`fn1l:.nj8:s<Qe78/8qN=<EP]gUl#=^W'lF577WJ:G+XB,2nY18hnU\jE10,FT#W-B.
%liCB1XTf@I+dG$"Oq4?q#Jqg>e6E(H7(t]i50F`Li<1UIN0N!<R)MeDYM2$QO[U?oNO1i,/:\*prSE])eWQsKF+?'lcqCBd63IG5
%"olDk<_<Ot(3WH/N\KJ:E8^?L[\/HB&YYXn@NuUD(n=A'@)QJJ?u-\7&hMRLo4,2LHU=s8&Sp`+rD!SR<TJ=h,(ZC/OqmR!/qiHl
%'aX/7'>uJ\+ib]mWF1+N%1CaAnfS!cE5/6g&PV\!?3>jGARUpXYBYggIoAg'AFMuR9Y`2,=>S/GF`U1somJ:MK]m`D)kGC,+I=<t
%L'?=M0N5c(U&@H$/;\14oIj]$iGHjO<KMkQHt.YY\3H"RFNL7]p2[dT8#9R[Xb_KG-AE+<.R??3#_<]&#XbBJgTfV3ZZ?>qCHUnm
%,Z@(T_Vrbr?7#7I[K+2@%W32\lbP=c>7W[3MPr$;>H]q3?9e5'W"IkIIQC<(n8T\:3,Z<-;Z?slXlY4AO<^S)B+T\"]*5>p>s=r'
%#TZ87'iYj'WA%(bYa$Z2e%,#^,Y68m:rchM8T?nga=`l_3,+P_P%Zgehp`n]jP-?:>V&93)'3fn<1&1pkYI+3/YQj!dat4TD,Q8$
%-E1D_9uM*;9>miV?%;"&o[e31PoY$],_r@_nc]ejR<r:A'O<=DeO^/Z?uY_fO#E$hUR,I*&KDDW;Sfn1gBmZm7QB$l)YJ$=k*"BT
%OU-ZZ%i/I.<Y=_U-o,U>(Lf".k7G(TMaI%JRLW$76kJ:]!AC(Y]h5bdUc-rP%St(14ed3n#W=Fk#8J:jhXuNI)nGL10=A2e$Jf,q
%8!#:c,4b9>n=6;[-"N)cVBc<o4eOC.7]!6B2CeH?glb0-0),p\PL9`p-+O&R@\W)%nJmeM^1O+YpOKg,'XI+W`$l2&@<kH;Q3IFE
%-l>Ng6qdagJ3SRH3%&kbP`mMt?.$>YM@]fIi'J1\]l5?L,**$#@*74DprdTBkU$=OgFB#>=ApPB<_$asSWb#1Fq;]3#48lsfFFu.
%Y[#cf69f>*'4^DiY78W[bgJKB7P0t:@hBC_Ke;*Cj&"MrNCJ#$f=_rX5<d.l=7erL/./hcZNU?+.$t\<2."H0L=N>3H%H*sMn050
%)2<7Da?TEekHAmprRm,e>d]PmNZo@T+HpqFQ5PYn@h7lqn."g#<(rZP'T@&AiM.itbiP8k7%]=#"H!E<:#76rg*=K^)l7'orRmn*
%_,C!Ti']/WeKfrYW$KoM"rFL+cV2o&,7uIk/E7t]:6mN$DCf]::iq)Nk/K*]`4d?TXrH#_(=RutmYu+\72CQt5^cX-)GG`=_"tkc
%0tQ(#0iSC&NM*PMVB$V9Ffn17O@bVu#0TMm=a3;rETrdIZaIAS']m?.X.86fJ7D7@C[5^o.)6I!d3'qko!=9Q[>8"Eps&'a7OF`@
%Wk,a"!7)2;Ib*YO%*\ON*]OKad:Z8U3nAQ=dFh1$IL6Q_*";FS-[e+N-QAQ]#Ph#&CsCr5U53K-cF'0VK'\kldd,[n1_I-K'c6b6
%f]0"ABU@=rq]T=NN>:A:;@cFH:AU\'VC<[Gi#\RtV?/+'HY!c/)&D1P^+]0^_BA@Y+9^SDQ&.u*Dd#KG7gkju'g;eJO>O@5r%lCK
%_Poei7[/o=J@&Pl\RHkZ(JnP)-$5f*6s.rRi#4qBh8.Rl8O>p42Hp!#0F0%^#:t1Kf$*FbT,CA?PKEc0@AD1q??T+;8'2X%!/X"J
%:nYK(;BT>.h:BZ]EBn&Yq]WS4,5)'Hp1BH^i!M-s-skJ8En2cCd"AJLlM-"MFP.l<H_70@K\fQ"GGl=K&;JN?=`"+$2N*Wa/G,j.
%/=7<qJJm2H1L@*II8msH#NEhY2ogD5eUUg6Kr37Y"/Hun`dM5,3WUf4]QY*N:BZ9"M$37BfZ.#cHl?u=cT'9kbWs*`S%ZLM?&&d(
%!V]i5$%(Tb*&KH\[oYT^"AYJ>be/DoR3S'n&toO;4&%I`$hnj%?fodWO_`COR1Wb!":+9"Pb!%-jgk\Zb9'B?(]m>Q(?6<Z%Rraf
%.>3?Cc0=V,Lp2b76^+48it]M?g+n]FQfk5(e<ukMDNEUU@^qsIGdj!nJih*2kE<ng<b#e1J(04;;7$qe$[Y&u*<<p<gl!@Kohp`b
%huhj7j9.YmHBlb6_kS3YMpbi'j28#Q+#]#B:JXIZ>`BNtX-l?5r.:8-Ke*^+APu(LTI9fF^C@*6iG`?+7HJS;"g<+`BTDZF1e*`!
%JpqCElqZKg<X>aW"oT>_._?grlm4F(TK(?HTu$t<3mM_)(E@59AX<fA*7!5W!JLm^Ee-ld+k-o.#"Z'IK@Dr7&o[\#gtp8lM;Y+[
%(HYU+E#\tB.AJcD6dasg5H`WEW@:8rYXI!1G,]//?>@.s!(=-t`td2cT+E.VJbMP`/q=)&H;1uW5!MPpQKCn"i_fu1;Et49ZI%]T
%ae2P8_l'e&K0gWE+32/rba/W&+7g1G4Qk/TORo;&(eTN1e8gFO0j=ilX%b8C#K[iM853`"iUg/k-Y;TDM/om+olaW'=eh'&PB4u`
%&A7X$?4BeeV5/:sG<>=o,B="Y#PG/='F2Z$,B[sfR2NWnPTH@@Bq-0T<OnSq7o;qp>XC:9E#0gN*"SnlF:I)3G^)&XFm$Ej.!;P_
%>j#:CnG`j+6]S1BZZ>N8N^6O:#e;'VbS3lH-l55a6?](moVKe\)YrAY&J/:_ibXL\/+oEQ`\,EDK:Wtk8)fdJh*3#;Y04aM<.@=4
%1&9a4Vq@`6)f5pDUVpA04a9W4IF+1@OF41,>TFAPr;N3DC8JApT]fd4Ki9$%@+b]\hKN6+Z@=JoX^$%mdWZ<3P2p7#=;&Gn%ItkI
%!s+\8OruN=6rKui*b!BW,_.@\-bR8]@Or+k#2P3A(bmLD5TJap+X:12f23b"42GbC'/,PG%CT!`p`K$0/%L'n)i2<UXY*_]>"&IA
%l]Pj[9R".cMX*t.DOn_kAUJ:6.N<$IV;\s:Ti#879sap:3KTms5s>a(,m)Tr,P8iu%OV7E?u4d_?CYVc+;d!O&0c=QY7Qj:[%rdM
%X%eI)[-!a)b;cN@.rA^AO$/Y@.I7=F%UL257ZL(aBN$kZHc\.4>o15PNI03cII1eWmn6`Fa^J1bd&O3&SZ@QMMtFDJjHPhQWGS+S
%2op2qaA7&s&rn^,/GB;QAh9msW7i5.b4utBE>]jho@l9(ShY/tBs<kV$k+D?Ed3A*Qtp3.e8sZ)n#uH'O(<i.0jrU)5X[XlQ09J"
%$5Ip8N"l8;fU,_bDaL\IP!KeMULs\'nUf(-/]M_4>0bZM7C^fOa=<"?iE=(;7Niro[/M1(YB-oZ$qS`M3/4t$.kXS03%BbPL'J[=
%6.QGZes>"s0^aoheWr(-Dn4i,@H2*j_ciA4qr3sG^sVrIP=.'P=47\7&R,s[<l6308MDs3%_4cN7;h>i%U:@9q([gDkIXR.[O%/o
%DOqn6MXhauKM<,[F!+@k+bR\8D,C%F"Rp1-6e9j%=;BM%b[9Td#>ECOH"3I]3_k/Uh2DWKP+%Q"dg.N1(.Lb=64M2XeJ\b*`en$K
%k0])RHS/3q@]haHJ":O!om#H*nI^a=M4!FIZd5(drSUUAI5NQbE,qPTY+]3NE[Y@KZg;8RFt+q!jiOd_\O8WP$aO:4Clil\EcG<6
%DG&UlH+Y<12n8!t';R6k6e:!r/f2eY[Oggj7(];r30=n6QH>@Cl1=X&=oiPgfp+KoL%@p7)KSiZSdV475.rC.0,(]3&U:Ec^!F*J
%^u5U'$r[L$3pMi!^rscSI3_8df8oXVOo-?i)#I->qT+cabD)7`OHZb8*F`L?JW7k!XrZ-HNe*]0qpB7d`D,j[2i<66+s_I+j$IJ/
%<dY+.<o?P?<J#J/$ER\!!b#'KNRH4'9m>:#B2Mh;HV^@GWt+cM*_"qr=P)p$<Q@c@OfTUIAQ<7K9WUA^<5@(J%Q<kRJL>&<32_sK
%9:VCkg!jlR-ceGln$f"kQ37W?@gcHp#YW#L>*09]#`'ePf=@N^jj2c'p"OEuc[EoV5M_'mYE$SF=9@D?%h_gBd&j'n\SX`"F^8_"
%?oUJ4ERiQh,53Q%YX05!!;EWgniA7\d9<2Q9)G:sac;O7BG?Qen9j:o"]C+Dh^oGfr;""*C"+=@VsMj%">aqQ2EQbAC^!<]M5+_f
%>dOPgQGdad_`c^^+jC:UG-FOg.&@NhZG5"6(%l8Uipc[3^?SUd)nV4'K97qUfSsU-_MZfN+.%5q\:V1\E_(&TnDndAZ0[ru_u5Iq
%Z(tWO1c-m750noD1T+PDnC.`t,AG52[,TLA1[Us.XO)buS].hYUKt4Og;Q7sYX?W!gMS:m&cOYGgnnZY$B<8a<rPHJ;501MdE&rp
%oK_/2,Y]WL9B,:/*[r8rs3R1">_&bCgdWPJC;l'GY2te!_W(a2/W%mk=g?uN6_OO6):5YZ]n>f2I<cQ,M/ELEqMnjm#[:]qTgO)4
%a7C3m7iu-qo`NMJ[gO?`OFucD-=`!/F6CE35T=$cRBN@Pe:;s:/0G3@jYRVn\&sC?fmS3S/;le,cXA:HU<LUdYD\AHJkFeQdBnfg
%X=$^mbNslU(OJ>T5B4cZ6,#'g)6c+%+U?5n:e[(u!rB'0rkWb0<6j\P6,YGmOGp-#Bg-m3%[7DpMF4e2oOVHt*-?RI$8,j""?O?2
%*.eNp`hF;%!;;cTH_dfj3GG:N3&ed:I!!&p"iT-&TS\]X##525Q^5rC.4LnqHp^"gbbW([(_^:tAK;8Q@3dKTZ<Y>EnWA1-4j$F_
%km&ub`2"33!Nqqp+qgA[d>%p_D:u:5UleU:U(X#iS!8M`W!&L`pH6o=o8@3Qe3%p^L`R*.cH7M:^;c-tK/;a&MR6t2IKBc1q[@N)
%k(Z.Mj]kuCqMe%/$:sYY\amN*;DoWD.%d&p']!SAp;_U)aKX3dWFf$NQl^HnNqi8@/0Js0=enJ9-4+sq&nna2aFgXj3TPu@K'#i6
%*>+U?"Bk<:R\eAZL0d*cd&W[baX%Z3iGXGNae^,UP%)k=pf/YS[40\3)?.mc[#N??[%C]bfr5$M\328W#=0R^1n"p<q8K%$h"W<)
%/rtMponfs9s0oD:l&F_XU%\Q_&&.gP@.ZTCG)[1aYX!R!V5M1$NO1r7$7AB,J)>P?;7k9#f\P2n3K-.6-&NBcne'i9<PPa$02f'Z
%oV*PndG]]'!eeth)$SQc6#s6\r<oV6?[u=s)`N=G&9<DH4pqcG,/p4:1`&?u,_@o;>[eNr$fZ>t<&G(`7\d4R=TW>.!DZ@XN"l*K
%7-I<U*N)h,(oRg4=@5K0JML;I;k!lbH7G4=(Hk_KRKW.i[G,tU$p6htJ:8+n'd*Z(OU83(Q34.rd?m69Cpj\Hb8pP7C4h>,PVjX;
%Pf^.<QqD8GU,$;9O./-?Y#a*2GCiMVK\3FMP-[\/:gIe#pd25c4Dd<AN`mAV#a%&#Pf;d>*XrP^(-*ie`?`AJGRT^`Ktc=mj>/`$
%>]taVrkO$*#l_^sc9cGEI!'L8S`KFn6-q9o>1n0:J.o.b.Ms5WdW2uUO?B*U,eukW;4E],EP$QiO7k-9[34l7>+PtiVFf0ZPf.\_
%aG%^?_ONU7:a.4X,]Gpi?ARq&[=$3LgbDGDZ!d<bh47pGgC#%_;_]rubf`M-g$U8L,C#6W%:-`l*=<VEPCjjoO]_Of^nNB-$.s@?
%D$Ie%r[Q1N&X]uN5Q6V0&!tTNI3?mNK#m#aWIij(8adYF%q<`4;)U/5F65EE@3\*4-EY52;:HVsZkZpE6I#s84G,BY-j-B1hHjDR
%OA]'8`?:Pl`Ic<*q.OKg99Go'Q#ObUf*4_ZgW9dFW1$@)c#c8aJ$(qe!hh(K9B;]'1P&/cA1iBH4=O%rgF2EF=1rA/9gCot"guDQ
%:@&Q?>BhE710>foW15>gB,W%Y$);q-p4s]!p`*k+L\i&:!qR=L2>gc"\S<=,-%_a'l<=G=C.3bZ(B/=5[$h+m$#9/Cf=FNDU4SS*
%\gtuX8_Gp.MPC6o:5T$7P`cR<^Ef#@>J>ncpQ<W8oDfC>k%:aZ,UY<;\rpO="GdLl-*(YdWg?*X$W1eO_j,)!0\#4NZB58HZ-L=8
%R?<&DV3mCLE>5h%H3%%Q0BX5;l_VFa!"u:CB04jfR?[N]Z[sh[%./l>4u6!\kuJ-nS=J\J#$)AfWG78-/JsY-73M)mPh@7NLbu5K
%=0(1:+\[F"Wf)kWG:tIhs1F1!QVS"nPiPnSg%Mcd"$AH<>VT8hat3kdnEF[L9NmE;B@:_)_`N7M@2NLtOgg9"G?Ah-V^mM1;_tYl
%SXH#^Z9:[Xj*&&HJkn2!9E2hnPMp$r6VK[(/$"WUnJT%S!)C[u8#a%$rL#)Z6ZEKBi0#jW<kZJ:"N/P:e:IrE$O6V0M%>qK>YsX.
%DG9:t6@*SoClJYg,(*laG<:3e;+:gL(4dHu(jmUeq#K(Q;Df.$gHnhHB=13ZhW(%sAS9L5Xgk8j#9DQPhl)R)n6>5G*UWji2.188
%m?gWf)s_ZkBoc'?07#YpS_0ZC9^EG@n$N)Nn-tqS<H#!qPX]oNd$h/?\B4F29ep$3p>PPH]@H4;mQ@6`Vp>T2%uGd<M9iHT_2d:5
%^&.kaa\?`fZ>sXA0W8s?0%/j^]U9GP:M#5"[g0&,m=4hR,@WS%-j%_GY\o8",$Yrd1OS7b/CN'R'W`[!%e#_%Rjktu:>_NP=le8p
%"U4n/C]PsjZE*c*E1%#mmXf]pQd1NAqlI#M=:&pN%D1==5P9L627t9R/5:*01Xlir1DDA/0L]FZGI.KW+C#B3Tr+j+d_^a1]KNs+
%M'XNgd%dqJ1#:L#N6?4@*DP@2MaQj"+tTOeECdl!2Jd$OI`q/0hfP`PnuO);ePnKK<bpO427>PB2K6M([P,N'TZHrq2W%[\)Vt1j
%n4EI*O$ho8Zaf[#/S87Y;]Z^^UR`18lYcU,qPf<?KNjl=c)s5Rd)pj7IDRe;e7'[5-eYO'G=JH5AZ_DQ>V%qO!Efg%^e-.*HZrS0
%1[t#lHu@a\Yk`\,=d3g>_^"$S'[cEOW=P=kXTJ!i.V&^uKqgo/b"sE"DH0GdEFPVg`[em1"#51tGSo8E>]j<QWa#]i#V@t=B5s5q
%map!lQ;a?V75('5DFtr6Xdi<If.o2DIEiA@/Zbao\8>QaMU<<:n?m*3[uB7*co#Zh^=(/TfpK+_Nr,6,`p2-I#XD*Cc$_s0I&:WQ
%7%C-=kLIuli%p(9%F:iYd-%QK6\\r<TU+T,o5qBa00TU[??D0pS:7CDi4oGI1:-*i!ePFQ)\R14VhUR'oZ#G1lU<k@r#d93q%S5>
%`.uM`LAO,9;PCp?Y"M7rj3RkoB#O):EWjf03%H^YM07M!!$4C1d]Rq!FJ?6Z6h";SA7k1g,E+--)I%Aj_3lF*&cZL4Zih@C@;MCK
%C"Wq_U+hfCg=tu'VW-n%D"[pN':iHT&?U("1R`Y-(m.-qlg=jA]1S+@MQe0][R@Cn0TRI<c+E-26ID#sE9(_-45+E9]C*+%X'ZbW
%%Q0_>ghuBb%L6`&^f7mrX1BPig%Ni4]H^`=h"o$e'a<09;\BA;8\FgBoj\cgmA`746l%EOU*OE,85qfplGM^^o9,2.Zk,c[s0%Xi
%.Wb/8Lh.m-DiTFJ(f6!l]25\W&u*LS>c4\Wi&Cj9%r,Nl$M0,d#n7Id'Te3r<)T)Pi6IRrH4nE<3,d%aP.d$Hg/tR;q8ChG]Tq[r
%-jus[e>(gl?8WO'>GDrmk@%&&5\oP>iNslnFl-8P;A6WR&NBs3D_27LTZ,S;8mtE7Y^.=hX`;tE2IlF?J<YP4d9:DB9+M&@q;fI2
%)_34EV6#_.-!J_u7;Gg6g$1YbM&-;KT<3E,7Gs.Bcs.%kOP]714`BK#jYOg,/!3#$8"C87[kNic^TW.^.K08.iuc=RDtac$2[eU@
%Qb.J9^HUHOp&=sLorE;/n%RXch0o4rl-%nLqnJKt>*f!`o9W5`pK+!er:CLJk]H*/IJr<k+()eZ(Q?VHmJ~>
%AI9_PrivateDataEnd
